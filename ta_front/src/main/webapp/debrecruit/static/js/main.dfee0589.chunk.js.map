{"version":3,"sources":["component/Header.js","component/pagination/Paging.js","component/DebateList.js","component/Datepick.js","component/DebWrite.js","component/DebateView.js","App.js","index.js"],"names":["Header","className","style","marginTop","textDecoration","color","href","Paging","page","count","setPage","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","prevPageText","nextPageText","onChange","DebateList","useState","list","setList","setCount","loginInfo","setLoginInfo","loading","setLoading","word","setWord","url","setUrl","setPage1","listUrl","searchUrl","useEffect","fetch","method","credentials","then","res","json","data","console","log","lastRow","logininfo","useHistory","Alert","show","variant","Heading","Button","onClick","textAlign","marginRight","display","fontSize","fontWeight","InputGroup","Text","id","FormControl","placeholder","e","target","value","marginLeft","preventDefault","alert","margin","textDecorationColor","to","Table","responsive","hover","width","debatelist","map","debate","debate_no","debate_topic","debate_writer","member_nickName","debate_date","debate_time","debate_status","Datepick","props","startDate","setStartDate","setPickerDate","currentDate","Date","selected","date","selectedDate","showTimeSelect","minDate","filterTime","time","getDate","getHours","dateFormat","DebWrite","buttonState","setButtonState","location","state","detail","debateTime","setDebateTime","debateDate","setDebateDate","pickerDate","debate_startDate","setDiscuss1","discuss","setDiscuss2","discuss1","discuss2","editData","setEditData","setShow","history","getCurrentDate","year","getFullYear","toString","month","getMonth","day","hour","Number","parseInt","minites","getMinutes","onSubmit","Event","Debate","debate_content","headers","body","JSON","stringify","status","push","Form","Group","controlId","Control","as","custom","size","type","name","minHeight","editor","ClassicEditor","config","toolbar","items","onReady","event","getData","discuss1_no","detail_no","discuss2_no","DebateView","setDebate","setDetail","content","setContent","writeDate","setWriteDate","debDate","setDebDate","debTime","setDebTime","debWriter","setDebWriter","thumnail","setThumnail","no","useParams","discussor1","setDiscussor1","discussor2","setDiscussor2","inButton1","setInButton1","outButton1","setOutButton1","inButton2","setInButton2","outButton2","setOutButton2","modifyButton","setModifyButton","deleteButton","setdeleteButton","fetchData","a","response","member_thumb","discussor","member_no","discussFetch","dd_no","error","Image","src","height","alt","roundedCircle","readOnly","marginBottom","overflow","isReadOnly","pathname","debNo","App","Container","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfee0589.chunk.js","sourcesContent":["export default function Header() {\r\n  //const redirect = window.location.replace(\"/\");\r\n  return (\r\n    <div className=\"header\" style={{ marginTop: \"10px\" }}>\r\n      <a\r\n        style={{ textDecoration: \"none\", color: \"black\" }}\r\n        href={\"/ta_front/debrecruit.html\"}\r\n      >\r\n        <h1>토론 모집</h1>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Paging.css\";\r\nimport Pagination from \"react-js-pagination\";\r\nconst Paging = ({ page, count, setPage }) => {\r\n  return (\r\n    <Pagination\r\n      activePage={page}\r\n      itemsCountPerPage={5}\r\n      totalItemsCount={count}\r\n      pageRangeDisplayed={5}\r\n      prevPageText={\"‹\"}\r\n      nextPageText={\"›\"}\r\n      onChange={setPage}\r\n    />\r\n  );\r\n};\r\nexport default Paging;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Paging from \"./pagination/Paging\";\r\nimport { InputGroup, FormControl, Alert } from \"react-bootstrap\";\r\n\r\nexport default function DebateList() {\r\n  const [list, setList] = useState({});\r\n  const [page, setPage] = useState(1);\r\n  const [count, setCount] = useState(1);\r\n  const [loginInfo, setLoginInfo] = useState();\r\n  const [writeButton, setwriteButton] = useState(false);\r\n  const pageSize = 5;\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  //const pageNo = page;\r\n  //console.log(pageNo);\r\n  const [word, setWord] = useState();\r\n  const [url, setUrl] = useState(\r\n    `http://localhost:9999/ta_back/debrecruit/list?pageNo=${page}&pageSize=${pageSize}`\r\n  );\r\n  const search = (e) => {\r\n    setWord(e.target.value);\r\n  };\r\n  const btnsearch = (e) => {\r\n    //const searchUrl = `http://localhost:9999/ta_back/debrecruit/list/${word}?pageNo=${page}&pageSize=${pageSize}`;\r\n    if (word) {\r\n      setPage1(1);\r\n      //setUrl(url);\r\n    } else {\r\n      e.preventDefault();\r\n      alert(\"검색어를 입력해주세요\");\r\n    }\r\n  };\r\n  function setPage1(page) {\r\n    const listUrl = `http://localhost:9999/ta_back/debrecruit/list?pageNo=${page}&pageSize=${pageSize}`;\r\n    const searchUrl = `http://localhost:9999/ta_back/debrecruit/list/${word}?pageNo=${page}&pageSize=${pageSize}`;\r\n    // console.log(url);\r\n    // console.log(page);\r\n    if (word) {\r\n      setUrl(searchUrl);\r\n      setPage(page);\r\n    } else {\r\n      setUrl(listUrl);\r\n      setPage(page);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"--->\", data);\r\n        setList(data);\r\n        setCount(data.lastRow);\r\n        setLoginInfo(data.logininfo);\r\n        console.log(\"로그인정보->\", loginInfo);\r\n        setLoading(false);\r\n      });\r\n  }, [url]);\r\n\r\n  function login() {\r\n    // const mem = { member_social_no: \"118153287897731040607\" };\r\n    fetch(\r\n      \"http://localhost:9999/ta_back/member/login?socialNo=118153287897731040607\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          member_social_no: \"118153287897731040607\",\r\n        }),\r\n        credentials: \"include\",\r\n      }\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setLoginInfo(data.member);\r\n        console.log(\"--->\", data);\r\n        // console.log(\"로그인완료\", loginInfo);\r\n        if (loginInfo) {\r\n          setwriteButton(writeButton);\r\n        } else {\r\n          setwriteButton(false);\r\n        }\r\n      });\r\n  }\r\n  const history = useHistory();\r\n  function logout() {\r\n    // const mem = { member_social_no: \"118153287897731040607\" };\r\n    fetch(\"http://localhost:9999/ta_back/member/logout\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        member_social_no: \"118153287897731040607\",\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setLoginInfo(data.member);\r\n        console.log(\"--->\", data);\r\n\r\n        history.push(\"/ta_front/debrecruit.html\");\r\n        // console.log(\"로그인완료\", loginInfo);\r\n        if (loginInfo) {\r\n          setwriteButton(writeButton);\r\n        } else {\r\n          setwriteButton(false);\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <button onClick={login}>로긴81</button>\r\n      <button onClick={logout}>로그아웃</button> */}\r\n      {loading ? (\r\n        <Alert show={loading} variant=\"success\">\r\n          <Alert.Heading>로딩중입니다!</Alert.Heading>\r\n          <p>\r\n            네트워크가 불안정 합니다.\r\n            <br /> 잠시만 기다려주세요\r\n          </p>\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button onClick={() => setLoading(false)} variant=\"outline-success\">\r\n              Close\r\n            </Button>\r\n          </div>\r\n        </Alert>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div\r\n        style={{\r\n          textAlign: \"right\",\r\n          marginRight: \"10px\",\r\n          display: \"block\",\r\n        }}\r\n      >\r\n        <label style={{ fontSize: \"15pt\", fontWeight: \"600\" }}>\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n              검색\r\n            </InputGroup.Text>\r\n\r\n            <FormControl\r\n              aria-label=\"Default\"\r\n              aria-describedby=\"inputGroup-sizing-default\"\r\n              placeholder=\"제목&내용\"\r\n              onChange={search}\r\n            />\r\n          </InputGroup>\r\n          {/* 검색\r\n          <input\r\n            className=\"word\"\r\n            style={{ width: \"300px\", margin: \"10px\", fontSize: \"14pt\" }}\r\n            placeholder=\"제목&내용을 입력해주세요.\"\r\n            onChange={search}\r\n          ></input> */}\r\n        </label>\r\n\r\n        <Button\r\n          style={{ marginLeft: \"10px\" }}\r\n          className=\"buttons\"\r\n          variant=\"success\"\r\n          onClick={btnsearch}\r\n        >\r\n          검색\r\n        </Button>\r\n      </div>\r\n      {loginInfo !== \"non-member\" && (\r\n        <div\r\n          className=\"divButton\"\r\n          style={{ textAlign: \"right\", margin: \"10px\" }}\r\n        >\r\n          <Link\r\n            className=\"write\"\r\n            style={{ textDecoration: \"none\", textDecorationColor: \"black\" }}\r\n            to={\"/ta_front/debrecruit/write\"}\r\n          >\r\n            <Button className=\"buttons\" variant=\"success\">\r\n              토론 작성\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n      <Table responsive=\"xl\" hover>\r\n        <thead>\r\n          <tr style={{ fontSize: \"14pt\" }}>\r\n            <th style={{ width: \"10%\" }}>토론번호</th>\r\n            <th style={{ width: \"25%\" }}>토론제목</th>\r\n            <th style={{ width: \"10%\" }}>작성자</th>\r\n            <th style={{ width: \"15%\" }}>작성시간</th>\r\n            <th style={{ width: \"10%\" }}>토론시간</th>\r\n            <th style={{ width: \"10%\" }}>진행상태</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {list.debatelist?.map((debate) => (\r\n            <tr key={debate.debate_no}>\r\n              <td>{debate.debate_no}</td>\r\n              <td>\r\n                <Link to={`/ta_front/debrecruit/${debate.debate_no}`}>\r\n                  {debate.debate_topic}\r\n                </Link>\r\n              </td>\r\n              <td>{debate.debate_writer.member_nickName}</td>\r\n              <td>{debate.debate_date}</td>\r\n              <td>{debate.debate_time}</td>\r\n              <td>{debate.debate_status}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <div className=\"paging\">\r\n        <Paging page={page} count={count} setPage={setPage1} />\r\n      </div>\r\n      {/* <Button variant=\"success\">\r\n        status : {list.status ? list.status : \"로딩\"}\r\n      </Button> */}\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst Datepick = (props) => {\r\n  const [startDate, setStartDate] = useState();\r\n\r\n  useEffect(() => {\r\n    console.log(\r\n      \"props.setPickerDate\",\r\n      props.setPickerDate,\r\n      \"startDate\",\r\n      startDate\r\n    );\r\n    setStartDate(props.setPickerDate);\r\n  }, [props?.setPickerDate]);\r\n\r\n  //console.log(\"선택일 : \", startDate);\r\n  const ocDatePicker = (date) => {\r\n    console.log(\"date\", date);\r\n    setStartDate(date);\r\n    props.selectedDate(date); //부모로 pops전송\r\n    // props.setDate(date);\r\n    // console.log(\"props.setDate(date)\", props.setDate);\r\n    // props.date = startDate;\r\n  };\r\n  const filterPassedTime = (time) => {\r\n    //console.log(time.getDate());\r\n    const currentDate = new Date();\r\n    const selectedDate = new Date(time);\r\n    // console.log(currentDate.getHours() + 1);\r\n    if (currentDate.getDate() < selectedDate.getDate()) {\r\n      //console.log(selectedDate.getHours());\r\n      return currentDate.getHours();\r\n    } else {\r\n      return currentDate.getHours() + 1 < selectedDate.getHours();\r\n    }\r\n  };\r\n  const currentDate = new Date();\r\n  return (\r\n    <DatePicker\r\n      selected={startDate}\r\n      onChange={ocDatePicker}\r\n      showTimeSelect\r\n      minDate={currentDate}\r\n      filterTime={filterPassedTime}\r\n      //minTime={setHours(setMinutes(new Date(), 0), 17)}\r\n      dateFormat=\"yyyy/MM/dd/ h:mm aa\"\r\n    >\r\n      <div style={{ color: \"green\", fontSize: \"15pt\" }}>토론 가능 시간</div>\r\n    </DatePicker>\r\n  );\r\n};\r\n\r\nexport default Datepick;\r\n","import { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\n\r\nimport { Button, Form, Alert } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Datepick from \"./Datepick\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n// import AlertDismissible from \"./AlertDismissible\";\r\n\r\nexport default function DebWrite(props) {\r\n  const [buttonState, setButtonState] = useState(true);\r\n  const debate = props?.location?.state.debate;\r\n  const detail = props?.location?.state.detail;\r\n  const [debateTime, setDebateTime] = useState(\"30\");\r\n  const [debateDate, setDebateDate] = useState();\r\n  const [pickerDate, setPickerDate] = useState();\r\n  const ocDebateDate = (e) => {\r\n    //시작날짜 설정\r\n    //  console.log(getCurrentDate(e));\r\n    //const year = e.getYears\r\n    //setDebateDate(getCurrentDate(e));\r\n    // console.log(\"debateDate\", debateDate);\r\n    console.log(\"pickerDate\", pickerDate);\r\n  };\r\n  const getPickerDate = (date) => {\r\n    setDebateDate(getCurrentDate(date));\r\n    console.log(\r\n      \"getPickerDate\",\r\n      date,\r\n      getCurrentDate(date),\r\n      \"=>\",\r\n      new Date(getCurrentDate(date))\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props?.location) {\r\n      //편집\r\n      setPickerDate(new Date(debate.debate_startDate));\r\n      setButtonState(false);\r\n      setDiscuss1(detail[0]?.discuss);\r\n      setDiscuss2(detail[1]?.discuss);\r\n      setDebateTime(debate?.debate_time);\r\n      console.log(\"setDebateDate\", new Date(debate?.debate_startDate));\r\n      setDebateDate(new Date(debate?.debate_startDate));\r\n      // discuss2 = detail[1]?.discuss;\r\n      console.log(\"편집\", props?.location.state);\r\n      console.log(\"=>\", detail[0]);\r\n    }\r\n  }, [props]);\r\n  const [discuss1, setDiscuss1] = useState(\"\");\r\n  const [discuss2, setDiscuss2] = useState(\"\");\r\n  // const editDiscuss1 = detail[0]?.discuss;\r\n  // const editDiscuss2 = detail[1]?.discuss;\r\n\r\n  const [editData, setEditData] = useState(\"\");\r\n  // const [ckeditor, setCkeditor] = useState({}); //ckeditor 객체\r\n\r\n  const [show, setShow] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const [loginInfo, setLoginInfo] = useState();\r\n  const [writeButton, setwriteButton] = useState(false);\r\n\r\n  const ocDiscuss1 = (e) => {\r\n    //console.log(discuss1);\r\n    setDiscuss1(e.target.value);\r\n  };\r\n  const ocDiscuss2 = (e) => {\r\n    setDiscuss2(e.target.value);\r\n  };\r\n  const debWrite = (Event) => {\r\n    Event.preventDefault();\r\n    //console.log(Event.target);\r\n    console.log(discuss1, \" / \", discuss2);\r\n    console.log(\"에디터->\", editData);\r\n    if (\r\n      debateDate === \"\" ||\r\n      editData === \"\" ||\r\n      discuss1 === \"\" ||\r\n      discuss2 === \"\"\r\n    ) {\r\n      // AlertDismissibleExample();\r\n      setShow(true);\r\n      // alert(\"모두 입력해주세요\");\r\n    } else {\r\n      const Debate = {\r\n        //debate_no: 1,\r\n        debate_content: editData,\r\n        debate_topic: discuss1 + \" VS \" + discuss2,\r\n        discuss1: discuss1,\r\n        discuss2: discuss2,\r\n        debateDate: debateDate,\r\n        debateTime: debateTime,\r\n      };\r\n      // const detail = { discuss: discuss1 };\r\n      //const data = { Debate, detail };\r\n      //console.log(data);\r\n\r\n      const url = `http://localhost:9999/ta_back/debrecruit/write`;\r\n      fetch(url, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(Debate),\r\n        credentials: \"include\",\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          if (data.status == 1) {\r\n            console.log(\"결과->\", data);\r\n            history.push(\"/ta_front/debrecruit.html\");\r\n          } else if (data.status == 0) {\r\n            alert(\"작성실패\");\r\n          }\r\n        });\r\n      console.log(Debate);\r\n    }\r\n  };\r\n  const debModify = (e) => {\r\n    //토론 수정\r\n    console.log(e);\r\n    // Event.preventDefault();\r\n    //console.log(Event.target);\r\n    console.log(discuss1, \" / \", discuss2);\r\n    console.log(\"에디터->\", editData);\r\n    if (\r\n      debateDate === \"\" ||\r\n      editData === \"\" ||\r\n      discuss1 === \"\" ||\r\n      discuss2 === \"\"\r\n    ) {\r\n      // AlertDismissibleExample();\r\n      setShow(true);\r\n      // alert(\"모두 입력해주세요\");\r\n    } else {\r\n      const Debate = {\r\n        debate_no: debate.debate_no,\r\n        debate_content: editData,\r\n        debate_topic: discuss1 + \" VS \" + discuss2,\r\n        discuss1_no: detail[0].detail_no,\r\n        discuss2_no: detail[1].detail_no,\r\n        discuss1: discuss1,\r\n        discuss2: discuss2,\r\n        debateDate: getCurrentDate(debateDate),\r\n        debateTime: debateTime,\r\n      };\r\n\r\n      const url = `http://localhost:9999/ta_back/debrecruit/update`;\r\n      fetch(url, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(Debate),\r\n        credentials: \"include\",\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          if (data.status == 1) {\r\n            console.log(\"결과->\", data);\r\n            history.push(\"/ta_front/debrecruit.html\");\r\n          } else if (data.status == 0) {\r\n            alert(\"작성실패\");\r\n          }\r\n        });\r\n      console.log(\"Debate\", Debate);\r\n    }\r\n  };\r\n  const changeEditor = (event, editor) => {\r\n    const data = editor.getData();\r\n    setEditData(data);\r\n    console.log(data);\r\n    //console.log({ event, editor, data });\r\n  };\r\n  function getCurrentDate(e) {\r\n    //현재시간 구하는 함수\r\n    var date = new Date(e);\r\n    var year = date.getFullYear().toString();\r\n    var month = date.getMonth() + 1;\r\n    month = month < 10 ? \"0\" + month.toString() : month.toString();\r\n    var day = date.getDate();\r\n    day = day < 10 ? \"0\" + day.toString() : day.toString();\r\n    var hour = date.getHours();\r\n    hour = hour < 10 ? \"0\" + hour.toString() : hour.toString();\r\n    if (Number.parseInt(hour) + 1 === 24) {\r\n      hour = \"00\";\r\n    }\r\n    var minites = date.getMinutes();\r\n    minites = minites < 10 ? \"0\" + minites.toString() : minites.toString();\r\n\r\n    return year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minites + \":00\"; // 현재시간보다 1시간 추가 ,최소 시작시간은 한시간 뒤부터 가능.\r\n  }\r\n  const setDate = () => {};\r\n  const ocDebateTime = (e) => {\r\n    //토론제한시간 설정..\r\n    setDebateTime(e.target.value);\r\n    // console.log(\"e.target\", e.target.value);\r\n  };\r\n  function login() {\r\n    // const mem = { member_social_no: \"118153287897731040607\" };\r\n    fetch(\r\n      \"http://localhost:9999/ta_back/member/login?socialNo=118153287897731040607\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          member_social_no: \"118153287897731040607\",\r\n        }),\r\n        credentials: \"include\",\r\n      }\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setLoginInfo(data.member);\r\n        console.log(\"--->\", data);\r\n        // console.log(\"로그인완료\", loginInfo);\r\n        if (loginInfo) {\r\n          setwriteButton(writeButton);\r\n        } else {\r\n          setwriteButton(false);\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <button onClick={login}>로긴</button> */}\r\n      {/* https://www.youtube.com/watch?v=_-vCsD7jHh4 */}\r\n      {/* <button onClick={click}>버튼</button> */}\r\n      <Alert show={show} variant=\"success\">\r\n        <Alert.Heading>빈칸이 있습니다!</Alert.Heading>\r\n        <p>토론 일자, 주장, 내용을 확인해주세요^___^</p>\r\n        <div className=\"d-flex justify-content-end\">\r\n          <Button onClick={() => setShow(false)} variant=\"outline-success\">\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </Alert>\r\n      <div className=\"writeView\">\r\n        <form onSubmit={debWrite}>\r\n          <div className=\"debDate\" style={{ fontSize: \"10pt\" }}>\r\n            <label className=\"labelDebDate\">\r\n              토론일자\r\n              <Datepick\r\n                setPickerDate={pickerDate}\r\n                // onChange={setDate1}\r\n                // setDate={ocDebateDate}\r\n                // startDate={debateDate}\r\n                selectedDate={getPickerDate}\r\n              />\r\n            </label>\r\n            <label className=\"labelDebDate\">\r\n              토론제한시간\r\n              <br />\r\n              <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  onChange={ocDebateTime}\r\n                  value={debateTime}\r\n                  custom\r\n                >\r\n                  <option value=\"30\">30분</option>\r\n                  <option value=\"60\">60분</option>\r\n                  <option value=\"120\">120분</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              {/* <select\r\n                id=\"selectDebate_time\"\r\n                name=\"selectDebate_time\"\r\n                onChange={ocDebateTime}\r\n                value={debateTime}\r\n              >\r\n                <option value=\"30\">30분</option>\r\n                <option value=\"60\">60분</option>\r\n                <option value=\"120\">120분</option>\r\n              </select> */}\r\n            </label>\r\n          </div>\r\n          <div className=\"divDiscuss\" style={{ width: \"100%\" }}>\r\n            <label className=\"labelDiscuss\">\r\n              주장 1 <br />\r\n              <Form.Control\r\n                size=\"lg\"\r\n                type=\"text\"\r\n                className=\"inputDiscuss1\"\r\n                name=\"discuss1\"\r\n                style={{ width: \"100%\" }}\r\n                onChange={ocDiscuss1}\r\n                value={discuss1}\r\n              />\r\n              {/* <input\r\n                className=\"inputDiscuss1\"\r\n                name=\"discuss1\"\r\n                style={{ width: \"100%\" }}\r\n                onChange={ocDiscuss1}\r\n                vlaue={discuss1}\r\n              ></input> */}\r\n            </label>\r\n            <label className=\"vs\"> VS </label>\r\n            <label className=\"labelDiscuss\">\r\n              주장 2 <br />\r\n              <Form.Control\r\n                size=\"lg\"\r\n                type=\"text\"\r\n                className=\"inputDiscuss2\"\r\n                name=\"discuss2\"\r\n                style={{ width: \"100%\" }}\r\n                onChange={ocDiscuss2}\r\n                value={discuss2}\r\n              />\r\n              {/* <input\r\n                className=\"inputDiscuss2\"\r\n                name=\"discuss2\"\r\n                style={{ width: \"100%\" }}\r\n                onChange={ocDiscuss2}\r\n                vlaue={discuss2}\r\n              ></input> */}\r\n            </label>\r\n          </div>\r\n          <div className=\"divEditor\" style={{ minHeight: \"00px\" }}>\r\n            <CKEditor\r\n              editor={ClassicEditor}\r\n              data={debate?.debate_content}\r\n              config={{\r\n                toolbar: {\r\n                  items: [\r\n                    \"heading\",\r\n                    \"|\",\r\n\r\n                    \"bold\",\r\n                    \"italic\",\r\n\r\n                    \"link\",\r\n                    \"bulletedList\",\r\n                    \"numberedList\",\r\n                    \"|\",\r\n\r\n                    \"blockQuote\",\r\n                    \"insertTable\",\r\n                    \"mediaEmbed\",\r\n                    \"undo\",\r\n                    \"redo\",\r\n                  ],\r\n                },\r\n\r\n                // toolbar: [\r\n                //   \"heading\",\r\n                //   \"|\",\r\n                //   \"bold\",\r\n                //   \"italic\",\r\n                //   \"link\",\r\n                //   \"bulletedList\",\r\n                //   \"numberedList\",\r\n                //   \"|\",\r\n                //   \"outdent\",\r\n                //   \"indent\",\r\n                //   \"|\",\r\n                //   \"blockQuote\",\r\n                //   \"insertTable\",\r\n                //   \"mediaEmbed\",\r\n                //   \"undo\",\r\n                //   \"redo\",\r\n                // ],\r\n                placeholder: \"내용을 입력해주세요\",\r\n              }}\r\n              onReady={(editor) => {\r\n                //setCkeditor(editor);\r\n                //editor.isReadOnly = { readOnly };\r\n                // You can store the \"editor\" and use when it is needed.\r\n                //console.log(\"Editor is ready to use!\", editor);\r\n              }}\r\n              onChange={changeEditor}\r\n              // onBlur={(event, editor) => {\r\n              //   console.log(\"Blur.\", editor);\r\n              // }}\r\n              // onFocus={(event, editor) => {\r\n              //   console.log(\"Focus.\", editor);\r\n              // }}\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"divWriteButton\"\r\n            style={{ textAlign: \"right\", display: \"inline-block\" }}\r\n          >\r\n            {buttonState ? (\r\n              <Button\r\n                className=\"buttonWrite\"\r\n                variant=\"outline-success\"\r\n                size=\"sm\"\r\n                style={{ margin: \"10px\" }}\r\n                type=\"submit\"\r\n              >\r\n                작성하기\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                className=\"buttonWrite\"\r\n                variant=\"outline-success\"\r\n                size=\"sm\"\r\n                style={{ margin: \"10px\" }}\r\n                onClick={debModify}\r\n              >\r\n                수정하기\r\n              </Button>\r\n            )}\r\n            <Link to=\"/ta_front/debrecruit.html\">\r\n              <Button\r\n                className=\"buttonBack\"\r\n                variant=\"outline-success\"\r\n                size=\"sm\"\r\n                style={{ margin: \"10px\" }}\r\n              >\r\n                돌아가기\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useParams, useHistory } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport { Button, Image } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n// import debWri\r\n\r\nexport default function DebateView() {\r\n  // const [list, setList] = useState({});\r\n  // const [ckeditor, setCkeditor] = useState({}); //ckeditor 객체\r\n  // const [comp, setComp] = useState(DebWrite);\r\n  const [debate, setDebate] = useState();\r\n  const [detail, setDetail] = useState();\r\n  const [discuss1, setDiscuss1] = useState(false);\r\n  const [discuss2, setDiscuss2] = useState(false);\r\n  const [content, setContent] = useState(\"\");\r\n  const [writeDate, setWriteDate] = useState(\"\");\r\n  const [debDate, setDebDate] = useState(\"\");\r\n  const [debTime, setDebTime] = useState(\"\");\r\n  const [debWriter, setDebWriter] = useState(\"\");\r\n  const [thumnail, setThumnail] = useState(\"\");\r\n  const { no } = useParams();\r\n  const [discussor1, setDiscussor1] = useState();\r\n  const [discussor2, setDiscussor2] = useState();\r\n  const [inButton1, setInButton1] = useState(false);\r\n  const [outButton1, setOutButton1] = useState(false);\r\n  const [inButton2, setInButton2] = useState(false);\r\n  const [outButton2, setOutButton2] = useState(false);\r\n  const [modifyButton, setModifyButton] = useState(false);\r\n  const [deleteButton, setdeleteButton] = useState(false);\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loginInfo, setLoginInfo] = useState({});\r\n\r\n  const url = `http://localhost:9999/ta_back/debrecruit/${no}`;\r\n  //console.log(\"url : \", url);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const fetchData = async () => {\r\n      fetch(url, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((response) => {\r\n          console.log(\"뷰-->\", response);\r\n          //setList(response);\r\n          setDebate(response.debate.debate);\r\n          setDetail(response.debate.detail);\r\n          setThumnail(response.debate.debate.debate_writer.member_thumb);\r\n          setDebDate(response.debate.debate.debate_startDate);\r\n          setDebWriter(response.debate.debate.debate_writer.member_nickName);\r\n          setDebTime(response.debate.debate.debate_time);\r\n          setWriteDate(response.debate.debate.debate_date);\r\n          setDiscuss1(response.debate.detail[0].discuss);\r\n          setDiscuss2(response.debate.detail[1].discuss);\r\n          setContent(response.debate.debate.debate_content);\r\n          setLoginInfo(response.logininfo);\r\n          setDiscussor1(response.debate.detail[0]?.discussor);\r\n          setDiscussor2(response.debate.detail[1]?.discussor);\r\n          setLoading(false);\r\n        });\r\n    };\r\n\r\n    if (loginInfo && debate && detail) {\r\n      //console.log(\"==>\", loginInfo);\r\n      // console.log(\r\n      //   \"**dis1=>\",\r\n      //   discussor1,\r\n      //   \"dis2=>\",\r\n      //   discussor2,\r\n      //   \"logininfo=>\",\r\n      //   loginInfo,\r\n      //   \"debate\",\r\n      //   debate,\r\n      //   \"detail\",\r\n      //   detail\r\n      // );\r\n      if (debate?.debate_status !== \"모집중\") {\r\n        // console.log(\"모집중 아님\", debate?.debate_status);\r\n        setModifyButton(false);\r\n        setdeleteButton(false);\r\n        setOutButton1(false);\r\n        setOutButton1(false);\r\n        setInButton1(false);\r\n        setInButton1(false);\r\n      } else {\r\n        console.log(\"모집중\");\r\n        if (\r\n          //수정 삭제 버튼 시작\r\n          loginInfo !== \"non-member\" &&\r\n          debWriter === loginInfo?.member_nickName\r\n        ) {\r\n          setModifyButton(true);\r\n          setdeleteButton(true);\r\n        } else {\r\n          setModifyButton(false);\r\n          setdeleteButton(false);\r\n        } //수정 삭제 버튼 끝\r\n        //\r\n        //참여버튼 시작\r\n        if (\r\n          detail[1].discussor?.member_no !== loginInfo?.member_no &&\r\n          detail[0].discussor === null\r\n        ) {\r\n          console.log(\"discussor1\", discussor1);\r\n          setInButton1(true);\r\n          // setInButton2(true);\r\n          if (\r\n            loginInfo !== \"non-member\" &&\r\n            detail[1].discussor?.member_no !== loginInfo?.member_no\r\n          ) {\r\n            console.log(\r\n              \"discussor2?.member_no != loginInfo?.member_no\",\r\n              discussor2?.member_no\r\n            );\r\n            setInButton1(true);\r\n          }\r\n        } else if (\r\n          loginInfo !== \"non-member\" &&\r\n          detail[0].discussor?.member_no === loginInfo?.member_no\r\n        ) {\r\n          console.log(\r\n            \"discussor1?.member_no == loginInfo?.member_no\",\r\n            discussor1\r\n          );\r\n          setOutButton1(true);\r\n          setInButton1(false);\r\n          setInButton2(false);\r\n        } else {\r\n          console.log(\r\n            \"else discussor1\",\r\n            \"**dis1=>\",\r\n            discussor1,\r\n            \"dis2=>\",\r\n            discussor2,\r\n            \"logininfo=>\",\r\n            loginInfo,\r\n            \"debate\",\r\n            debate,\r\n            \"detail\",\r\n            detail\r\n          );\r\n          setInButton1(false);\r\n        }\r\n        if (\r\n          (detail[0].discussor?.member_no !== loginInfo?.member_no &&\r\n            detail[1].discussor) === null\r\n        ) {\r\n          console.log(\"discussor2\", discussor2);\r\n          // setInButton1(true);\r\n          setInButton2(true);\r\n          if (\r\n            loginInfo !== \"non-member\" &&\r\n            detail[0].discussor?.member_no !== loginInfo?.member_no\r\n          ) {\r\n            console.log(\r\n              \"discussor1?.member_no != loginInfo?.member_no\",\r\n              discussor1\r\n            );\r\n            setInButton2(true);\r\n          }\r\n        } else if (\r\n          loginInfo !== \"non-member\" &&\r\n          detail[1].discussor?.member_no === loginInfo?.member_no\r\n        ) {\r\n          console.log(\r\n            \"discussor2?.member_no == loginInfo?.member_no\",\r\n            discussor1\r\n          );\r\n          setOutButton2(true);\r\n          setInButton1(false);\r\n          setInButton2(false);\r\n        } else {\r\n          // console.log(\r\n          //   \"else discussor2\",\r\n          //   \"**dis1=>\",\r\n          //   discussor1,\r\n          //   \"dis2=>\",\r\n          //   discussor2,\r\n          //   \"logininfo=>\",\r\n          //   loginInfo,\r\n          //   \"debate\",\r\n          //   debate,\r\n          //   \"detail\",\r\n          //   detail\r\n          // );\r\n          setInButton2(false);\r\n        }\r\n        // console.log(\r\n        //   \"END dis1=>\",\r\n        //   discussor1,\r\n        //   \"dis2=>\",\r\n        //   discussor2,\r\n        //   \"logininfo=>\",\r\n        //   loginInfo\r\n        // );\r\n      }\r\n    } else {\r\n      // console.log(\"else logininfo\", loginInfo);\r\n    }\r\n    fetchData();\r\n  }, [loginInfo?.member_no]);\r\n\r\n  const debDelete = () => {\r\n    console.log(\"삭제\");\r\n    const url = \"http://localhost:9999/ta_back/debrecruit/delete\";\r\n    fetch(url, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ debNo: `${no}` }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((response) => {\r\n        if (response.status == 1) {\r\n          alert(\"삭제완료\");\r\n          history.push(\"/ta_front/debrecruit.html\");\r\n        } else {\r\n          alert(\"삭제실패\", response.error);\r\n        }\r\n      });\r\n  };\r\n  function discussFetch(method, dd_no, member_no) {\r\n    const url = \"http://localhost:9999/ta_back/debrecruit/\";\r\n    fetch(url + method, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ dd_no: dd_no, member_no: member_no }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((response) => {\r\n        if (response.status == 1) {\r\n          alert(\"수정완료\");\r\n          history.push(\"/ta_front/debrecruit.html\");\r\n        } else {\r\n          alert(\"수정실패\", response.error);\r\n        }\r\n      });\r\n  }\r\n  const discuss1Button = (e) => {\r\n    // console.log(\"discuss1Button\", e);\r\n    discussFetch(\"discussor\", detail[0].detail_no, loginInfo.member_no);\r\n  };\r\n  const discuss2Button = (e) => {\r\n    // console.log(\"discuss2Button\", e);\r\n    discussFetch(\"discussor\", detail[1].detail_no, loginInfo.member_no);\r\n  };\r\n  const disCancle1Button = (e) => {\r\n    discussFetch(\"canclediscussor\", detail[0].detail_no, loginInfo.member_no);\r\n  };\r\n  const disCancle2Button = (e) => {\r\n    discussFetch(\"canclediscussor\", detail[1].detail_no, loginInfo.member_no);\r\n  };\r\n\r\n  function login() {\r\n    console.log(history);\r\n    const social = \"37612893746\";\r\n    fetch(\"http://localhost:9999/ta_back/member/login?socialNo=\" + social, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        member_social_no: \"1775421132\",\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setLoginInfo(data.member);\r\n        // console.log(\"로그인--->\", data);\r\n        // console.log(\"로그인완료\", loginInfo);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* 로그인 번호 : {loginInfo?.member_no} / {loginInfo?.member_nickName} */}\r\n      {loading ? <div>Loading...</div> : \"\"}\r\n      {/* <button onClick={login}>로긴1</button> */}\r\n      {/* <button onClick={logo}>버튼</button> */}\r\n      <div className=\"writeView\" style={{ marginTop: \"50px\" }}>\r\n        <div\r\n          className=\"divDiscuss\"\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"inline\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"writeInfo\"\r\n            style={{\r\n              display: \"inline-block\",\r\n              width: \"20%\",\r\n              textAlign: \"left\",\r\n              fontWeight: \"800\",\r\n            }}\r\n          >\r\n            <label>작성자: {debWriter}</label>\r\n            <Image\r\n              src={thumnail}\r\n              style={{ height: \"50px\", marginLeft: \"20px\" }}\r\n              alt={\"썸네일\"}\r\n              roundedCircle\r\n            />\r\n\r\n            <label>작성시간 : {writeDate}</label>\r\n          </div>\r\n          <label className=\"labelDiscuss\" style={{ width: \"20%\" }}>\r\n            주장 1 <br />\r\n            <input\r\n              className=\"inputDiscuss1\"\r\n              name=\"discuss1\"\r\n              value={discuss1}\r\n              style={{ textAlign: \"center\", width: \"100%\" }}\r\n              readOnly\r\n            ></input>\r\n            {discussor1?.member_nickName ? (\r\n              <p style={{ marginTop: \"10px\", fontSize: \"17pt\" }}>\r\n                토론자 : {discussor1?.member_nickName}\r\n                <Image\r\n                  src={discussor1?.member_thumb}\r\n                  style={{ height: \"30px\", marginLeft: \"10px\" }}\r\n                  alt={\"썸네일\"}\r\n                  roundedCircle\r\n                />\r\n              </p>\r\n            ) : (\r\n              <p style={{ fontSize: \"15pt\", margin: \"5px\", color: \"red\" }}>\r\n                참여가능\r\n              </p>\r\n            )}\r\n            {outButton1 && (\r\n              <Button variant=\"warning\" onClick={disCancle1Button}>\r\n                참여취소\r\n              </Button>\r\n            )}\r\n            {inButton1 && (\r\n              <Button variant=\"outline-success\" onClick={discuss1Button}>\r\n                토론자1 참여\r\n              </Button>\r\n            )}\r\n          </label>\r\n          <label className=\"vs\" style={{ textAlign: \"center\", width: \"10%\" }}>\r\n            {\" \"}\r\n            VS{\" \"}\r\n          </label>\r\n          <label className=\"labelDiscuss\" style={{ width: \"20%\" }}>\r\n            주장 2 <br />\r\n            <input\r\n              className=\"inputDiscuss2\"\r\n              name=\"discuss2\"\r\n              value={discuss2}\r\n              style={{ textAlign: \"center\", width: \"100%\" }}\r\n              readOnly\r\n            ></input>\r\n            {discussor2?.member_nickName ? (\r\n              <p style={{ marginTop: \"10px\", fontSize: \"17pt\" }}>\r\n                토론자 : {discussor2?.member_nickName}\r\n                <Image\r\n                  src={discussor2?.member_thumb}\r\n                  style={{ height: \"30px\", marginLeft: \"10px\" }}\r\n                  alt={\"썸네일\"}\r\n                  roundedCircle\r\n                />\r\n              </p>\r\n            ) : (\r\n              <p style={{ fontSize: \"15pt\", margin: \"5px\", color: \"red\" }}>\r\n                참여 가능\r\n              </p>\r\n            )}\r\n            {outButton2 && (\r\n              <Button variant=\"warning\" onClick={disCancle2Button}>\r\n                참여취소\r\n              </Button>\r\n            )}\r\n            {inButton2 && (\r\n              <Button variant=\"outline-success\" onClick={discuss2Button}>\r\n                토론자2 참여\r\n              </Button>\r\n            )}\r\n          </label>\r\n          <div\r\n            className=\"debInfo\"\r\n            style={{\r\n              display: \"inline-block\",\r\n              width: \"25%\",\r\n              margin: \"0px 10px\",\r\n            }}\r\n          >\r\n            <label style={{ marginBottom: \"10px\", fontWeight: \"600\" }}>\r\n              토론일자 :\r\n              <input\r\n                className=\"debDate\"\r\n                value={debDate}\r\n                style={{ textAlign: \"center\", marginLeft: \"10px\" }}\r\n                readOnly\r\n              ></input>\r\n            </label>\r\n            <label style={{ marginBottom: \"10px\", fontWeight: \"600\" }}>\r\n              토론시간 :\r\n              <input\r\n                className=\"debTime\"\r\n                value={debTime}\r\n                style={{ textAlign: \"center\", marginLeft: \"10px\" }}\r\n                readOnly\r\n              ></input>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"divEditor\" style={{ overflow: \"auto\" }}>\r\n          <CKEditor\r\n            editor={ClassicEditor}\r\n            data={content}\r\n            config={{\r\n              toolbar: [],\r\n            }}\r\n            onReady={(editor) => {\r\n              editor.isReadOnly = true;\r\n\r\n              //setCkeditor(editor);\r\n              //editor.isReadOnly = { readOnly };\r\n              // You can store the \"editor\" and use when it is needed.\r\n              //console.log(\"Editor is ready to use!\", editor);\r\n            }}\r\n            // onChange={changeEditor}\r\n            // onBlur={(event, editor) => {\r\n            //   console.log(\"Blur.\", editor);\r\n            // }}\r\n            // onFocus={(event, editor) => {\r\n            //   console.log(\"Focus.\", editor);\r\n            // }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"divWriteButton\" style={{ textAlign: \"right\" }}>\r\n          {modifyButton && (\r\n            <Link\r\n              to={{\r\n                pathname: `/ta_front/debrecruit/modify`,\r\n                state: { debate: debate, detail: detail },\r\n              }}\r\n            >\r\n              <Button\r\n                className=\"buttonWrite\"\r\n                variant=\"outline-success\"\r\n                size=\"sm\"\r\n                style={{ margin: \"10px\" }}\r\n                // onClick={debModify}\r\n              >\r\n                수정하기\r\n              </Button>\r\n            </Link>\r\n          )}\r\n\r\n          {deleteButton && (\r\n            <Button\r\n              className=\"buttonWrite\"\r\n              variant=\"outline-success\"\r\n              size=\"sm\"\r\n              style={{ margin: \"10px\" }}\r\n              onClick={debDelete}\r\n            >\r\n              삭제하기\r\n            </Button>\r\n          )}\r\n          <Link to=\"/ta_front/debrecruit.html\">\r\n            <Button\r\n              className=\"buttonBack\"\r\n              variant=\"outline-success\"\r\n              size=\"sm\"\r\n              style={{ margin: \"10px\" }}\r\n            >\r\n              돌아가기\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Header from \"./component/Header\";\nimport DebateList from \"./component/DebateList\";\nimport DebWrite from \"./component/DebWrite\";\nimport DebateView from \"./component/DebateView\";\nimport { Container } from \"react-bootstrap\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Container>\n          <Header />\n          <Switch>\n            <Route path=\"/ta_front/debrecruit.html\">\n              <DebateList />\n            </Route>\n            <Route path=\"/ta_front/debrecruit/write\">\n              <DebWrite />\n            </Route>\n            <Route\n              path=\"/ta_front/debrecruit/modify\"\n              component={DebWrite}\n            ></Route>\n            <Route path=\"/ta_front/debrecruit/:no\">\n              <DebateView />\n            </Route>\n          </Switch>\n        </Container>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}