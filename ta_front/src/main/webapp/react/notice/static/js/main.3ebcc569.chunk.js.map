{"version":3,"sources":["ApiService.js","component/notice/NoticePaging.jsx","component/notice/NoticeListComponent.jsx","component/notice/paginate.jsx","component/notice/AddNoticeComponent.jsx","component/notice/EditNoticeComponent.jsx","component/notice/DetailNoticeComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["NOTICE_URL","NC_URL","axios","get","withCredentials","word","notice_no","notice","post","put","delete","com_no","noticeComment","console","log","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pageCount","Math","ceil","pages","_","range","style","display","justifyContent","className","map","page","cursor","onClick","NoticeListComponent","reloadNoticeList","state","filteredData","length","ApiService","fetchNotices","then","res","setState","notices","data","loginInfo","catch","err","handleChange","e","target","name","value","handleSubmit","preventDefault","result","searchKeyword","filter","notice_title","notice_contents","search","handlePageChange","addNotice","window","localStorage","removeItem","history","push","editNotice","noticeNo","setItem","deleteNotice","message","bind","this","count","pagingNotice","pagedNotice","items","pageNumber","startIndex","slice","take","paginate","marginTop","onSubmit","margin","size","placeholder","onChange","marginRight","type","textalign","index","notice_type","to","pathname","notice_date","notice_views","notice_admin","Component","AddNoticeComponent","saveNotice","flexFlow","width","EditNoticeComponent","loadUser","fetchNoticeByNo","getItem","user","id","username","firstName","lastName","age","salary","Typography","variant","FormControl","fullWidth","InputLabel","Select","labelId","label","MenuItem","TextField","Button","color","DetailNoticeComponent","reloadNotice","fetchNC","notice_comments","list","deleteNC","comNo","comment","com_notice","com_contents","input_comment","com_mem","addNC","match","params","no","location","colSpan","height","valign","colspan","class","member_nickName","com_date","undefined","member_no","App","Container","exact","path","component","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ebcc569.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst NOTICE_URL = \"http://localhost:9999/ta_back/notice\";\r\nconst NC_URL = \"http://localhost:9999/ta_back/noticecomment\";\r\n\r\nclass ApiService {\r\n    fetchNotices() {\r\n        return axios.get(NOTICE_URL + '/list', { withCredentials: true });\r\n    }\r\n\r\n    fetchNoticeByWord(word) {\r\n        return axios.get(NOTICE_URL + '/list/' + word, { withCredentials: true });\r\n    }\r\n\r\n    fetchNoticeByNo(notice_no) {\r\n        return axios.get(NOTICE_URL + '/' + notice_no, { withCredentials: true });\r\n    }\r\n\r\n    addNotice(notice){\r\n        return axios.post(NOTICE_URL, notice, { withCredentials: true });\r\n    }\r\n\r\n    editNotice(notice){\r\n        return axios.put(NOTICE_URL + '/' + notice.notice_no, notice, { withCredentials: true })\r\n    }\r\n\r\n    deleteNotice(notice_no){\r\n        return axios.delete(NOTICE_URL + '/' + notice_no, { withCredentials: true });\r\n    }\r\n\r\n    // Notice Comment\r\n    // http://localhost:9999/back/noticecomment/list/공지사항번호\r\n    fetchNC(notice_no){\r\n        return axios.get(NC_URL + '/list/' + notice_no);\r\n    }\r\n\r\n    // http://localhost:9999/back/noticecomment/댓글번호\r\n    fetchNCOne(com_no){\r\n        return axios.get(NC_URL + '/one/' + com_no);\r\n    }\r\n\r\n    // http://localhost:9999/back/noticecomment\r\n    addNC(noticeComment){\r\n        console.log(noticeComment);\r\n        return axios.post(NC_URL, noticeComment);\r\n    }\r\n\r\n    editNC(noticeComment){\r\n        return axios.put(NC_URL + '/' + noticeComment.com_no, noticeComment);\r\n    }\r\n\r\n    deleteNC(com_no){\r\n        return axios.delete(NC_URL + '/' + com_no);\r\n    }\r\n}\r\n\r\nexport default new ApiService();","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Pagination = (props) => {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props; // 각각 아이템(영화목록) 개수, 한 페이지에 보여줄 아이템(영화목록) 개수\r\n\r\n  const pageCount = Math.ceil(itemsCount / pageSize); // 몇 페이지가 필요한지 계산\r\n  if (pageCount === 1) return null; // 1페이지 뿐이라면 페이지 수를 보여주지 않음\r\n\r\n  const pages = _.range(1, pageCount + 1); // 마지막 페이지에 보여줄 컨텐츠를 위해 +1, https://lodash.com/docs/#range 참고\r\n\r\n  return (\r\n    <nav style={{display: 'flex', justifyContent: 'center'}}> {/* VSCode 입력: nav>ul.pagination>li.page-item>a.page-link */}\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li \r\n            key={page} \r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"} // Bootstrap을 이용하여 현재 페이지를 시각적으로 표시\r\n            style={{ cursor: \"pointer\" }}>\r\n              <Link className=\"page-link\" onClick={() => onPageChange(page)}>{page}</Link> {/* 페이지 번호 클릭 이벤트 처리기 지정 */}\r\n              \r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Pagination;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\n\r\nimport Pagination from './NoticePaging'\r\nimport { paginate } from './paginate';\r\n\r\nimport '../../css/bootstrap.css'\r\n// import { Button } from '@material-ui/core';\r\n\r\nclass NoticeListComponent extends Component {\r\n\r\n    /*\r\n        Constructor\r\n        - 생성자 메소드로 컴포넌트가 처음 생성 시 실행\r\n        - 이 메소드에서 기본 state를 설정 가능\r\n\r\n        state\r\n    */\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            notices : [],\r\n            filteredData : [],\r\n            searchKeyword : \"\",\r\n            pageSize : 5,\r\n            currentPage: 1,\r\n            loginInfo : null,\r\n            message : null \r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    /*\r\n        componentDidMount\r\n        - 컴포넌트가 만들어지고 첫 렌더링을 완료 후 실행되는 메소드\r\n        - 이 메소드 내에서 다른 JS 프레임워크를 연동하거나 setTimeout, setInterval 및 AJAX 처리 등을 삽입\r\n    */\r\n\r\n    componentDidMount() {\r\n        this.reloadNoticeList();\r\n    }\r\n\r\n    reloadNoticeList = () => {\r\n      if(this.state.filteredData.length === 0 ) {\r\n        ApiService.fetchNotices()\r\n            .then( res => {\r\n                this.setState({\r\n                  notices: res.data.notices,\r\n                  loginInfo: res.data.loginInfo,\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('reloadNoticeList() Error!', err);\r\n        })\r\n      }\r\n      else {\r\n        this.setState({\r\n          notices: this.state.filteredData,\r\n          filteredData : null,\r\n        })\r\n      }\r\n    }\r\n\r\n    // 검색 기능\r\n    handleChange = (e) => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      })\r\n    }\r\n       \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let value = this.state.searchKeyword;\r\n        let result = [];\r\n\r\n        result = this.state.notices.filter((data) => {\r\n          console.log(\"data : \",data.notice_title,\" / \" ,data.notice_contents);\r\n          console.log(\"value : \", value);\r\n          return (data.notice_title.search(value) !== -1 || data.notice_contents.search(value) !== -1);\r\n        });\r\n\r\n        this.setState({filteredData : result}, () => {\r\n          this.reloadNoticeList();\r\n        });\r\n\r\n        this.setState({\r\n          searchKeyword:\"\",\r\n          currentPage:1,\r\n        })\r\n    }\r\n\r\n    // 페이징\r\n    handlePageChange = (page) => {\r\n      this.setState({\r\n        currentPage: page });\r\n    }\r\n\r\n    addNotice = () => {\r\n      window.localStorage.removeItem(\"noticeNo\");\r\n      // this.props.history.push('/add-notice');\r\n      this.props.history.push('./notice/write');\r\n    }\r\n\r\n    /*\r\n        Edit 버튼을 누르면 브라우저 로컬스토리지를 사용하여 해당 유저 id를 일시적으로 저장\r\n        route를 통해 EditUserComponent.jsx로 이동\r\n        route에서 \"/edit-user\" url로 이동 시 EditUserComponent.jsx를 출력하도록 설정\r\n    */\r\n\r\n    editNotice = (noticeNo) => {\r\n        window.localStorage.setItem(\"noticeNo\", noticeNo);\r\n        // this.props.history.push('/edit-notice');\r\n        this.props.history.push('./notice/modify');\r\n    }\r\n\r\n    /*\r\n        Delete 버튼을 누르면 API 통신을 사용하여 DB에서 해당 유저를 삭제\r\n        filter 기능을 통해 state에 있는 users 배열에서 삭제된 해당 유저 id를 제외하고 다시 배열로 표현\r\n    */\r\n    deleteNotice = (noticeNo) => {\r\n        ApiService.deleteNotice(noticeNo)\r\n          .then( res => {\r\n            this.setState({\r\n              message: 'Notice Deleted Successfully.'\r\n            });\r\n            this.setState({\r\n              notices: this.state.notices.filter( notice =>\r\n                notice.notice_no !== noticeNo)\r\n              });\r\n            })\r\n          .catch(err => {\r\n            console.log('deleteNotice() Error!', err);\r\n        })\r\n    }\r\n\r\n    render(){\r\n      const count = this.state.notices.length;\r\n      \r\n      const pagingNotice = {\r\n        notices:this.state.notices,\r\n        pageSize:this.state.pageSize,\r\n        currentPage:this.state.currentPage,\r\n      };\r\n\r\n      const pagedNotice = paginate(pagingNotice.notices, pagingNotice.currentPage, pagingNotice.pageSize);\r\n      return(\r\n          <div className= \"container\" style={{ marginTop: '5%' }}>\r\n            <h2 style = {{ display: 'flex',justifyContent: 'center'}}>공지사항</h2>\r\n            \r\n            {/* <Button variant=\"contained\" color=\"primary\" onClick={this.addNotice}> Add Notice </Button> */}\r\n            <form onSubmit={this.handleSubmit} style={{ display:'flex', justifyContent:'flex-end\t', margin: '0 auto', marginTop: '5%' }}>\r\n              <input\r\n                size='25'\r\n                placeholder=\"검색할 단어를 입력하세요\"\r\n                value={this.state.searchKeyword}\r\n                onChange={this.handleChange}\r\n                name=\"searchKeyword\"\r\n                style = {{ marginRight:'5px' }}\r\n              />\r\n              <button className='btn btn-sm btn-primary' type=\"submit\">검색</button>\r\n            </form>\r\n            <div style={{  }}>\r\n              <table className=\"table table-hover\" style={{ textalign: 'center', marginTop: '10px'}}>\r\n                <thead>\r\n                  <tr className=\"table-primary\">\r\n                    <th>번호</th>\r\n                    <th>타입</th>\r\n                    <th>제목</th>\r\n                    <th>작성일</th>\r\n                    <th>조회수</th>\r\n                    <th>작성자</th>\r\n                    {/* <th>Edit</th>\r\n                    <th>Delete</th> */}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {pagedNotice.map( (notice, index) =>\r\n                    <tr className=\"data1\" key={notice.notice_no}>\r\n                      <td className=\"board_no\">{(this.state.currentPage-1)*this.state.pageSize + index + 1}</td>\r\n                      <td className=\"board_type\">{notice.notice_type}</td>\r\n                      <td className=\"board_title\">\r\n                        {/* <Link to={`/notices/${notice.notice_no}`}>{ notice.notice_title }</Link> */}\r\n                        {/* <Link to={`notice/${notice.notice_no}`} state={ loginInfo }>{ notice.notice_title }</Link>  */}\r\n                        <Link to={{ pathname: `notice/${notice.notice_no}`, state: { loginInfo: this.state.loginInfo } }}>{ notice.notice_title }</Link> \r\n                      </td>\r\n                      <td className=\"board_date\">{notice.notice_date}</td>\r\n                      <td className=\"board_views\">{notice.notice_views}</td>\r\n                      <td className=\"board_mem\">{notice.notice_admin}</td>\r\n                      {/* <td>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=> this.editNotice(notice.notice_no)}> Edit </Button>\r\n                      </td>\r\n                      <td>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=> this.deleteNotice(notice.notice_no)}> Delete </Button>\r\n                      </td> */}\r\n                    </tr>\r\n                  )}\r\n\t\t\t\t\t\t\t  </tbody>\r\n              </table>\r\n              <Pagination\r\n            itemsCount={count}\r\n            pageSize={this.state.pageSize}\r\n            currentPage={this.state.currentPage} \r\n            onPageChange={this.handlePageChange}\r\n          />\r\n            </div>\r\n          </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default NoticeListComponent;","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize; // 자를 배열의 시작점\r\n\r\n  return _(items)\r\n    .slice(startIndex) // 시작점부터 배열을 자르되\r\n    .take(pageSize) // pageSize만큼의 배열을 취함\r\n    .value(); // lodash wrapper 객체를 regular 배열로 변환\r\n}","import React, { Component } from 'react';\r\nimport ApiService from \"../../ApiService\";\r\n\r\n// import '../../css/NoticeModify.css'\r\n\r\nclass AddNoticeComponent extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      notice_type: '',\r\n      notice_title: '',\r\n      notice_contents: '',\r\n      notice_admin: '',\r\n      message: null\r\n    }\r\n\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n\r\n  saveNotice = (e) => {\r\n    e.preventDefault();\r\n\r\n    let notice = {\r\n      notice_type: this.state.notice_type,\r\n      notice_title: this.state.notice_title,\r\n      notice_contents: this.state.notice_contents,\r\n      notice_admin: 'ad3', // Session으로 변경 필요\r\n    }\r\n\r\n    ApiService.addNotice(notice)\r\n    .then( res => {\r\n        this.setState({\r\n          message: 'addNotice Completed'\r\n        })\r\n        console.log(this.state.message);\r\n        this.props.history.push('/');\r\n    })\r\n    .catch( err => {\r\n      console.log('saveNotice() 에러', err);\r\n    });\r\n\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"container\">\r\n        <h2 style = {{ display : 'flex', justifyContent : 'center', marginTop:'5px' }}>Add Notice</h2>\r\n        <div className=\"bg\"></div>\r\n        <form>\r\n          <input type='text' name='name' placeholder='Name'/>\r\n          <input type='text' name='email' placeholder='Title'/>\r\n          <textarea name='text' placeholder='Contents'/>\r\n          <input type='submit' value='submit' className='submit'/>\r\n        </form>\r\n\r\n        <form style = {{ display : 'flex', flexFlow : 'row wrap', justifyContent : 'center', marginTop:'5px' }}>\r\n          <select name=\"notice_type\" value={this.state.notice_type} onChange={this.onChange}>\r\n            <option value=\"none\">공지사항 선택</option>\r\n            <option value=\"korean\">공지사항</option>\r\n            <option value=\"english\">이벤트</option>\r\n            <option value=\"chinese\">업데이트</option>\r\n            <option value=\"spanish\">점검</option>\r\n          </select>\r\n          <input type='text' placeholder=\"please input type\" width='100%'></input>\r\n          <input type='text' placeholder=\"please input title\"></input>\r\n          <input type='text' placeholder=\"please input contents\"></input>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const formContainer = {\r\n//   display : 'flex',\r\n//   flexFlow : 'row wrap'\r\n// }\r\n\r\n// const style = {\r\n//   display : 'flex',\r\n//   justifyContent : 'center',\r\n//   marginTop:'5px'\r\n// }\r\n\r\nexport default AddNoticeComponent;","import React, { Component } from 'react';\r\nimport ApiService from \"../../ApiService\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass EditNoticeComponent extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      notice_no: window.localStorage.getItem(\"noticeNo\"),\r\n      notice_type: '',\r\n      notice_title: '',\r\n      notice_contents: '',\r\n      message: null\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    // this.loadUser();\r\n  }\r\n\r\n  loadUser = () => {\r\n    ApiService.fetchNoticeByNo(window.localStorage.getItem(\"userID\"))\r\n      .then( res => {\r\n        let user = res.data;\r\n        this.setState({\r\n          id: user.id,\r\n          username: user.username,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          age: user.age,\r\n          salary: user.salary\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log('loadUser() 에러', err);\r\n      });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    });\r\n  }\r\n\r\n  saveNotice = (e) => {\r\n    e.preventDefault();\r\n\r\n    let notice = {\r\n      notice_no: this.state.notice_no,\r\n      notice_type: this.state.notice_type,\r\n      notice_title: this.state.notice_title,\r\n      notice_contents: this.state.notice_contents,\r\n    }\r\n\r\n    ApiService.editNotice(notice)\r\n      .then( res => {\r\n        this.setState({\r\n          message : 'saveNotice Completed'\r\n        })\r\n        this.props.history.push('/');\r\n      })\r\n      .catch(err => {\r\n        console.log('saveNotice() 에러', err);\r\n      })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <Typography variant=\"h4\" style={style}>Edit Notice</Typography>\r\n        <form>\r\n\r\n          <FormControl variant=\"outlined\" fullWidth margin=\"normal\">\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">공지사항 분류</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={this.state.notice_type}\r\n              onChange={this.onChange}\r\n              label=\"Age\"\r\n              name=\"notice_type\"\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value={'공지사항'}>공지사항</MenuItem>\r\n              <MenuItem value={'이벤트'}>이벤트</MenuItem>\r\n              <MenuItem value={'업데이트'}>업데이트</MenuItem>\r\n              <MenuItem value={'점검'}>점검</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField type=\"text\" placeholder=\"please input type\" name=\"notice_type\" \r\n          fullWidth margin=\"normal\" value={this.state.notice_type} onChange={this.onChange} />\r\n\r\n          <TextField type=\"text\" placeholder=\"please input title\" name=\"notice_title\" \r\n          fullWidth margin=\"normal\" value={this.state.notice_title} onChange={this.onChange} />\r\n\r\n          <TextField type=\"text\" placeholder=\"please input contents\" name=\"notice_contents\" \r\n          fullWidth margin=\"normal\" value={this.state.notice_contents} onChange={this.onChange} />\r\n          \r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.saveNotice}>Save</Button>\r\n\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst style = {\r\n  display: 'flex',\r\n  justifyContent: 'center'\r\n}\r\n\r\nexport default EditNoticeComponent;       ","import React, { Component } from 'react';\r\nimport ApiService from \"../../ApiService\";\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button'\r\n\r\n// const styles = () => ({\r\n//     boardTopBackground: {\r\n//         zIndex: 1,\r\n//         backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n//         width: '100%',\r\n//         height: '12rem',\r\n//         position: 'absolute'\r\n//     },\r\n//     boardTop: {\r\n//         height: '12em',\r\n//         width: '100%',\r\n//         position: 'relative',\r\n//     },\r\n//     boardTopText: {\r\n//         zIndex: 2,\r\n//         position: 'absolute',\r\n//         bottom: '3rem',\r\n//         left: '3rem',\r\n//         fontSize: \"2rem\",\r\n//         fontWeight: 'bold',\r\n//         color: 'white',\r\n//     },\r\n// })\r\n\r\nclass DetailNoticeComponent extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        console.log('테스트 1 : ',props);\r\n\r\n        this.state = {\r\n            notice_no: this.props.match.params.no, \r\n            notice_type: '',\r\n            notice_title: '',\r\n            notice_contents: '',\r\n            notice_admin: '',\r\n            notice_comments: [],\r\n            notice_date: '',\r\n            notice_views:'',\r\n            input_comment: '',\r\n            message:'',\r\n            loginInfo:this.props.location.state.loginInfo,\r\n        }\r\n        console.log('테스트 2 : ',this.state.loginInfo);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reloadNotice();\r\n    }\r\n\r\n    reloadNotice = () => {\r\n        ApiService.fetchNoticeByNo(this.state.notice_no)\r\n            .then( res => {\r\n                this.setState({\r\n                    notice_type: res.data.notice.notice_type,\r\n                    notice_title: res.data.notice.notice_title,\r\n                    notice_contents: res.data.notice.notice_contents,\r\n                    notice_date: res.data.notice.notice_date,\r\n                    notice_views: res.data.notice.notice_views,\r\n                    notice_admin: res.data.notice.notice_admin,\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('reloadNotice() Error!', err);\r\n            })\r\n        ApiService.fetchNC(this.state.notice_no)\r\n            .then( res => {\r\n                this.setState({\r\n                    notice_comments: res.data.list\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('reloadNoticeList() Error!', err);\r\n            })\r\n    }\r\n\r\n    deleteNC = (comNo) => {\r\n        ApiService.deleteNC(comNo)\r\n            .then( res => {\r\n                this.setState({\r\n                    notice_comments: this.state.notice_comments.filter( comment =>\r\n                        comment.com_no !== comNo)\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log('deleteNC() Error!', err);\r\n            })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n          [e.target.name]: e.target.value, // <- 변경 후\r\n        });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        let noticeComment = {\r\n            com_notice:this.state.notice_no,\r\n            com_contents:this.state.input_comment,\r\n            com_mem:this.state.loginInfo,\r\n        }\r\n\r\n        ApiService.addNC(noticeComment)\r\n            .then( res => {\r\n                this.setState({\r\n                    message: 'addNC Completed'\r\n                })\r\n                console.log(this.state.message);\r\n            })\r\n            .catch( err => {\r\n                console.log('addNC() 에러', err);\r\n            });\r\n        \r\n        this.reloadNotice();\r\n\r\n        this.setState({\r\n            input_comment: ''\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className= 'container' style={{ marginTop: '5%' }}>\r\n                <h2 style = {{ display: 'flex',justifyContent: 'center'}}>상세페이지</h2>\r\n                <div>\r\n                    <table className='table'>\r\n                        <tr>\r\n                            <td className=\"success text-center\" style={{ width: '25%' }}>번호</td>\r\n                            <td\tclassName=\"board_no text-center\" style={{ width: '25%' }}>{this.state.notice_no}</td>\r\n                            <td className=\"success text-center\" style={{ width: '25%' }}>타입</td>\r\n                            <td\tclassName=\"board_type text-center\" style={{ width: '25%' }}>{this.state.notice_type}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"success text-center\" style={{ width: '25%' }}>제목</td>\r\n                            <td className=\"board_title text-center\" style={{ width: '25%' }}>{this.state.notice_title}</td>\r\n                            <td className=\"success text-center\" style={{ width: '25%' }}>작성자</td>\r\n                            <td\tclassName=\"board_mem text-center\" style={{ width: '25%' }}>{this.state.notice_admin}</td>                            \r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"success text-center\" style={{ width: '25%' }}>조회수</td>\r\n                            <td className=\"board_views text-center\" style={{ width: '25%' }}>{this.state.notice_views}</td>\r\n                            <td className=\"success text-center\" style={{ width: '25%' }}>작성일</td>\r\n                            <td className=\"board_date text-center\" style={{ width: '25%' }}>{this.state.notice_date}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            \r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"board_contents text-center\" colSpan='4' height='200' valign='top'>{this.state.notice_contents}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className='text-right' colspan='4'> \r\n                                {/* <Link to=\"/\"> */}\r\n                                <Link to=\"/ta_front/notice.html\">\r\n                                    <Button className=\"lunchBox-btn-rec-line\" variant=\"contained\" color=\"primary\">\r\n                                        Back\r\n                                    </Button>\r\n                                </Link>\r\n                            </td>\r\n                        </tr>\t\r\n                    </table>\r\n                </div>\r\n                <form onSubmit={this.handleSubmit} style={{ display:'flex', justifyContent:'center', margin: '0 auto', marginTop: '5%' }}>\r\n                    <input\r\n                        size='60'\r\n                        placeholder=\"댓글을 입력하세요\"\r\n                        value={this.state.input_comment}\r\n                        onChange={this.handleChange}\r\n                        name='input_comment' \r\n                        style = {{ marginRight:'5px' }}\r\n                    />\r\n                    <button className='btn btn-sm btn-primary' type=\"submit\">작성</button>\r\n                </form>\r\n\r\n                {/* <form onSubmit={this.handleSubmit}>\r\n                    <TextField \r\n                        required \r\n                        placeholder='댓글을 입력하세요' \r\n                        name='input_comment' \r\n                        value={this.state.input_comment}\r\n                        onChange={this.handleChange}\r\n                    ></TextField>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">입력</Button>\r\n                </form> */}\r\n\r\n                <div>\r\n                    <table className=\"table\" id=\"comment\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>작성자</th>\r\n                                <th>내용</th>\r\n                                <th>작성일</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.notice_comments.map( comment => \r\n                                <tr className=\"data2\" key = {comment.com_no}>\r\n                                    <td class=\"com_mem\">{comment.com_mem.member_nickName}</td>\r\n                                    <td class=\"com_contents\">{comment.com_contents}</td>\r\n                                    <td class=\"com_date\">{comment.com_date}</td>\r\n                                    <td class=\"com_delete\">\r\n                                    {\r\n                                        (this.state.loginInfo?.member_no !== undefined) && (comment.com_mem.member_no === this.state.loginInfo?.member_no) \r\n                                        ? <input class=\"com_delete_button btn btn-xs btn-outline-success\" type=\"submit\" value=\"삭제\" onClick={()=> this.deleteNC(comment.com_no)}/>\r\n                                        : <p>삭제 불가</p>\r\n                                    }\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n      }\r\n}\r\n\r\nexport default DetailNoticeComponent;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport NoticeListComponent from './component/notice/NoticeListComponent';\nimport AddNoticeComponent from './component/notice/AddNoticeComponent';\nimport EditNoticeComponent from './component/notice/EditNoticeComponent';\nimport DetailNoticeComponent from './component/notice/DetailNoticeComponent';\nimport { Container } from \"react-bootstrap\";\n\nclass App extends React.Component{\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Container>\n            <Switch>\n              <Route exact path=\"/ta_front/notice.html\" component={NoticeListComponent} />\n              <Route exact path=\"/ta_front/notice/\" component={DetailNoticeComponent} />\n              <Route exact path=\"/ta_front/notice/:no\" component={DetailNoticeComponent} />\n              <Route exact path=\"/ta_front/notice/write\" component={AddNoticeComponent} />\n              <Route exact path=\"/ta_front/notice/modify\" component={EditNoticeComponent} />\n              {/* <Route path=\"/ta_front/notice.html\">\n                <NoticeListComponent />\n              </Route>\n              <Route path=\"/ta_front/notice/:no\">\n                <DetailNoticeComponent />\n              </Route>\n              <Route path=\"/ta_front/notice/write\">\n                <AddNoticeComponent />\n              </Route>\n              <Route path=\"/ta_front/notice/modify\">\n                <EditNoticeComponent />\n              </Route> */}\n              {/* <Route exact path=\"/\" component={NoticeListComponent} />\n              <Route exact path=\"/notices/\" component={DetailNoticeComponent} />\n              <Route exact path=\"/notices/:no\" component={DetailNoticeComponent} />\n              <Route exact path=\"/add-notice\" component={AddNoticeComponent} />\n              <Route exact path=\"/edit-notice\" component={EditNoticeComponent} /> */}\n            </Switch>\n          </Container>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}