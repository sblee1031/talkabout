{"version":3,"sources":["ApiService.js","component/pagination/DebatePaging.jsx","component/DebateBattleList.jsx","component/pagination/paginate.jsx","component/Timer.jsx","component/DebateBattleDetail.jsx","App.js","index.js"],"names":["AUDIENCE_URL","DEBATE_URL","DETAIL_URL","axios","get","withCredentials","params","deb_no","mem_no","post","put","audi_no","detail_no","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","totalPage","Math","ceil","pageGroup","last","first","prevButton","nextButton","pages","_","range","style","display","justifyContent","className","onClick","to","pathname","map","page","cursor","DebateBattleList","useState","deblist","setDebList","word","setWord","setCurpage","logininfo","setLogininfo","searchAlert","setSearchAlert","pagedDebate","items","pageNumber","startIndex","slice","take","value","paginate","deb_length","length","useEffect","ApiService","fetchDebates","then","res","data","list","fetch","method","headers","credentials","json","member","console","log","member_nickName","body","JSON","stringify","member_social_no","Alert","show","variant","Heading","Button","border","textAlign","marginRight","fontSize","fontWeight","InputGroup","Text","id","FormControl","aria-label","aria-describedby","placeholder","onChange","e","target","marginLeft","result","filter","debate_topic","search","preventDefault","alert","Table","responsive","hover","width","debate","index","debate_no","state","debate_status","debate_time","debate_startDate","debate_endDate","padNumber","num","String","padStart","Timer","tempHour","hour","parseInt","tempMin","min","tempSec","sec","initialTime","useRef","interval","setHour","setMin","setSec","status","current","setInterval","clearInterval","DebateBattleDetail","location","debateDetail","setdebateDetail","name","room","topics","message","setMessage","messages","setMessages","messages2","setMessages2","clientRef","setClientRef","evid_A1","setEvid_A1","evid_A2","setEvid_A2","evid_A3","setEvid_A3","evid_B1","setEvid_B1","evid_B2","setEvid_B2","evid_B3","setEvid_B3","audience","setAudience","votecnt","agree","setAgree","disAgree","setDisAgree","neutrality","setNeutrality","startStatus","setStartState","fetchDiscussors","evi_one","evi_two","evi_three","member_no","fetchAudOneByTwo","addVote","sendMessage","server","handleChange","btn_no","setVote","vote_no","editVote","colSpan","Image","src","discussor","member_thumb","height","alt","roundedCircle","detail","evi_no","setdata","editDetail","btn_a1","type","btn_a2","btn_a3","discuss","marginBottom","overflowY","flexDirection","i","Grid","item","padding","fontStyle","Typography","wordWrap","setStart","editDebate","params2","setEnd","color","readOnly","onKeyPress","key","btn_b1","btn_b2","btn_b3","url","onConnect","onDisconnect","onMessage","disagree","temp","push","ref","client","App","Container","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAEMA,EAAe,mDACfC,EAAa,iDACbC,EAAa,uDA6FJ,M,8FArFb,WACE,OAAOC,IAAMC,IAAIJ,EAAc,CAAEK,iBAAiB,M,6BAKpD,SAAgBC,GACd,OAAOH,IAAMC,IAAIJ,EAAe,OAAQM,EAAQ,CAAED,iBAAiB,M,8BAKrE,SAAiBC,GACf,OAAOH,IAAMC,IACXJ,EAAY,sBAAkBM,EAAOC,OAAzB,mBAA0CD,EAAOE,QAC7D,CAAEH,iBAAiB,M,4BAMvB,SAAeC,GACb,OAAOH,IAAMC,IAAIJ,EAAY,uBAAmBM,EAAOC,QAAU,CAC/DF,iBAAiB,M,qBAMrB,SAAQC,GACN,OAAOH,IAAMM,KAAKT,EAAcM,EAAQ,CAAED,iBAAiB,M,sBAK7D,SAASC,GACP,OAAOH,IAAMO,IAAIV,EAAe,IAAMM,EAAOK,QAASL,EAAQ,CAC5DD,iBAAiB,M,0BASrB,WACE,OAAOF,IAAMC,IAAIH,EAAY,CAAEI,iBAAiB,M,yBAIlD,SAAYE,GACV,OAAOJ,IAAMC,IAAIH,EAAa,IAAMM,EAAQ,CAAEF,iBAAiB,M,wBAKjE,SAAWC,GACT,OAAOH,IAAMO,IAAIT,EAAa,IAAMK,EAAOC,OAAQD,K,6BAQrD,SAAgBC,GACd,OAAOJ,IAAMC,IAAIF,EAAa,IAAMK,EAAQ,CAAEF,iBAAiB,M,4BAKjE,SAAeC,GACb,OAAOH,IAAMC,IAAIF,EAAa,OAAQI,EAAQ,CAAED,iBAAiB,M,wBAKnE,SAAWC,GACT,OAAOH,IAAMO,IAAIR,EAAa,IAAMI,EAAOM,UAAWN,EAAQ,CAC5DD,iBAAiB,Q,8BCfRQ,EAzEI,SAACC,GAAU,IAEpBC,EAAoDD,EAApDC,WAAYC,EAAwCF,EAAxCE,SAAUC,EAA8BH,EAA9BG,YAAaC,EAAiBJ,EAAjBI,aACvCC,EAAYC,KAAKC,KAAKN,EAAaC,GACjCM,EAAYF,KAAKC,KAAKJ,EAAcD,GAE1C,GAAkB,IAAdG,EAAiB,OAAO,KAE5B,IAAII,EAAOD,EAAYN,EACnBO,EAAOJ,IAAWI,EAAOJ,GAC7B,IAAIK,EAAQD,GAAQP,EAAW,GAC3BQ,EAAQ,IAAGA,EAAQ,GAGvB,IAAIC,GAAa,EAEfA,EADiB,GAAfR,EAKJ,IAAIS,GAAa,EAEfA,EADET,GAAeE,EAKnB,IAAMQ,EAAQC,IAAEC,MAAML,EAAOD,EAAO,GACpC,OACE,sBAAKO,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAA/C,UACG,IAED,qBAAIC,UAAU,aAAd,UACGR,GACC,oBAAIQ,UAAU,OAAd,SACE,cAAC,IAAD,CACEA,UAAU,YACVC,QAAS,kBAAMhB,EAAaD,EAAc,IAC1CkB,GAAI,CAACC,SAAS,4BAHhB,oBASHT,EAAMU,KAAI,SAACC,GAAD,OACT,qBAEEL,UAAWK,IAASrB,EAAc,mBAAqB,YACvDa,MAAO,CAAES,OAAQ,WAHnB,UAME,cAAC,IAAD,CAAMN,UAAU,YAAYC,QAAS,kBAAMhB,EAAaoB,IAAOH,GAAI,CAACC,SAAS,4BAA7E,SACGE,IACK,MAPHA,MAWRZ,GACC,oBAAIO,UAAU,OAAd,SACE,cAAC,IAAD,CACEA,UAAU,YAEVC,QAAS,kBAAMhB,EAAaD,EAAc,IAC1CkB,GAAI,CAACC,SAAS,4BAJhB,2BCpDG,SAASI,EAAiB1B,GAAQ,IAAD,EAChB2B,qBADgB,mBACvCC,EADuC,KAC9BC,EAD8B,OAEtBF,qBAFsB,mBAEvCG,EAFuC,KAEjCC,EAFiC,OAGZJ,mBAAS,GAHG,mBAGvCxB,EAHuC,KAG1B6B,EAH0B,OAIZL,qBAJY,mBAIvCM,EAJuC,KAI5BC,EAJ4B,OAKRP,oBAAS,GALD,mBAKvCQ,EALuC,KAK1BC,EAL0B,KAQxCC,EChBD,SAAkBC,EAAOC,EAAYrC,GAC1C,IAAMsC,GAAcD,EAAa,GAAKrC,EAEtC,OAAOY,IAAEwB,GACNG,MAAMD,GACNE,KAAKxC,GACLyC,QDUiBC,CAAShB,EAASzB,EADrB,GAGX0C,EAAU,OAAGjB,QAAH,IAAGA,OAAH,EAAGA,EAASkB,OAiH5B,OAvFAC,qBAAU,WACRC,EAAWC,eAAeC,MAAK,SAACC,GAC9BtB,EAAWsB,EAAIC,KAAKC,MAGpBnB,EAAaiB,EAAIC,KAAKnB,gBAEvB,IAiFD,qCACE,wBAAQb,QA/EZ,WAEEkC,MACE,yEACA,CACEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAE3BC,YAAa,YAGdP,MAAK,SAACC,GACL,OAAOA,EAAIO,UAEZR,MAAK,SAACE,GACLlB,EAAakB,EAAKO,QAClBC,QAAQC,IAAIT,EAAKO,QACjBC,QAAQC,IAAI,eAAaT,EAAKO,YA8DhC,qDACA,wBAAQvC,QA3DZ,WAEEkC,MAAM,mEAAoE,CACxEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAE3BC,YAAa,YAEZP,MAAK,SAACC,GACL,OAAOA,EAAIO,UAEZR,MAAK,SAACE,GACLlB,EAAakB,EAAKO,QAClBC,QAAQC,IAAIT,EAAKO,OAAOG,iBACxBF,QAAQC,IAAI,eAAaT,EAAKO,YA6ChC,qDACA,wBAAQvC,QA3CZ,WAEEkC,MAAM,iEAAkE,CACtEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAE3BC,YAAa,YAEZP,MAAK,SAACC,GAEL,OAAOA,EAAIO,UAEZR,MAAK,SAACE,GACLlB,EAAakB,EAAKO,QAClBC,QAAQC,IAAIT,EAAKO,OAAOG,iBACxBF,QAAQC,IAAI,eAAaT,EAAKO,YA4BhC,8CACA,wBAAQvC,QAzBZ,WAEEkC,MAAM,8CAA+C,CACnDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BO,KAAMC,KAAKC,UAAU,CACnBC,iBAAkB,0BAEpBT,YAAa,YAEZP,MAAK,SAACC,GACL,OAAOA,EAAIO,UAEZR,MAAK,SAACE,GAELQ,QAAQC,IAAI,gBAAcT,OAU5B,sCACA,eAACe,EAAA,EAAD,CAAOC,KAAMjC,EAAakC,QAAQ,SAAlC,UACE,cAACF,EAAA,EAAMG,QAAP,kGACA,uJACA,qBAAKnD,UAAU,6BAAf,SAEI,cAACoD,EAAA,EAAD,CACEnD,QAAS,kBAAMgB,GAAe,IAC9BiC,QAAQ,eACRrD,MAAO,CAAEwD,OAAQ,QAHnB,wBAUN,oBAAIxD,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAA9C,uCACA,sBACEF,MAAO,CACLyD,UAAW,QACXC,YAAa,OACbzD,QAAS,SAJb,UAOE,uBAAOD,MAAO,CAAE2D,SAAU,OAAQC,WAAY,OAA9C,SACE,eAACC,EAAA,EAAD,CAAY1D,UAAU,OAAtB,UACE,cAAC0D,EAAA,EAAWC,KAAZ,CAAiBC,GAAG,4BAApB,0BAIA,cAACC,EAAA,EAAD,CACEC,aAAW,UACXC,mBAAiB,4BACjBC,YAAY,qDACZC,SAjJG,SAACC,GACdtD,EAAQsD,EAAEC,OAAO3C,eAqJb,cAAC4B,EAAA,EAAD,CACEvD,MAAO,CAAEuE,WAAY,QACrBpE,UAAU,UACVkD,QAAQ,UACRjD,QAtJU,SAACiE,GACjB,GAAIvD,EAAM,CACRE,EAAW,GACX,IAAIwD,EAEJA,EAAS5D,EAAQ6D,QAAO,SAACrC,GACvB,OAA2C,IAApCA,EAAKsC,aAAaC,OAAO7D,MAElCD,EAAW2D,QAEXH,EAAEO,iBACFC,MAAM,kEAuIJ,6BASF,eAACC,EAAA,EAAD,CAAOC,WAAW,KAAKC,OAAK,EAA5B,UACE,uBAAO7E,UAAU,gBAAjB,SACE,qBAAIH,MAAO,CAAE2D,SAAU,QAAvB,UACE,oBAAI3D,MAAO,CAAEiF,MAAO,OAApB,0BACA,oBAAIjF,MAAO,CAAEiF,MAAO,OAApB,0BACA,oBAAIjF,MAAO,CAAEiF,MAAO,OAApB,0BACA,oBAAIjF,MAAO,CAAEiF,MAAO,OAApB,uCACA,oBAAIjF,MAAO,CAAEiF,MAAO,OAApB,uCACA,oBAAIjF,MAAO,CAAEiF,MAAO,OAApB,4CAGJ,uBAAO9E,UAAU,cAAjB,gBACGkB,QADH,IACGA,OADH,EACGA,EAAad,KAAI,SAAC2E,EAAQC,GAAT,OAChB,+BACE,6BAvLK,GAuLChG,EAAc,GAAgBgG,EAAQ,IAC5C,6BACE,cAAC,IAAD,CACE9E,GAAI,CACFC,SAAS,uBAAD,OAAyB4E,EAAOE,WACxCC,MAAO,CAAEH,OAAQA,EAAQjE,UAAWA,IAEtCb,QAAS,SAACiE,GACS,MAAbpD,IACFoD,EAAEO,iBACFxD,GAAe,KARrB,SAaG8D,EAAOR,iBAGZ,6BAAKQ,EAAOI,gBACZ,6BAAKJ,EAAOK,YAAc,WAC1B,6BAAKL,EAAOM,mBACZ,6BAAKN,EAAOO,mBAtBLP,EAAOE,mBA2BtB,cAAC,EAAD,CACEnG,WAAY4C,EACZ3C,SAnNW,EAoNXC,YAAaA,EACbC,aAhNN,SAA0BoB,GACxBQ,EAAWR,S,iEErBTkF,EAAY,SAACC,EAAK7D,GACtB,OAAO8D,OAAOD,GAAKE,SAAS/D,EAAQ,MA4CvBgE,EAzCD,SAAC9G,GAEX,IAAM+G,EAAW/G,EAAMgH,KAAOC,SAASjH,EAAMgH,MAAQ,EAC/CE,EAAUlH,EAAMmH,IAAMF,SAASjH,EAAMmH,KAAO,EAC5CC,EAAUpH,EAAMqH,IAAMJ,SAASjH,EAAMqH,KAAO,EAG5CC,EAAcC,iBAAkB,GAAXR,EAAgB,GAAe,GAAVG,EAAeE,GACzDI,EAAWD,iBAAO,MARH,EAUG5F,mBAAS+E,EAAUK,EAAU,IAVhC,mBAUdC,EAVc,KAURS,EAVQ,OAWC9F,mBAAS+E,EAAUQ,EAAS,IAX7B,mBAWdC,EAXc,KAWTO,EAXS,OAYC/F,mBAAS+E,EAAUU,EAAS,IAZ7B,mBAYdC,EAZc,KAYTM,EAZS,KAkCrB,OApBA5E,qBAAU,WACN,GAAG/C,EAAM4H,OAOL,OANAJ,EAASK,QAAUC,aAAY,WAC3BR,EAAYO,SAAW,EACvBJ,EAAQf,EAAUO,SAASK,EAAYO,QAAU,MAAO,IACxDH,EAAOhB,EAAUO,SAAUK,EAAYO,QAAU,KAAQ,IAAK,IAC9DF,EAAOjB,EAAUO,SAASK,EAAYO,QAAU,IAAK,MACtD,KACI,kBAAME,cAAcP,EAASK,YAEzC,QAAC7H,QAAD,IAACA,OAAD,EAACA,EAAO4H,SAIX7E,qBAAU,WACFuE,EAAYO,SAAW,GACvBE,cAAcP,EAASK,WAE5B,CAACR,IAGA,gCACKL,EADL,MACcG,EADd,MACsBE,MChCf,SAASW,EAAmBhI,GAAQ,IAAD,MAC/B2B,mBAAQ,OAAC3B,QAAD,IAACA,GAAD,UAACA,EAAOiI,gBAAR,aAAC,EAAiB5B,MAAMH,QAA1CA,EADyC,sBAE5BvE,mBAAQ,OAAC3B,QAAD,IAACA,GAAD,UAACA,EAAOiI,gBAAR,aAAC,EAAiB5B,MAAMpE,WAA7CA,EAFyC,sBAGRN,qBAHQ,mBAGzCuG,EAHyC,KAG3BC,EAH2B,OAKjCxG,mBAAQ,OAACM,QAAD,IAACA,OAAD,EAACA,EAAW6B,iBAA5BsE,EALyC,sBAMjCzG,mBAASuE,EAAOE,WAAxBiC,EANyC,sBAO/B1G,mBAAS,CAAC,UAAD,OAAW0G,KAA9BC,EAPyC,sBAQlB3G,mBAAS,IARS,mBAQzC4G,EARyC,KAQhCC,EARgC,OAShB7G,mBAAS,IATO,mBASzC8G,EATyC,KAS/BC,EAT+B,OAUd/G,mBAAS,IAVK,mBAUzCgH,EAVyC,KAU9BC,EAV8B,OAWdjH,qBAXc,mBAWzCkH,EAXyC,KAW9BC,EAX8B,OAalBnH,mBAAS,IAbS,mBAazCoH,EAbyC,KAahCC,EAbgC,OAclBrH,mBAAS,IAdS,mBAczCsH,EAdyC,KAchCC,EAdgC,OAelBvH,mBAAS,IAfS,mBAezCwH,GAfyC,KAehCC,GAfgC,QAgBlBzH,mBAAS,IAhBS,qBAgBzC0H,GAhByC,MAgBhCC,GAhBgC,SAiBlB3H,mBAAS,IAjBS,qBAiBzC4H,GAjByC,MAiBhCC,GAjBgC,SAkBlB7H,mBAAS,IAlBS,qBAkBzC8H,GAlByC,MAkBhCC,GAlBgC,SAoBhB/H,mBAAS,IApBO,qBAoBzCgI,GApByC,MAoB/BC,GApB+B,SAqBlBjI,qBArBkB,qBAqBzCkI,GArByC,gBAsBtBlI,mBAAS,IAtBa,qBAsBzCmI,GAtByC,MAsBlCC,GAtBkC,SAuBhBpI,mBAAS,GAvBO,qBAuBzCqI,GAvByC,MAuB/BC,GAvB+B,SAwBZtI,mBAAS,GAxBG,qBAwBzCuI,GAxByC,MAwB7BC,GAxB6B,SAyBXxI,oBAAS,GAzBE,qBAyBzCyI,GAzByC,MAyB5BC,GAzB4B,MA2BhDtH,qBAAU,WACRC,EAAWsH,gBAAgBpE,EAAOE,WAAWlD,MAAK,SAACC,GACjDgF,EAAgBhF,EAAIC,KAAKC,MACzB2F,EAAW7F,EAAIC,KAAKC,KAAK,GAAGkH,SAC5BrB,EAAW/F,EAAIC,KAAKC,KAAK,GAAGmH,SAC5BpB,GAAWjG,EAAIC,KAAKC,KAAK,GAAGoH,WAC5BnB,GAAWnG,EAAIC,KAAKC,KAAK,GAAGkH,SAC5Bf,GAAWrG,EAAIC,KAAKC,KAAK,GAAGmH,SAC5Bd,GAAWvG,EAAIC,KAAKC,KAAK,GAAGoH,gBAE7B,IAEH1H,qBAAU,WACR,IAAMvD,EAAS,CACbC,OAAQyG,EAAOE,UACf1G,OAAM,OAAEuC,QAAF,IAAEA,OAAF,EAAEA,EAAWyI,WAErB1H,EAAW2H,iBAAiBnL,GAAQ0D,MAAK,SAACC,GACf,MAArBA,EAAIC,KAAKuG,SACX3G,EAAW4H,QAAQpL,GAAQ0D,MAAK,WAC9BU,QAAQC,IAAI,sCACZb,EAAW2H,iBAAiBnL,GAAQ0D,MAAK,SAACC,GACxCyG,GAAYzG,EAAIC,KAAKuG,gBAIzBC,GAAYzG,EAAIC,KAAKuG,eAGxB,IAEH,IAAMkB,GAAc,WAClBhC,EAAUgC,YAAV,2BACsBxC,GACpBrE,KAAKC,UAAU,CACbmE,KAAMA,EACNG,QAASA,EACTsB,QAASA,GACTiB,QAAQ,KAGZtC,EAAW,KAIPuC,GAAe,SAAC1F,GACpB,IAAM2F,EAAS3F,EAAEC,OAAOnE,UACV,eAAV6J,EACFhC,EAAW3D,EAAEC,OAAO3C,OACD,eAAVqI,EACT9B,EAAW7D,EAAEC,OAAO3C,OACD,eAAVqI,EACT5B,GAAW/D,EAAEC,OAAO3C,OACD,eAAVqI,EACT1B,GAAWjE,EAAEC,OAAO3C,OACD,eAAVqI,EACTxB,GAAWnE,EAAEC,OAAO3C,OACD,eAAVqI,GACTtB,GAAWrE,EAAEC,OAAO3C,QAiHlBsI,GAAU,SAAC5F,GACfzB,QAAQC,IAAIwB,EAAEC,OAAO3C,OACrB6F,EAAW,IACX,IAAMhJ,EAAS,CACbK,QAAS8J,GAAS9J,QAClBqL,QAAS7F,EAAEC,OAAO3C,OAEpBiB,QAAQC,IAAIrE,GACZwD,EAAWmI,SAAS3L,GACjB0D,MAAK,SAACC,GACLS,QAAQC,IAAI,0CACZgF,EAAUgC,YAAV,2BACsBxC,GACpBrE,KAAKC,UAAU,CACbmE,KAAMA,EACNG,QAAS,KACTsB,QAASA,UAiDnB,OACE,qCACE,sBAAK1I,UAAU,UAAf,UACE,qBAAKA,UAAU,aAAf,SACE,eAAC2E,EAAA,EAAD,CAAOE,OAAK,EAAZ,UACE,uBAAO7E,UAAU,aAAjB,SACE,6BACE,oBAAIiK,QAAQ,IAAZ,SACE,gCACE,cAACC,EAAA,EAAD,CACEC,IACEpD,EACIA,EAAa,GAAGqD,UAAUC,aAC1B,GAENxK,MAAO,CAAEyK,OAAQ,QAASlG,WAAY,QACtCmG,IAAK,qBACLC,eAAa,IAEf,uBAXF,yBAYU,IACPzD,EACGA,EAAa,GAAGqD,UAAUzH,gBAC1B,YAKZ,wBAAO3C,UAAU,cAAjB,UACE,+BACE,gDACA,6BACE,wBACEA,UAAU,eACVC,QAAS,YAhNZ,SAACiE,GACd,GAAI6C,EAAa,GAAGqD,UAAUzH,iBAAmBsE,EAAM,CACrD,IAAM5I,EAAS,CACboM,OAAS1D,EAAa,GAEtBpG,KAAM,WACN+J,OAAQ,EACRC,QAAS/C,GAGX/F,EAAW+I,WAAWvM,GAEtBqG,MAAM,uEAENA,MAAM,iFAmMUmG,IAHJ,+BAUJ,6BACE,oBAAI7K,UAAU,aAAaiK,QAAQ,IAAnC,SACE,0BACEjK,UAAU,cACVwB,MAAOoG,EACPkD,KAAK,OACL7G,SAAU2F,SAIhB,+BACE,gDACA,6BACE,wBACE5J,UAAU,eACVC,QAAS,YArNZ,SAACiE,GACd,GAAI6C,EAAa,GAAGqD,UAAUzH,iBAAmBsE,EAAM,CACrD,IAAM5I,EAAS,CACboM,OAAS1D,EAAa,GAEtBpG,KAAM,WACN+J,OAAQ,EACRC,QAAS7C,GAGXjG,EAAW+I,WAAWvM,GAEtBqG,MAAM,uEAENA,MAAM,iFAwMUqG,IAHJ,+BAUJ,6BACE,oBAAI/K,UAAU,aAAaiK,QAAQ,IAAnC,SACE,0BACEjK,UAAU,cACVwB,MAAOsG,EACPgD,KAAK,OACL7G,SAAU2F,SAIhB,+BACE,gDACA,6BACE,wBACE5J,UAAU,eACVC,QAAS,YA1NZ,SAACiE,GACd,GAAI6C,EAAa,GAAGqD,UAAUzH,iBAAmBsE,EAAM,CACrD,IAAM5I,EAAS,CACboM,OAAS1D,EAAa,GAEtBpG,KAAM,WACN+J,OAAQ,EACRC,QAAS3C,IAGXnG,EAAW+I,WAAWvM,GAEtBqG,MAAM,uEAENA,MAAM,iFA6MUsG,IAHJ,+BAUJ,6BACE,oBAAIhL,UAAU,aAAaiK,QAAQ,IAAnC,SACE,0BACEjK,UAAU,cACVwB,MAAOwG,GACP8C,KAAK,OACL7G,SAAU2F,iBAQtB,qBAAK5J,UAAU,WAAf,SACE,eAAC2E,EAAA,EAAD,CAAOE,OAAK,EAAZ,UACE,uBAAO7E,UAAU,gBAAjB,SACE,6BACE,oBAAIiK,QAAQ,IAAZ,SACE,qBAAKrG,GAAG,GAAG5D,UAAU,eAArB,SACG+E,EAAOR,qBAKhB,wBAAOvE,UAAU,cAAjB,UACE,6BACE,oBAAIiK,QAAQ,IAAZ,SACE,sBAAKrG,GAAG,GAAG5D,UAAU,eAArB,UACG+E,EAAOK,YADV,SAEE,cAAC,EAAD,CAAOS,KAAMd,EAAOK,YAAc,GAAIY,IAAOjB,EAAOK,YAAc,GAAIc,IAAO,EAAGO,OAAUwC,YAIhG,6BACE,oBAAIgB,QAAQ,IAAZ,SACE,sBAAKjK,UAAU,cAAf,UAEG+G,EAAeA,EAAa,GAAGkE,QAAU,GAF5C,IAEiDtC,GAFjD,0BAGMI,GAHN,YAGsB,IACnBhC,EAAeA,EAAa,GAAGkE,QAAU,GAJ5C,IAIiDpC,GAJjD,gBAQJ,6BACE,qBAAIoB,QAAQ,IAAZ,UACE,qBAAKpK,MAAO,CAAEqL,aAAc,OAA5B,6CACA,qBACEtH,GAAG,kBACH/D,MAAO,CACLyK,OAAQ,QACRa,UAAW,OACXrL,QAAS,OACTsL,cAAe,kBANnB,SASE,qBAAKvL,MAAO,GAAZ,SACGyH,EAASlH,KAAI,SAAC8D,EAAGmH,GAAO,IAAD,EACtB,OAAOtE,GACL7C,EAAE+C,OAAF,UACEF,EAAa,UADf,aACE,EAAiBqD,UAAUzH,iBAC7B,qBAAK3C,UAAU,oBAAf,SACGkE,EAAEyF,OACD,cAAC2B,EAAA,EAAD,CACEC,MAAI,EACJ1L,MAAO,CACL2L,QAAS,OACTC,UAAW,SACXnI,UAAW,UALf,SASE,cAACoI,EAAA,EAAD,CAAY7L,MAAO,CAAE4D,WAAY,OAAjC,SACGS,EAAEkD,WAHAiE,GAMS,OAAdnH,EAAEkD,QACJ,cAACkE,EAAA,EAAD,CACEC,MAAI,EACJ1L,MAAO,CACL2L,QAAS,OACTG,SAAU,cAJd,SAQE,eAACD,EAAA,EAAD,WACGxH,EAAE+C,KADL,mDAFKoE,GAOP,cAACC,EAAA,EAAD,CACEC,MAAI,EACJ1L,MAAO,CACL2L,QAAS,OACTG,SAAU,cAJd,SAQE,eAACD,EAAA,EAAD,WACGxH,EAAE+C,KACH,uBACC/C,EAAEkD,YALAiE,IAnC6BA,GA8CxC,qBAAKrL,UAAU,oBAAf,SACGkE,EAAEyF,OACD,cAAC2B,EAAA,EAAD,CACEC,MAAI,EACJ1L,MAAO,CACL2L,QAAS,OACTC,UAAW,SACXnI,UAAW,UALf,SASE,cAACoI,EAAA,EAAD,CAAY7L,MAAO,CAAE4D,WAAY,OAAjC,SACGS,EAAEkD,WAHAiE,GAMS,OAAdnH,EAAEkD,QACJ,cAACkE,EAAA,EAAD,CACEC,MAAI,EACJ1L,MAAO,CACL2L,QAAS,OACTG,SAAU,cAJd,SAQE,eAACD,EAAA,EAAD,WACGxH,EAAE+C,KADL,mDAFKoE,GAOP,cAACC,EAAA,EAAD,CACEC,MAAI,EACJ1L,MAAO,CACL2L,QAAS,OACTG,SAAU,cAJd,SAQE,eAACD,EAAA,EAAD,WACGxH,EAAE+C,KACH,uBACC/C,EAAEkD,YALAiE,IAnC6BA,eAmDpD,6BACE,oBAAIpB,QAAQ,IAAZ,SACE,sBAAKjK,UAAU,iBAAf,UACE,wBAAQ4D,GAAG,QAAQ5D,UAAU,8BAA8BC,QAAS,YAnSrE,SAACiE,GAChB,GAAI6C,EAAa,GAAGqD,UAAUzH,iBAAmBsE,GAAQF,EAAa,GAAGqD,UAAUzH,iBAAmBsE,EAAM,CAG1G,IAAM5I,EAAS,CACbM,UAAWoI,EAAa,GAAGpI,UAC3BgC,KAAO,UAETkB,EAAW+I,WAAWvM,GACnB0D,MAAK,WACJ2C,MAAM,kEAENwE,IAAc,WAGlBxE,MAAM,yEAoRmFkH,IAA3E,0BAGA,wBAAQhI,GAAG,MAAM5D,UAAU,gCAAgCC,QAAS,YAlRvE,SAACiE,GACd,GAAI6C,EAAa,GAAGqD,UAAUzH,iBAAmBsE,GAAQF,EAAa,GAAGqD,UAAUzH,iBAAmBsE,EAAM,CAC1G,IAAM5I,EAAS,CACbC,OAAQyG,EAAOE,UACftE,KAAO,WAETkB,EAAWgK,WAAWxN,GACnB0D,MAAK,WACJ2C,MAAM,kEACN,IAAMoH,EAAU,CACdxN,OAAQyG,EAAOE,UACftE,KAAO,SACPgK,QAAU,gBAEZ9I,EAAWgK,WAAWC,GACtB5C,IAAc,WAGlBxE,MAAM,yEAgQmFqH,IAA3E,iCAMN,6BACE,qBAAI9B,QAAQ,IAAZ,UACE,kEACA,qBACErG,GAAG,iBACH/D,MAAO,CACLyK,OAAQ,QACRa,UAAW,OACXrL,QAAS,OACTsL,cAAe,kBANnB,SASE,qBAAKvL,MAAO,CAAEyD,UAAW,QAAzB,SACGkE,EAAUpH,KAAI,SAAC8D,EAAGmH,GACjB,OACE,8BACGnH,EAAEyF,OACD,cAAC2B,EAAA,EAAD,CACEC,MAAI,EACJ1L,MAAO,CACL2L,QAAS,OACTC,UAAW,UAJf,SAQE,cAACC,EAAA,EAAD,CACE7L,MAAO,CACL4D,WAAY,MACZH,UAAW,UAHf,SAMGY,EAAEkD,WARAiE,GAWS,OAAdnH,EAAEkD,QACJ,cAACkE,EAAA,EAAD,CACEC,MAAI,EACJ1L,MAAO,CACL2L,QAAS,OACTG,SAAU,cAJd,SAQE,eAACD,EAAA,EAAD,WACGxH,EAAE+C,KADL,mDAFKoE,GAOP,cAACC,EAAA,EAAD,CACEC,MAAI,EACJ1L,MAAO,CACL2L,QAAS,OACTG,SAAU,cAJd,SAQE,eAACD,EAAA,EAAD,WACGxH,EAAE+C,KACH,uBACC/C,EAAEkD,YALAiE,IAvCDA,eAuDtB,6BACE,oBAAIpB,QAAQ,IAAZ,SACE,sBAAKjK,UAAU,iBAAf,UACE,wBACEA,UAAU,wBACVwB,MAAM,IACNvB,QAAS,SAACiE,GACR4F,GAAQ5F,IAJZ,SAOG6C,EAAeA,EAAa,GAAGkE,QAAU,KAE5C,wBACEjL,UAAU,2BACVwB,MAAM,IACNvB,QAAS,SAACiE,GACR4F,GAAQ5F,IAJZ,0BASA,wBACElE,UAAU,0BACVwB,MAAM,IACNvB,QAAS,SAACiE,GACR4F,GAAQ5F,IAJZ,SAOG6C,EAAeA,EAAa,GAAGkE,QAAU,YAKlD,+BACE,6BACE,uBACErH,GAAG,OACHkH,KAAK,OACLtJ,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAW6B,gBAClB9C,MAAO,CACLiF,MAAO,OACPzB,OAAQ,OACRG,SAAU,OACViI,UAAW,SACXhI,WAAY,MACZuI,MAAO,iBAETC,SAAS,eAGb,6BACE,uBACErI,GAAG,cACHkH,KAAK,OACLjL,MAAO,CAAEiF,MAAO,QAChBtD,MAAO4F,EACPnD,SAAU,SAACC,GACTmD,EAAWnD,EAAEC,OAAO3C,QAEtB0K,WAAY,SAAChI,GACXzB,QAAQC,IAAIwB,EAAEiI,KACD,SAATjI,EAAEiI,KACJzC,UAKR,6BACE,wBACE1J,UAAU,kBACVC,QAAS,WACPyJ,MAHJ,uCAcV,qBAAK1J,UAAU,aAAf,SACE,eAAC2E,EAAA,EAAD,CAAOE,OAAK,EAAZ,UACE,uBAAO7E,UAAU,kBAAjB,SACE,6BACE,oBAAIiK,QAAQ,IAAZ,SACE,gCACE,cAACC,EAAA,EAAD,CACEC,IACEpD,EACIA,EAAa,GAAGqD,UAAUC,aAC1B,GAENxK,MAAO,CAAEyK,OAAQ,QAASlG,WAAY,QACtCmG,IAAK,qBACLC,eAAa,IAEf,uBAXF,yBAYU,IACPzD,EACGA,EAAa,GAAGqD,UAAUzH,gBAC1B,YAKZ,wBAAO3C,UAAU,cAAjB,UACE,+BACE,gDACA,6BACE,wBACEA,UAAU,eACVC,QAAS,YAjjBZ,SAACiE,GACd,GAAI6C,EAAa,GAAGqD,UAAUzH,iBAAmBsE,EAAM,CACrD,IAAM5I,EAAS,CACboM,OAAS1D,EAAa,GAEtBpG,KAAM,WACN+J,OAAQ,EACRC,QAASzC,IAGXrG,EAAW+I,WAAWvM,GAEtBqG,MAAM,uEAENA,MAAM,iFAoiBU0H,IAHJ,+BAUJ,6BACE,oBAAIpM,UAAU,aAAaiK,QAAQ,IAAnC,SACE,0BACEjK,UAAU,cACVwB,MAAO0G,GACP4C,KAAK,OACL7G,SAAU2F,SAIhB,+BACE,gDACA,6BACE,wBACE5J,UAAU,eACVC,QAAS,YAtjBZ,SAACiE,GACd,GAAI6C,EAAa,GAAGqD,UAAUzH,iBAAmBsE,EAAM,CACrD,IAAM5I,EAAS,CACboM,OAAS1D,EAAa,GAEtBpG,KAAM,WACN+J,OAAQ,EACRC,QAASvC,IAGXvG,EAAW+I,WAAWvM,GAEtBqG,MAAM,uEAENA,MAAM,iFAyiBU2H,IAHJ,+BAUJ,6BACE,oBAAIrM,UAAU,aAAaiK,QAAQ,IAAnC,SACE,0BACEjK,UAAU,cACVwB,MAAO4G,GACP0C,KAAK,OACL7G,SAAU2F,SAIhB,+BACE,gDACA,6BACE,wBACE5J,UAAU,eACVC,QAAS,YA3jBZ,SAACiE,GACd,GAAI6C,EAAa,GAAGqD,UAAUzH,iBAAmBsE,EAAM,CACrD,IAAM5I,EAAS,CACboM,OAAS1D,EAAa,GAEtBpG,KAAM,WACN+J,OAAQ,EACRC,QAASrC,IAGXzG,EAAW+I,WAAWvM,GAEtBqG,MAAM,uEAENA,MAAM,iFA8iBU4H,IAHJ,+BAUJ,6BACE,oBAAItM,UAAU,aAAaiK,QAAQ,IAAnC,SACE,0BACEjK,UAAU,cACVwB,MAAO8G,GACPwC,KAAK,OACL7G,SAAU2F,oBAQxB,cAAC,IAAD,CACE2C,IAAI,gDACJpF,OAAQA,EACRqF,UAAW,WACT/J,QAAQC,IAAI,aACZgF,EAAUgC,YAAV,uBACkBxC,GAChBrE,KAAKC,UAAU,CACbmE,KAAMA,EACNG,QAASH,EAAO,kBAChByB,QAASA,GACTiB,QAAQ,MAId8C,aAAc,WACZhK,QAAQC,IAAI,iBAEdgK,UAAW,SAACxI,GASV,GARAzB,QAAQC,IAAI,IAAKwB,GAEbA,EAAEwE,UACJE,GAAS1E,EAAEwE,QAAQC,OACnBK,GAAc9E,EAAEwE,QAAQK,YACxBD,GAAY5E,EAAEwE,QAAQiE,WAItBzI,EAAE+C,MAAQF,EAAa,GAAGqD,UAAUzH,iBACpCuB,EAAE+C,MAAQF,EAAa,GAAGqD,UAAUzH,gBACpC,CACA,IAAMiK,EAAI,YAAOtF,GACjBsF,EAAKC,KAAK3I,GACVqD,EAAYqF,OAGT,CACH,IAAMA,EAAI,YAAOpF,GACjBoF,EAAKC,KAAK3I,GACVuD,EAAamF,KAGjBE,IAAK,SAACC,GACJpF,EAAaoF,SClyBRC,MAjBf,WACE,OACE,cAAC,IAAD,UACE,qBAAKhN,UAAU,MAAf,SACE,cAACiN,EAAA,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,2BAA2BC,UAAW5M,IAElD,cAAC,IAAD,CAAO2M,KAAK,0BAA0BC,UAAWtG,c,OCR7DuG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.95b12b64.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst AUDIENCE_URL = \"http://localhost:9999/ta_back/debbattle/audience\";\r\nconst DEBATE_URL = \"http://localhost:9999/ta_back/debbattle/debate\";\r\nconst DETAIL_URL = \"http://localhost:9999/ta_back/debbattle/debatedetail\";\r\n\r\nclass ApiService {\r\n  /*\r\n        Audience\r\n    */\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience\r\n  fetchAudiences() {\r\n    return axios.get(AUDIENCE_URL, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience/one\r\n  // params : \"audi_no\"\r\n  fetchAudOneByPK(params) {\r\n    return axios.get(AUDIENCE_URL + \"/one\", params, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience/two?deb_no=숫자&mem_no=숫자\r\n  // params : \"deb_no\", \"mem_no\"\r\n  fetchAudOneByTwo(params) {\r\n    return axios.get(\r\n      AUDIENCE_URL + `/two?deb_no=${params.deb_no}&mem_no=${params.mem_no}`,\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience/vote?deb_no=숫자\r\n  // params : \"deb_no\"\r\n  fetchVoteCount(params) {\r\n    return axios.get(AUDIENCE_URL + `/vote?deb_no=${params.deb_no}`, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience\r\n  // params : \"deb_no\", \"mem_no\"\r\n  addVote(params) {\r\n    return axios.post(AUDIENCE_URL, params, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience/관중번호\r\n  // params : \"audi_no\", \"vote_no\"\r\n  editVote(params) {\r\n    return axios.put(AUDIENCE_URL + \"/\" + params.audi_no, params, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  /*\r\n        Debate\r\n    */\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debate\r\n  fetchDebates() {\r\n    return axios.get(DEBATE_URL, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debate/토론번호\r\n  fetchDebOne(deb_no) {\r\n    return axios.get(DEBATE_URL + \"/\" + deb_no, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debate/토론번호\r\n  // params : \"deb_no\", \"word\", \"setdata\"\r\n  editDebate(params) {\r\n    return axios.put(DEBATE_URL + \"/\" + params.deb_no, params);\r\n  }\r\n\r\n  /*\r\n        DebateDetail\r\n    */\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debatedetail/토론번호\r\n  fetchDiscussors(deb_no) {\r\n    return axios.get(DETAIL_URL + \"/\" + deb_no, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debatedetail/one\r\n  // params : \"deb_no\", \"discussor\"\r\n  fetchDetailOne(params) {\r\n    return axios.get(DETAIL_URL + \"/one\", params, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debatedetail/상세번호\r\n  // params : \"detail_no\", \"word\", \"evi_no\", \"setdata\"\r\n  editDetail(params) {\r\n    return axios.put(DETAIL_URL + \"/\" + params.detail_no, params, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n}\r\n\r\nexport default new ApiService();\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Pagination = (props) => {\r\n  //const pageCount = 5; //한페이지 표시될 개수\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props; // 각각 아이템(영화목록) 개수, 한 페이지에 보여줄 아이템(영화목록) 개수\r\n  var totalPage = Math.ceil(itemsCount / pageSize); // 몇 페이지가 필요한지 계산 토탈페이지수\r\n  const pageGroup = Math.ceil(currentPage / pageSize); //한 페이지에 보여줄 페이지 그룹수\r\n\r\n  if (totalPage === 1) return null; // 1페이지 뿐이라면 페이지 수를 보여주지 않음\r\n\r\n  var last = pageGroup * pageSize; // 화면에 보여질 마지막 페이지 번호\r\n  if (last > totalPage) last = totalPage;\r\n  var first = last - (pageSize - 1); // 화면에 보여질 첫번째 페이지 번호\r\n  if (first < 1) first = 1;\r\n  // var next = last + 1;\r\n  // var prev = first - 1;\r\n  var prevButton = false;\r\n  if (currentPage == 1) {\r\n    prevButton = false;\r\n  } else {\r\n    prevButton = true;\r\n  }\r\n  var nextButton = false;\r\n  if (currentPage == totalPage) {\r\n    nextButton = false;\r\n  } else {\r\n    nextButton = true;\r\n  }\r\n  const pages = _.range(first, last + 1); // 마지막 페이지에 보여줄 컨텐츠를 위해 +1, https://lodash.com/docs/#range 참고\r\n  return (\r\n    <nav style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      {\" \"}\r\n      {/* VSCode 입력: nav>ul.pagination>li.page-item>a.page-link */}\r\n      <ul className=\"pagination\">\r\n        {prevButton && (\r\n          <li className=\"prev\">\r\n            <Link\r\n              className=\"page-link\"\r\n              onClick={() => onPageChange(currentPage - 1)}\r\n              to={{pathname: `/ta_front/debbattle.html`}}\r\n            >\r\n              &laquo;\r\n            </Link>\r\n          </li>\r\n        )}\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"} // Bootstrap을 이용하여 현재 페이지를 시각적으로 표시\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            {/* <Link className=\"page-link\" onClick={(e) => {e.preventDefault(); onPageChange(page)}} to={{pathname: `/`}}> */}\r\n            <Link className=\"page-link\" onClick={() => onPageChange(page)} to={{pathname: `/ta_front/debbattle.html`}}>\r\n              {page}\r\n            </Link>{\" \"}\r\n            {/* 페이지 번호 클릭 이벤트 처리기 지정 */}\r\n          </li>\r\n        ))}\r\n        {nextButton && (\r\n          <li className=\"next\">\r\n            <Link\r\n              className=\"page-link\"\r\n              // onClick={(e) => {e.preventDefault(); onPageChange(currentPage + 1);}}\r\n              onClick={() => onPageChange(currentPage + 1)}\r\n              to={{pathname: `/ta_front/debbattle.html`}}///\r\n            >\r\n              &raquo;\r\n            </Link>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import { useEffect, useState } from \"react\";\r\nimport { Button, Alert } from \"react-bootstrap\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport ApiService from \"../ApiService\";\r\n\r\nimport Pagination from \"./pagination/DebatePaging\";\r\nimport { paginate } from \"./pagination/paginate\";\r\n\r\nexport default function DebateBattleList(props) {\r\n  const [deblist, setDebList] = useState();\r\n  const [word, setWord] = useState();\r\n  const [currentPage, setCurpage] = useState(1);\r\n  const [logininfo, setLogininfo] = useState();\r\n  const [searchAlert, setSearchAlert] = useState(false);\r\n  // 페이징 기능\r\n  const pageSize = 5;\r\n  const pagedDebate = paginate(deblist, currentPage, pageSize);\r\n\r\n  const deb_length = deblist?.length;\r\n\r\n  function handlePageChange(page) {\r\n    setCurpage(page);\r\n  }\r\n\r\n  // 검색 기능\r\n  const search = (e) => {\r\n    setWord(e.target.value);\r\n  };\r\n\r\n  const btnsearch = (e) => {\r\n    if (word) {\r\n      setCurpage(1);\r\n      let result = [];\r\n\r\n      result = deblist.filter((data) => {\r\n        return data.debate_topic.search(word) !== -1;\r\n      });\r\n      setDebList(result);\r\n    } else {\r\n      e.preventDefault();\r\n      alert(\"검색어를 입력해주세요\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    ApiService.fetchDebates().then((res) => {\r\n      setDebList(res.data.list);\r\n      // console.log(props);\r\n      // props.setLoginInfo(res.data.logininfo);\r\n      setLogininfo(res.data.logininfo);\r\n    });\r\n  }, []);\r\n\r\n  //로그인 테스트\r\n  function login() {\r\n    // const mem = { member_social_no: \"118153287897731040607\" };\r\n    fetch(\r\n      \"http://localhost:9999/ta_back/member/login?socialNo=347856298374982379\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n\r\n        credentials: \"include\",\r\n      }\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setLogininfo(data.member);\r\n        console.log(data.member);\r\n        console.log(\"login--->\", data.member);\r\n      });\r\n  }\r\n\r\n  function login2() {\r\n    // const mem = { member_social_no: \"118153287897731040607\" };\r\n    fetch(\"http://localhost:9999/ta_back/member/login?socialNo=773598399242\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setLogininfo(data.member);\r\n        console.log(data.member.member_nickName);\r\n        console.log(\"login--->\", data.member);\r\n      });\r\n  }\r\n  function login3() {\r\n    // const mem = { member_social_no: \"118153287897731040607\" };\r\n    fetch(\"http://localhost:9999/ta_back/member/login?socialNo=1800199288\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        // console.log(\"로그인 : \", res.json());\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setLogininfo(data.member);\r\n        console.log(data.member.member_nickName);\r\n        console.log(\"login--->\", data.member);\r\n      });\r\n  }\r\n\r\n  function logout() {\r\n    // const mem = { member_social_no: \"118153287897731040607\" };\r\n    fetch(\"http://localhost:9999/ta_back/member/logout\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        member_social_no: \"118153287897731040607\",\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        // setLoginInfo(data.member);\r\n        console.log(\"logout--->\", data);\r\n      });\r\n  }\r\n  //로그인 테스트 끝\r\n\r\n  return (\r\n    <>\r\n      <button onClick={login}>토론자 A 로그인</button>\r\n      <button onClick={login2}>토론자 B 로그인</button>\r\n      <button onClick={login3}>관중 로그인 </button>\r\n      <button onClick={logout}>로그아웃</button>\r\n      <Alert show={searchAlert} variant=\"danger\">\r\n        <Alert.Heading>로그인 후 입장하실 수 있습니다!</Alert.Heading>\r\n        <p>건전한 토론을 위해 소셜 로그인을 해주세요 ^__^</p>\r\n        <div className=\"d-flex justify-content-end\">\r\n          {\r\n            <Button\r\n              onClick={() => setSearchAlert(false)}\r\n              variant=\"outline-dark\"\r\n              style={{ border: \"none\" }}\r\n            >\r\n              Close\r\n            </Button>\r\n          }\r\n        </div>\r\n      </Alert>\r\n      <h2 style={{ display: \"flex\", justifyContent: \"center\" }}>토론 배틀</h2>\r\n      <div\r\n        style={{\r\n          textAlign: \"right\",\r\n          marginRight: \"10px\",\r\n          display: \"block\",\r\n        }}\r\n      >\r\n        <label style={{ fontSize: \"15pt\", fontWeight: \"600\" }}>\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n              검색\r\n            </InputGroup.Text>\r\n\r\n            <FormControl\r\n              aria-label=\"Default\"\r\n              aria-describedby=\"inputGroup-sizing-default\"\r\n              placeholder=\"검색할 단어를 입력\"\r\n              onChange={search}\r\n            />\r\n          </InputGroup>\r\n        </label>\r\n\r\n        <Button\r\n          style={{ marginLeft: \"10px\" }}\r\n          className=\"buttons\"\r\n          variant=\"success\"\r\n          onClick={btnsearch}\r\n        >\r\n          검색\r\n        </Button>\r\n      </div>\r\n      <Table responsive=\"xl\" hover>\r\n        <thead className=\"table-primary\">\r\n          <tr style={{ fontSize: \"14pt\" }}>\r\n            <th style={{ width: \"10%\" }}>번호</th>\r\n            <th style={{ width: \"20%\" }}>주제</th>\r\n            <th style={{ width: \"20%\" }}>현황</th>\r\n            <th style={{ width: \"10%\" }}>토론 시간</th>\r\n            <th style={{ width: \"20%\" }}>시작 시각</th>\r\n            <th style={{ width: \"20%\" }}>종료 시각</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"table-light\">\r\n          {pagedDebate?.map((debate, index) => (\r\n            <tr key={debate.debate_no}>\r\n              <td>{(currentPage - 1) * pageSize + index + 1}</td>\r\n              <td>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/ta_front/debbattle/${debate.debate_no}`,\r\n                    state: { debate: debate, logininfo: logininfo }, //\r\n                  }}\r\n                  onClick={(e) => {\r\n                    if (logininfo == null) {\r\n                      e.preventDefault();\r\n                      setSearchAlert(true);\r\n                      // alert(\"로그인 후 이용 가능합니다.\");\r\n                    }\r\n                  }}\r\n                >\r\n                  {debate.debate_topic}\r\n                </Link>\r\n              </td>\r\n              <td>{debate.debate_status}</td>\r\n              <td>{debate.debate_time + \"분\"}</td>\r\n              <td>{debate.debate_startDate}</td>\r\n              <td>{debate.debate_endDate}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <Pagination\r\n        itemsCount={deb_length} //\r\n        pageSize={pageSize}\r\n        currentPage={currentPage}\r\n        onPageChange={handlePageChange}\r\n      />\r\n    </>\r\n  );\r\n}","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize; // 자를 배열의 시작점\r\n\r\n  return _(items)\r\n    .slice(startIndex) // 시작점부터 배열을 자르되\r\n    .take(pageSize) // pageSize만큼의 배열을 취함\r\n    .value(); // lodash wrapper 객체를 regular 배열로 변환\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst padNumber = (num, length) => {\r\n  return String(num).padStart(length, '0');\r\n};\r\n\r\nconst Timer = (props) => {\r\n    // 아무것도 입력하지 않으면 undefined가 들어오기 때문에 유효성 검사부터..\r\n    const tempHour = props.hour ? parseInt(props.hour) : 0;\r\n    const tempMin = props.min ? parseInt(props.min) : 0;\r\n    const tempSec = props.sec ? parseInt(props.sec) : 0;\r\n\r\n    // 타이머를 초단위로 변환한 initialTime과 setInterval을 저장할 interval ref\r\n    const initialTime = useRef(tempHour * 60 * 60 + tempMin * 60 + tempSec);\r\n    const interval = useRef(null);\r\n\r\n    const [hour, setHour] = useState(padNumber(tempHour, 2));\r\n    const [min, setMin] = useState(padNumber(tempMin, 2));\r\n    const [sec, setSec] = useState(padNumber(tempSec, 2));\r\n\r\n    useEffect(() => {\r\n        if(props.status){\r\n            interval.current = setInterval(() => {\r\n                initialTime.current -= 1;\r\n                setHour(padNumber(parseInt(initialTime.current / 3600), 2));\r\n                setMin(padNumber(parseInt((initialTime.current % 3600) / 60), 2));\r\n                setSec(padNumber(parseInt(initialTime.current % 60), 2));\r\n            }, 1000);\r\n            return () => clearInterval(interval.current);\r\n        }\r\n    }, [props?.status]);\r\n\r\n    // 초가 변할 때만 실행되는 useEffect\r\n    // initialTime을 검사해서 0이 되면 interval을 멈춘다.\r\n    useEffect(() => {\r\n        if (initialTime.current <= 0) {\r\n            clearInterval(interval.current);\r\n        }\r\n    }, [sec]);\r\n\r\n    return (\r\n        <div>\r\n            {hour} : {min} : {sec}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timer;","import { useState, useEffect } from \"react\";\nimport { Table, button, Image } from \"react-bootstrap\";\nimport \"./css/battle.css\";\nimport ApiService from \"../ApiService\";\nimport SockJsClient from \"react-stomp\";\n\nimport { Grid, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport Timer from \"./Timer\";\n\nexport default function DebateBattleDetail(props) {\n  const [debate] = useState(props?.location?.state.debate);\n  const [logininfo] = useState(props?.location?.state.logininfo);\n  const [debateDetail, setdebateDetail] = useState();\n\n  const [name] = useState(logininfo?.member_nickName);\n  const [room] = useState(debate.debate_no);\n  const [topics] = useState([`/topic/${room}`]);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [messages2, setMessages2] = useState([]);\n  const [clientRef, setClientRef] = useState();\n\n  const [evid_A1, setEvid_A1] = useState(\"\");\n  const [evid_A2, setEvid_A2] = useState(\"\");\n  const [evid_A3, setEvid_A3] = useState(\"\");\n  const [evid_B1, setEvid_B1] = useState(\"\");\n  const [evid_B2, setEvid_B2] = useState(\"\");\n  const [evid_B3, setEvid_B3] = useState(\"\");\n\n  const [audience, setAudience] = useState([]);\n  const [votecnt, setVoteCnt] = useState();\n  const [agree, setAgree] = useState(0);\n  const [disAgree, setDisAgree] = useState(0);\n  const [neutrality, setNeutrality] = useState(0);\n  const [startStatus, setStartState] = useState(false);\n\n  useEffect(() => {\n    ApiService.fetchDiscussors(debate.debate_no).then((res) => {\n      setdebateDetail(res.data.list);\n      setEvid_A1(res.data.list[0].evi_one);\n      setEvid_A2(res.data.list[0].evi_two);\n      setEvid_A3(res.data.list[0].evi_three);\n      setEvid_B1(res.data.list[1].evi_one);\n      setEvid_B2(res.data.list[1].evi_two);\n      setEvid_B3(res.data.list[1].evi_three);\n    });\n  }, []);\n\n  useEffect(() => {\n    const params = {\n      deb_no: debate.debate_no, //\n      mem_no: logininfo?.member_no, //\n    };\n    ApiService.fetchAudOneByTwo(params).then((res) => {\n      if (res.data.audience == null) {\n        ApiService.addVote(params).then(() => {\n          console.log(\"audience 생성 완료\");\n          ApiService.fetchAudOneByTwo(params).then((res) => {\n            setAudience(res.data.audience);\n          });\n        });\n      } else {\n        setAudience(res.data.audience);\n      }\n    });\n  }, []);\n\n  const sendMessage = () => {\n    clientRef.sendMessage(\n      `/app/sendMessage/${room}`,\n      JSON.stringify({\n        name: name,\n        message: message,\n        votecnt: votecnt,\n        server: false,\n      })\n    );\n    setMessage(\"\");\n  };\n\n  // 근거 등록\n  const handleChange = (e) => {\n    const btn_no = e.target.className;\n    if (btn_no == \"evidence_A1\") {\n      setEvid_A1(e.target.value);\n    } else if (btn_no == \"evidence_A2\") {\n      setEvid_A2(e.target.value);\n    } else if (btn_no == \"evidence_A3\") {\n      setEvid_A3(e.target.value);\n    } else if (btn_no == \"evidence_B1\") {\n      setEvid_B1(e.target.value);\n    } else if (btn_no == \"evidence_B2\") {\n      setEvid_B2(e.target.value);\n    } else if (btn_no == \"evidence_B3\") {\n      setEvid_B3(e.target.value);\n    }\n  };\n\n  const btn_a1 = (e) => {\n    if (debateDetail[0].discussor.member_nickName == name) {\n      const params = {\n        detail : debateDetail[0],\n        // detail_no: debateDetail[0].detail_no,\n        word: \"evidence\",\n        evi_no: 1,\n        setdata: evid_A1,\n      };\n\n      ApiService.editDetail(params);\n\n      alert(\"수정이 완료되었습니다.\");\n    } else {\n      alert(\"토론자 A만 수정이 가능합니다.\");\n    }\n  };\n\n  const btn_a2 = (e) => {\n    if (debateDetail[0].discussor.member_nickName == name) {\n      const params = {\n        detail : debateDetail[0],\n        // detail_no: debateDetail[0].detail_no,\n        word: \"evidence\",\n        evi_no: 2,\n        setdata: evid_A2,\n      };\n\n      ApiService.editDetail(params);\n\n      alert(\"수정이 완료되었습니다.\");\n    } else {\n      alert(\"토론자 A만 수정이 가능합니다.\");\n    }\n  };\n\n  const btn_a3 = (e) => {\n    if (debateDetail[0].discussor.member_nickName == name) {\n      const params = {\n        detail : debateDetail[0],\n        // detail_no: debateDetail[0].detail_no,\n        word: \"evidence\",\n        evi_no: 3,\n        setdata: evid_A3,\n      };\n\n      ApiService.editDetail(params);\n\n      alert(\"수정이 완료되었습니다.\");\n    } else {\n      alert(\"토론자 A만 수정이 가능합니다.\");\n    }\n  };\n\n  const btn_b1 = (e) => {\n    if (debateDetail[1].discussor.member_nickName == name) {\n      const params = {\n        detail : debateDetail[1],\n        // detail_no: debateDetail[1].detail_no,\n        word: \"evidence\",\n        evi_no: 1,\n        setdata: evid_B1,\n      };\n\n      ApiService.editDetail(params);\n\n      alert(\"수정이 완료되었습니다.\");\n    } else {\n      alert(\"토론자 B만 수정이 가능합니다.\");\n    }\n  };\n\n  const btn_b2 = (e) => {\n    if (debateDetail[1].discussor.member_nickName == name) {\n      const params = {\n        detail : debateDetail[1],\n        // detail_no: debateDetail[1].detail_no,\n        word: \"evidence\",\n        evi_no: 2,\n        setdata: evid_B2,\n      };\n\n      ApiService.editDetail(params);\n\n      alert(\"수정이 완료되었습니다.\");\n    } else {\n      alert(\"토론자 B만 수정이 가능합니다.\");\n    }\n  };\n\n  const btn_b3 = (e) => {\n    if (debateDetail[1].discussor.member_nickName == name) {\n      const params = {\n        detail : debateDetail[1],\n        // detail_no: debateDetail[1].detail_no,\n        word: \"evidence\",\n        evi_no: 3,\n        setdata: evid_B3,\n      };\n\n      ApiService.editDetail(params);\n\n      alert(\"수정이 완료되었습니다.\");\n    } else {\n      alert(\"토론자 B만 수정이 가능합니다.\");\n    }\n  };\n\n  // 투표 Update\n  const setVote = (e) => {\n    console.log(e.target.value);\n    setMessage(\"\");\n    const params = {\n      audi_no: audience.audi_no,\n      vote_no: e.target.value, //\n    };\n    console.log(params);\n    ApiService.editVote(params)\n      .then((res) => {\n        console.log(\"투표 수정 완료\");\n        clientRef.sendMessage(\n          `/app/sendMessage/${room}`,\n          JSON.stringify({\n            name: name,\n            message: null,\n            votecnt: votecnt,\n          })\n        );\n      });\n  };\n\n  // 시작 버튼 클릭\n  const setStart = (e) => {\n    if (debateDetail[0].discussor.member_nickName == name || debateDetail[1].discussor.member_nickName == name) {\n      // http://localhost:9999/ta_back/debbattle/debatedetail/상세번호\n      // params : \"detail_no\", \"word\", \"evi_no\", \"setdata\"\n      const params = {\n        detail_no: debateDetail[0].detail_no,\n        word : \"intime\", //\n      };\n      ApiService.editDetail(params)\n        .then(() => {\n          alert(\"토론이 시작되었습니다.\");\n          // setStartState((startStatus) => !startStatus);\n          setStartState(true);\n        });\n    } else {\n      alert(\"토론자만 시작 가능합니다.\");\n    }\n  };\n\n  // 종료 버튼 클릭\n  const setEnd = (e) => {\n    if (debateDetail[0].discussor.member_nickName == name || debateDetail[1].discussor.member_nickName == name) {\n      const params = {\n        deb_no: debate.debate_no,\n        word : \"enddate\", \n      };\n      ApiService.editDebate(params)\n        .then(() => {\n          alert(\"토론이 종료되었습니다.\");\n          const params2 = {\n            deb_no: debate.debate_no,\n            word : \"status\",\n            setdata : \"종료\", \n          };\n          ApiService.editDebate(params2);\n          setStartState(false);\n        });\n    } else {\n      alert(\"토론자만 종료 가능합니다.\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"wrapper\">\n        <div className=\"discussor1\">\n          <Table hover>\n            <thead className=\"table-info\">\n              <tr>\n                <td colSpan=\"2\">\n                  <div>\n                    <Image\n                      src={\n                        debateDetail\n                          ? debateDetail[0].discussor.member_thumb\n                          : \"\"\n                      }\n                      style={{ height: \"120px\", marginLeft: \"20px\" }}\n                      alt={\"썸네일\"}\n                      roundedCircle\n                    />\n                    <br></br>\n                    토론자 A :{\" \"}\n                    {debateDetail\n                      ? debateDetail[0].discussor.member_nickName\n                      : \"\"}\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody className=\"table-light\">\n              <tr>\n                <td>근거 1</td>\n                <td>\n                  <button\n                    className=\"btn btn-info\"\n                    onClick={() => {\n                      btn_a1();\n                    }}\n                  >\n                    등록\n                  </button>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"evidence_A\" colSpan=\"2\">\n                  <textarea\n                    className=\"evidence_A1\"\n                    value={evid_A1}\n                    type=\"text\"\n                    onChange={handleChange}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>근거 2</td>\n                <td>\n                  <button\n                    className=\"btn btn-info\"\n                    onClick={() => {\n                      btn_a2();\n                    }}\n                  >\n                    등록\n                  </button>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"evidence_A\" colSpan=\"2\">\n                  <textarea\n                    className=\"evidence_A2\"\n                    value={evid_A2}\n                    type=\"text\"\n                    onChange={handleChange}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>근거 3</td>\n                <td>\n                  <button\n                    className=\"btn btn-info\"\n                    onClick={() => {\n                      btn_a3();\n                    }}\n                  >\n                    등록\n                  </button>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"evidence_A\" colSpan=\"2\">\n                  <textarea\n                    className=\"evidence_A3\"\n                    value={evid_A3}\n                    type=\"text\"\n                    onChange={handleChange}\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </div>\n\n        <div className=\"chatting\">\n          <Table hover>\n            <thead className=\"table-success\">\n              <tr>\n                <td colSpan=\"3\">\n                  <div id=\"\" className=\"battle_topic\">\n                    {debate.debate_topic}\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody className=\"table-light\">\n              <tr>\n                <td colSpan=\"3\">\n                  <div id=\"\" className=\"battle-timer\">\n                    {debate.debate_time}분\n                    <Timer hour={debate.debate_time / 60} min = {debate.debate_time % 60} sec = {0} status = {startStatus}/>\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td colSpan=\"3\">\n                  <div className=\"battle_vote\">\n                    {/* <div>{messages}</div> */}\n                    {debateDetail ? debateDetail[0].discuss : \"\"} {agree} 표 /\n                    중립 {neutrality} 표 /{\" \"}\n                    {debateDetail ? debateDetail[1].discuss : \"\"} {disAgree}표\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td colSpan=\"3\">\n                  <div style={{ marginBottom: \"5px\" }}>토론자 채팅</div>\n                  <div\n                    id=\"discussorWindow\"\n                    style={{\n                      height: \"145px\",\n                      overflowY: \"auto\",\n                      display: \"flex\",\n                      flexDirection: \"column-reverse\",\n                    }}\n                  >\n                    <div style={{}}>\n                      {messages.map((e, i) => {\n                        return debateDetail &&\n                          e.name ==\n                            debateDetail[0]?.discussor.member_nickName ? (\n                          <div className=\"discussor1message\" key={i}>\n                            {e.server ? (\n                              <Grid\n                                item\n                                style={{\n                                  padding: \"10px\",\n                                  fontStyle: \"italic\",\n                                  textAlign: \"center\",\n                                }}\n                                key={i}\n                              >\n                                <Typography style={{ fontWeight: \"800\" }}>\n                                  {e.message}\n                                </Typography>\n                              </Grid>\n                            ) : e.message === null ? (\n                              <Grid\n                                item\n                                style={{\n                                  padding: \"10px\",\n                                  wordWrap: \"break-word\",\n                                }}\n                                key={i}\n                              >\n                                <Typography>\n                                  {e.name} 투표되었습니다.\n                                </Typography>\n                              </Grid>\n                            ) : (\n                              <Grid\n                                item\n                                style={{\n                                  padding: \"10px\",\n                                  wordWrap: \"break-word\",\n                                }}\n                                key={i}\n                              >\n                                <Typography>\n                                  {e.name}\n                                  <br />\n                                  {e.message}\n                                </Typography>\n                              </Grid>\n                            )}\n                          </div>\n                        ) : (\n                          <div className=\"discussor2message\" key={i}>\n                            {e.server ? (\n                              <Grid\n                                item\n                                style={{\n                                  padding: \"10px\",\n                                  fontStyle: \"italic\",\n                                  textAlign: \"center\",\n                                }}\n                                key={i}\n                              >\n                                <Typography style={{ fontWeight: \"800\" }}>\n                                  {e.message}\n                                </Typography>\n                              </Grid>\n                            ) : e.message === null ? (\n                              <Grid\n                                item\n                                style={{\n                                  padding: \"10px\",\n                                  wordWrap: \"break-word\",\n                                }}\n                                key={i}\n                              >\n                                <Typography>\n                                  {e.name} 투표되었습니다.\n                                </Typography>\n                              </Grid>\n                            ) : (\n                              <Grid\n                                item\n                                style={{\n                                  padding: \"10px\",\n                                  wordWrap: \"break-word\",\n                                }}\n                                key={i}\n                              >\n                                <Typography>\n                                  {e.name}\n                                  <br />\n                                  {e.message}\n                                </Typography>\n                              </Grid>\n                            )}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td colSpan=\"3\">\n                  <div className=\"set_time-group\">\n                    <button id=\"start\" className=\"btn btn-primary btn_settime\" onClick={() => {setStart();}}>\n                      시작\n                    </button>\n                    <button id=\"end\" className=\"btn btn-secondary btn_settime\" onClick={() => {setEnd();}}>\n                      종료\n                    </button>\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td colSpan=\"3\">\n                  <div>중계방 채팅</div>\n                  <div\n                    id=\"audienceWindow\"\n                    style={{\n                      height: \"140px\",\n                      overflowY: \"auto\",\n                      display: \"flex\",\n                      flexDirection: \"column-reverse\",\n                    }}\n                  >\n                    <div style={{ textAlign: \"left\" }}>\n                      {messages2.map((e, i) => {\n                        return (\n                          <div key={i}>\n                            {e.server ? (\n                              <Grid\n                                item\n                                style={{\n                                  padding: \"10px\",\n                                  fontStyle: \"italic\",\n                                }}\n                                key={i}\n                              >\n                                <Typography\n                                  style={{\n                                    fontWeight: \"800\",\n                                    textAlign: \"center\",\n                                  }}\n                                >\n                                  {e.message}\n                                </Typography>\n                              </Grid>\n                            ) : e.message === null ? (\n                              <Grid\n                                item\n                                style={{\n                                  padding: \"10px\",\n                                  wordWrap: \"break-word\",\n                                }}\n                                key={i}\n                              >\n                                <Typography>\n                                  {e.name} 투표되었습니다.\n                                </Typography>\n                              </Grid>\n                            ) : (\n                              <Grid\n                                item\n                                style={{\n                                  padding: \"10px\",\n                                  wordWrap: \"break-word\",\n                                }}\n                                key={i}\n                              >\n                                <Typography>\n                                  {e.name}\n                                  <br />\n                                  {e.message}\n                                </Typography>\n                              </Grid>\n                            )}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td colSpan=\"3\">\n                  <div className=\"vote_div_group\">\n                    <button\n                      className=\"btn btn-info btn_vote\"\n                      value=\"1\"\n                      onClick={(e) => {\n                        setVote(e);\n                      }}\n                    >\n                      {debateDetail ? debateDetail[0].discuss : \"\"}\n                    </button>\n                    <button\n                      className=\"btn btn-success btn_vote\"\n                      value=\"2\"\n                      onClick={(e) => {\n                        setVote(e);\n                      }}\n                    >\n                      중립\n                    </button>\n                    <button\n                      className=\"btn btn-danger btn_vote\"\n                      value=\"3\"\n                      onClick={(e) => {\n                        setVote(e);\n                      }}\n                    >\n                      {debateDetail ? debateDetail[1].discuss : \"\"}\n                    </button>\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <input\n                    id=\"user\"\n                    type=\"text\"\n                    value={logininfo?.member_nickName}\n                    style={{\n                      width: \"70px\",\n                      border: \"none\",\n                      fontSize: \"10pt\",\n                      fontStyle: \"italic\",\n                      fontWeight: \"800\",\n                      color: \"darkslategrey\",\n                    }}\n                    readOnly=\"readonly\"\n                  />\n                </td>\n                <td>\n                  <input\n                    id=\"textMessage\"\n                    type=\"text\"\n                    style={{ width: \"100%\" }}\n                    value={message}\n                    onChange={(e) => {\n                      setMessage(e.target.value);\n                    }}\n                    onKeyPress={(e) => {\n                      console.log(e.key);\n                      if (e.key == \"Enter\") {\n                        sendMessage();\n                      }\n                    }}\n                  />\n                </td>\n                <td>\n                  <button\n                    className=\"btn btn-success\"\n                    onClick={() => {\n                      sendMessage();\n                    }}\n                  >\n                    전송\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </div>\n\n        <div className=\"discussor2\">\n          <Table hover>\n            <thead className=\"table-secondary\">\n              <tr>\n                <td colSpan=\"2\">\n                  <div>\n                    <Image\n                      src={\n                        debateDetail\n                          ? debateDetail[1].discussor.member_thumb\n                          : \"\"\n                      }\n                      style={{ height: \"120px\", marginLeft: \"20px\" }}\n                      alt={\"썸네일\"}\n                      roundedCircle\n                    />\n                    <br></br>\n                    토론자 A :{\" \"}\n                    {debateDetail\n                      ? debateDetail[1].discussor.member_nickName\n                      : \"\"}\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody className=\"table-light\">\n              <tr>\n                <td>근거 1</td>\n                <td>\n                  <button\n                    className=\"btn btn-info\"\n                    onClick={() => {\n                      btn_b1();\n                    }}\n                  >\n                    등록\n                  </button>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"evidence_B\" colSpan=\"2\">\n                  <textarea\n                    className=\"evidence_B1\"\n                    value={evid_B1}\n                    type=\"text\"\n                    onChange={handleChange}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>근거 2</td>\n                <td>\n                  <button\n                    className=\"btn btn-info\"\n                    onClick={() => {\n                      btn_b2();\n                    }}\n                  >\n                    등록\n                  </button>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"evidence_B\" colSpan=\"2\">\n                  <textarea\n                    className=\"evidence_B2\"\n                    value={evid_B2}\n                    type=\"text\"\n                    onChange={handleChange}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>근거 3</td>\n                <td>\n                  <button\n                    className=\"btn btn-info\"\n                    onClick={() => {\n                      btn_b3();\n                    }}\n                  >\n                    등록\n                  </button>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"evidence_B\" colSpan=\"2\">\n                  <textarea\n                    className=\"evidence_B3\"\n                    value={evid_B3}\n                    type=\"text\"\n                    onChange={handleChange}\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </div>\n      </div>\n      <SockJsClient\n        url=\"http://localhost:9999/ta_back/websocket-chat/\"\n        topics={topics}\n        onConnect={() => {\n          console.log(\"connected\");\n          clientRef.sendMessage(\n            `/app/addUser/${room}`,\n            JSON.stringify({\n              name: name,\n              message: name + \" has connected!\",\n              votecnt: votecnt,\n              server: true,\n            })\n          );\n        }}\n        onDisconnect={() => {\n          console.log(\"disconnected\");\n        }}\n        onMessage={(e) => {\n          console.log(\"e\", e);\n          //투표 반영\n          if (e.votecnt) {\n            setAgree(e.votecnt.agree);\n            setNeutrality(e.votecnt.neutrality);\n            setDisAgree(e.votecnt.disagree);\n          }\n          // 토론자일 경우\n          if (\n            e.name == debateDetail[0].discussor.member_nickName ||\n            e.name == debateDetail[1].discussor.member_nickName\n          ) {\n            const temp = [...messages];\n            temp.push(e);\n            setMessages(temp);\n          }\n          // 관중일 경우\n          else {\n            const temp = [...messages2];\n            temp.push(e);\n            setMessages2(temp);\n          }\n        }}\n        ref={(client) => {\n          setClientRef(client);\n        }}\n      />\n    </>\n  );\n}","import './App.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport DebateBattleList from './component/DebateBattleList';\nimport DebateBattleDetail from './component/DebateBattleDetail';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Container>\n          <Switch>\n            <Route path=\"/ta_front/debbattle.html\" component={DebateBattleList}>\n            </Route>\n            <Route path=\"/ta_front/debbattle/:no\" component={DebateBattleDetail}>\n            </Route>\n          </Switch>\n        </Container>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from './App';\nimport \"./component/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}