{"version":3,"sources":["ApiService.js","component/pagination/DebatePaging.jsx","component/DebateBattleList.jsx","component/pagination/paginate.jsx","Presenter/ChatPresenter.tsx","Container/ChatContainer.tsx","component/DebateBattleDetail.jsx","App.js","index.js"],"names":["AUDIENCE_URL","DEBATE_URL","DETAIL_URL","axios","get","withCredentials","params","post","put","audi_no","deb_no","detail_no","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","totalPage","Math","ceil","pageGroup","last","first","prevButton","nextButton","pages","_","range","style","display","justifyContent","className","onClick","to","pathname","map","page","cursor","DebateBattleList","useState","deblist","setDebList","word","setWord","setCurpage","logininfo","setLogininfo","pagedDebate","items","pageNumber","startIndex","slice","take","value","paginate","deb_length","length","useEffect","ApiService","fetchDebates","then","res","data","list","setLoginInfo","fetch","method","headers","credentials","json","console","log","body","JSON","stringify","member_social_no","textAlign","marginRight","fontSize","fontWeight","InputGroup","Text","id","FormControl","placeholder","onChange","e","target","Button","marginLeft","variant","result","filter","debate_topic","search","preventDefault","alert","Table","responsive","hover","width","debate","index","debate_no","state","debate_status","debate_time","debate_startDate","debate_endDate","ChatPresenter","contents","contents2","message","username","setMessage","setUsername","handleEnter","flex","content","Search","onSearch","enterButton","sockJS","SockJS","stompClient","Stomp","over","debug","ChatContainer","debDetail","React","setContents","setContents2","connect","b","subscribe","newMessage","parse","addMessage","addMessage2","prev","type","send","DebateBattleDetail","location","setDebDetail","fetchDiscussors","colspan","Image","src","height","alt","roundedCircle","readonly","App","Container","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09fa02e1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst AUDIENCE_URL = \"http://localhost:9999/ta_back/debbattle/audience\";\r\nconst DEBATE_URL = \"http://localhost:9999/ta_back/debbattle/debate\";\r\nconst DETAIL_URL = \"http://localhost:9999/ta_back/debbattle/debatedetail\";\r\n\r\nclass ApiService {\r\n  /*\r\n        Audience\r\n    */\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience\r\n  fetchAudiences() {\r\n    return axios.get(AUDIENCE_URL, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience/one\r\n  // params : \"audi_no\"\r\n  fetchAudOneByPK(params) {\r\n    return axios.get(AUDIENCE_URL + \"/one\", params, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience/two\r\n  // params : \"deb_no\", \"mem_no\"\r\n  fetchAudOneByTwo(params) {\r\n    return axios.get(AUDIENCE_URL + \"/one\", params, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience\r\n  // params : \"deb_no\", \"mem_no\"\r\n  addVote(params) {\r\n    return axios.post(AUDIENCE_URL, params, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience/관중번호\r\n  // params : \"audi_no\", \"vote_no\"\r\n  editVote(params) {\r\n    return axios.put(AUDIENCE_URL + \"/\" + params.audi_no, params, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  /*\r\n        Debate\r\n    */\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debate\r\n  fetchDebates() {\r\n    return axios.get(DEBATE_URL, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debate/토론번호\r\n  fetchDebOne(deb_no) {\r\n    return axios.get(DEBATE_URL + \"/\" + deb_no, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debate/토론번호\r\n  // params : \"deb_no\", \"word\", \"setdata\"\r\n  editDebate(params) {\r\n    return axios.put(DEBATE_URL + \"/\" + params.deb_no, params);\r\n  }\r\n\r\n  /*\r\n        DebateDetail\r\n    */\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debatedetail/토론번호\r\n  fetchDiscussors(deb_no) {\r\n    return axios.get(DETAIL_URL + \"/\" + deb_no, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debatedetail/one\r\n  // params : \"deb_no\", \"discussor\"\r\n  fetchDetailOne(params) {\r\n    return axios.get(DETAIL_URL + \"/one\", params, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debatedetail/상세번호\r\n  // params : \"detail_no\", \"word\", \"evi_no\", \"setdata\"\r\n  editDetail(params) {\r\n    return axios.put(DETAIL_URL + \"/\" + params.detail_no, params, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n}\r\n\r\nexport default new ApiService();\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Pagination = (props) => {\r\n  //const pageCount = 5; //한페이지 표시될 개수\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props; // 각각 아이템(영화목록) 개수, 한 페이지에 보여줄 아이템(영화목록) 개수\r\n  var totalPage = Math.ceil(itemsCount / pageSize); // 몇 페이지가 필요한지 계산 토탈페이지수\r\n  const pageGroup = Math.ceil(currentPage / pageSize); //한 페이지에 보여줄 페이지 그룹수\r\n\r\n  if (totalPage === 1) return null; // 1페이지 뿐이라면 페이지 수를 보여주지 않음\r\n\r\n  var last = pageGroup * pageSize; // 화면에 보여질 마지막 페이지 번호\r\n  if (last > totalPage) last = totalPage;\r\n  var first = last - (pageSize - 1); // 화면에 보여질 첫번째 페이지 번호\r\n  if (first < 1) first = 1;\r\n  // var next = last + 1;\r\n  // var prev = first - 1;\r\n  var prevButton = false;\r\n  if (currentPage == 1) {\r\n    prevButton = false;\r\n  } else {\r\n    prevButton = true;\r\n  }\r\n  var nextButton = false;\r\n  if (currentPage == totalPage) {\r\n    nextButton = false;\r\n  } else {\r\n    nextButton = true;\r\n  }\r\n  const pages = _.range(first, last + 1); // 마지막 페이지에 보여줄 컨텐츠를 위해 +1, https://lodash.com/docs/#range 참고\r\n  return (\r\n    <nav style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      {\" \"}\r\n      {/* VSCode 입력: nav>ul.pagination>li.page-item>a.page-link */}\r\n      <ul className=\"pagination\">\r\n        {prevButton && (\r\n          <li className=\"prev\">\r\n            <Link\r\n              className=\"page-link\"\r\n              onClick={() => onPageChange(currentPage - 1)}\r\n              to={{pathname: `/ta_front/debbattle.html`}}\r\n            >\r\n              &laquo;\r\n            </Link>\r\n          </li>\r\n        )}\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"} // Bootstrap을 이용하여 현재 페이지를 시각적으로 표시\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            {/* <Link className=\"page-link\" onClick={(e) => {e.preventDefault(); onPageChange(page)}} to={{pathname: `/`}}> */}\r\n            <Link className=\"page-link\" onClick={() => onPageChange(page)} to={{pathname: `/ta_front/debbattle.html`}}>\r\n              {page}\r\n            </Link>{\" \"}\r\n            {/* 페이지 번호 클릭 이벤트 처리기 지정 */}\r\n          </li>\r\n        ))}\r\n        {nextButton && (\r\n          <li className=\"next\">\r\n            <Link\r\n              className=\"page-link\"\r\n              // onClick={(e) => {e.preventDefault(); onPageChange(currentPage + 1);}}\r\n              onClick={() => onPageChange(currentPage + 1)}\r\n              to={{pathname: `/ta_front/debbattle.html`}}///\r\n            >\r\n              &raquo;\r\n            </Link>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport ApiService from \"../ApiService\";\r\n\r\nimport Pagination from \"./pagination/DebatePaging\";\r\nimport { paginate } from \"./pagination/paginate\";\r\n\r\nexport default function DebateBattleList(props) {\r\n  const [deblist, setDebList] = useState();\r\n  const [word, setWord] = useState();\r\n  const [currentPage, setCurpage] = useState(1);\r\n  const [logininfo, setLogininfo] = useState();\r\n\r\n  // 페이징 기능\r\n  const pageSize = 5;\r\n  const pagedDebate = paginate(deblist, currentPage, pageSize);\r\n\r\n  const deb_length = deblist?.length;\r\n\r\n  function handlePageChange(page) {\r\n    setCurpage(page);\r\n  }\r\n\r\n  // 검색 기능\r\n  const search = (e) => {\r\n    setWord(e.target.value);\r\n  };\r\n\r\n  const btnsearch = (e) => {\r\n    if (word) {\r\n      setCurpage(1);\r\n      let result = [];\r\n\r\n      result = deblist.filter((data) => {\r\n        return data.debate_topic.search(word) !== -1;\r\n      });\r\n      setDebList(result);\r\n      // setFilter(result);\r\n    } else {\r\n      e.preventDefault();\r\n      alert(\"검색어를 입력해주세요\");\r\n    }\r\n  };\r\n  // const login = (props) => {\r\n  //   props.setLoginInfo();\r\n  // };\r\n  useEffect(() => {\r\n    ApiService.fetchDebates().then((res) => {\r\n      // console.log(res);\r\n      setDebList(res.data.list);\r\n      // console.log(props);\r\n      props.setLoginInfo(res.data.logininfo);\r\n      setLogininfo(res.data.logininfo);\r\n    });\r\n  }, []);\r\n  //로그인 테스트\r\n  function login() {\r\n    // const mem = { member_social_no: \"118153287897731040607\" };\r\n    fetch(\r\n      \"http://localhost:9999/ta_back/member/login?socialNo=118153287897731040607\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n\r\n        credentials: \"include\",\r\n      }\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        // setLoginInfo(data.member);\r\n        console.log(\"login--->\", data);\r\n        // console.log(\"로그인완료\", loginInfo);\r\n        // if (loginInfo) {\r\n        //   setwriteButton(writeButton);\r\n        // } else {\r\n        //   setwriteButton(false);\r\n        // }\r\n      });\r\n  }\r\n\r\n  function logout() {\r\n    // const mem = { member_social_no: \"118153287897731040607\" };\r\n    fetch(\"http://localhost:9999/ta_back/member/logout\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        member_social_no: \"118153287897731040607\",\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        // setLoginInfo(data.member);\r\n        console.log(\"logout--->\", data);\r\n\r\n        // history.push(\"/ta_front/debrecruit.html\");\r\n        // console.log(\"로그인완료\", loginInfo);\r\n        // if (loginInfo) {\r\n        //   setwriteButton(writeButton);\r\n        // } else {\r\n        //   setwriteButton(false);\r\n        // }\r\n      });\r\n  }\r\n  //로그인 테스트 끝\r\n  return (\r\n    <>\r\n      <button onClick={login}>로긴81</button>\r\n      <button onClick={logout}>로그아웃</button>\r\n      {/* <Alert show={searchAlert} variant=\"warning\">\r\n            <Alert.Heading>검색어를 입력해주세요!</Alert.Heading>\r\n            <p>검색어는 필수 입니다 ^__^</p>\r\n            <div className=\"d-flex justify-content-end\">\r\n              {\r\n                <Button\r\n                  onClick={() => setSearchAlert(false)}\r\n                  variant=\"outline-danger\"\r\n                  style={{ border: \"none\" }}\r\n                >\r\n                  Close\r\n                </Button>\r\n              }\r\n            </div>\r\n          </Alert> */}\r\n      <h2 style={{ display: \"flex\", justifyContent: \"center\" }}>토론 배틀</h2>\r\n      <div\r\n        style={{\r\n          textAlign: \"right\",\r\n          marginRight: \"10px\",\r\n          display: \"block\",\r\n        }}\r\n      >\r\n        <label style={{ fontSize: \"15pt\", fontWeight: \"600\" }}>\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n              검색\r\n            </InputGroup.Text>\r\n\r\n            <FormControl\r\n              aria-label=\"Default\"\r\n              aria-describedby=\"inputGroup-sizing-default\"\r\n              placeholder=\"검색할 단어를 입력하세요\"\r\n              onChange={search}\r\n            />\r\n          </InputGroup>\r\n        </label>\r\n\r\n        <Button\r\n          style={{ marginLeft: \"10px\" }}\r\n          className=\"buttons\"\r\n          variant=\"success\"\r\n          onClick={btnsearch}\r\n        >\r\n          검색\r\n        </Button>\r\n      </div>\r\n      <Table responsive=\"xl\" hover>\r\n        <thead className=\"table-primary\">\r\n          <tr style={{ fontSize: \"14pt\" }}>\r\n            <th style={{ width: \"10%\" }}>번호</th>\r\n            <th style={{ width: \"20%\" }}>주제</th>\r\n            <th style={{ width: \"20%\" }}>현황</th>\r\n            <th style={{ width: \"10%\" }}>토론 시간</th>\r\n            <th style={{ width: \"20%\" }}>시작 시각</th>\r\n            <th style={{ width: \"20%\" }}>종료 시각</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"table-light\">\r\n          {pagedDebate?.map((debate, index) => (\r\n            <tr key={debate.debate_no}>\r\n              <td>{(currentPage - 1) * pageSize + index + 1}</td>\r\n              <td>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/ta_front/debbattle/${debate.debate_no}`,\r\n                    state: { debate: debate, logininfo: logininfo },\r\n                  }}\r\n                >\r\n                  {debate.debate_topic}\r\n                </Link>\r\n              </td>\r\n              <td>{debate.debate_status}</td>\r\n              <td>{debate.debate_time + \"분\"}</td>\r\n              <td>{debate.debate_startDate}</td>\r\n              <td>{debate.debate_endDate}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <Pagination\r\n        itemsCount={deb_length} //\r\n        pageSize={pageSize}\r\n        currentPage={currentPage}\r\n        onPageChange={handlePageChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize; // 자를 배열의 시작점\r\n\r\n  return _(items)\r\n    .slice(startIndex) // 시작점부터 배열을 자르되\r\n    .take(pageSize) // pageSize만큼의 배열을 취함\r\n    .value(); // lodash wrapper 객체를 regular 배열로 변환\r\n}","import * as React from \"react\";\nimport \"./ChatPresenter.scss\";\nimport { Button, Input } from \"antd\";\nimport { message } from \"../Container/ChatContainer\";\n\ntype ChatPresenterProps = {\n  contents: Array<message>;\n  contents2: Array<message>;\n  message: string;\n  username: string;\n  setMessage: Function;\n  setUsername: Function;\n  handleEnter: Function;\n};\n\nexport const ChatPresenter = ({\n  contents,\n  contents2,\n  message,\n  username,\n  setMessage,\n  setUsername,\n  handleEnter,\n}: ChatPresenterProps) => {\n  console.log(\"contents\", contents);\n  console.log(\"contents2\", contents2);\n\n  return (\n    <div className={\"chat-box\"}>\n      <div className=\"header\">\n        유저이름 :\n        <Input\n          style={{ flex: 1 }}\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </div>\n      <div className={\"contents\"}>\n        {contents.map((message) =>\n          message.username == \"discussor1\" ? (\n            <div className=\"discuss1\">\n              {message.username} : {message.content}\n            </div>\n          ) : (\n            <div className=\"discuss2\">\n              {message.username} : {message.content}\n            </div>\n          )\n        )}\n      </div>\n      <hr />\n      <div className={\"contents\"}>\n        {contents2.map((message) => (\n          <div>\n            {message.username} : {message.content}\n          </div>\n        ))}\n      </div>\n      <div>\n        <Input.Search\n          placeholder=\"input your messages...\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          onSearch={(value) => handleEnter(username, value, \"ENTER\")}\n          enterButton={\"Enter\"}\n        />\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { ChatPresenter } from \"../Presenter/ChatPresenter\";\nimport \"./ChatContainer.scss\";\nimport { message } from \"antd\";\nimport { useEffect } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport { EnumType } from \"typescript\";\n\nexport type message = {\n  username: string;\n  content: string;\n  type: EnumType;\n};\n\nlet sockJS = new SockJS(\"http://localhost:9999/ta_back/ws\");\nlet stompClient: Stomp.Client = Stomp.over(sockJS);\nstompClient.debug = () => {};\n\nexport const ChatContainer = (props: any) => {\n  const logininfo = props.logininfo;\n  const debDetail = props.debDetail;\n  //console.log(\"logininfo\", logininfo);\n  console.log(\"debDetail\", debDetail);\n  const [contents, setContents] = React.useState<message[]>([]);\n  const [contents2, setContents2] = React.useState<message[]>([]);\n  const [username, setUsername] = React.useState(\"\");\n  const [message, setMessage] = React.useState(\"\");\n\n  useEffect(() => {\n    stompClient.connect({}, (b) => {\n      console.log(b);\n      // console.log(\"b\", b);\n      stompClient.subscribe(\"/topic/discussor\", (data) => {\n        // console.log(\"data:\", data);\n        const newMessage: message = JSON.parse(data.body) as message;\n        addMessage(newMessage);\n        // console.log(\"newMessage\", newMessage);\n      });\n      stompClient.subscribe(\"/topic/audience\", (data) => {\n        // console.log(\"data:\", data);\n        const newMessage: message = JSON.parse(data.body) as message;\n        addMessage2(newMessage);\n        // console.log(\"newMessage\", newMessage);\n      });\n    });\n  }, [contents, contents2]);\n\n  // useEffect(() => {\n  //   stompClient.connect({}, (b) => {\n  //     console.log(b);\n  //     // console.log(\"b\", b);\n  //     stompClient.subscribe(\"/topic/roomId2\", (data) => {\n  //       // console.log(\"data:\", data);\n  //       const newMessage2: message = JSON.parse(data.body) as message;\n  //       addMessage2(newMessage2);\n  //       // console.log(\"newMessage\", newMessage);\n  //     });\n  //   });\n  // }, [contents2]);\n\n  const handleEnter = (username: string, content: string, type: EnumType) => {\n    const newMessage: message = { username, content, type };\n    if (username == \"discussor1\" || username == \"discussor2\") {\n      stompClient.send(\"/discussor\", {}, JSON.stringify(newMessage));\n    } else {\n      stompClient.send(\"/audience\", {}, JSON.stringify(newMessage));\n    }\n    setMessage(\"\");\n  };\n\n  const addMessage = (message: message) => {\n    setContents((prev) => [...prev, message]);\n  };\n  const addMessage2 = (message: message) => {\n    setContents2((prev) => [...prev, message]);\n  };\n\n  return (\n    <div className={\"container1\"}>\n      <ChatPresenter\n        contents={contents}\n        contents2={contents2}\n        handleEnter={handleEnter}\n        message={message}\n        setMessage={setMessage}\n        username={username}\n        setUsername={setUsername}\n      />\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\r\nimport { Table, button, Image } from \"react-bootstrap\";\r\nimport \"./css/battle.css\";\r\nimport { ChatContainer } from \"../Container/ChatContainer\";\r\nimport ApiService from \"../ApiService\";\r\nexport default function DebateBattleDetail(props) {\r\n  // console.log(\"detail-logininfo : \", props.logininfo);\r\n  const debate = props?.location?.state.debate;\r\n  const logininfo = props?.location?.state.logininfo;\r\n  const [debDetail, setDebDetail] = useState();\r\n  console.log(\"debate-detail\", props);\r\n\r\n  useEffect(() => {\r\n    ApiService.fetchDiscussors(debate.debate_no).then((res) => {\r\n      setDebDetail(res.data.list);\r\n      // console.log(\"res\", res);\r\n    });\r\n  }, []);\r\n\r\n  console.log(debDetail);\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <div className=\"discussor1\">\r\n          <Table hover>\r\n            <thead className=\"table-info\">\r\n              <tr>\r\n                <td colspan=\"2\">\r\n                  <div>\r\n                    <Image\r\n                      src={\r\n                        \"http://k.kakaocdn.net/dn/E1SPk/btq7PTNrZT0/Kd0PxOFVNqK7F8w6M6wRaK/img_640x640.jpg\"\r\n                      }\r\n                      style={{ height: \"120px\", marginLeft: \"20px\" }}\r\n                      alt={\"썸네일\"}\r\n                      roundedCircle\r\n                    />\r\n                    <br></br>\r\n                    토론자 A : {\"앙리\"}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table-light\">\r\n              <tr>\r\n                <td>근거 1</td>\r\n                <td>\r\n                  <button className=\"btn btn-info\">등록</button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"evidence_A\" colspan=\"2\">\r\n                  <textarea className=\"evidence_A1\" type=\"text\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>근거 2</td>\r\n                <td>\r\n                  <button className=\"btn btn-info btn_evid\" value=\"A2\">\r\n                    등록\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"evidence_A2\" colspan=\"2\">\r\n                  <textarea className=\"evidence_A2\" type=\"text\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>근거 3</td>\r\n                <td>\r\n                  <button className=\"btn btn-info btn_evid\" value=\"A3\">\r\n                    등록\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"evidence_A3\" colspan=\"2\">\r\n                  <textarea className=\"evidence_A3\" type=\"text\" />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <div className=\"chatting\">\r\n          <Table hover>\r\n            <thead className=\"table-success\">\r\n              <tr>\r\n                <td colspan=\"3\">\r\n                  <div id=\"\" className=\"battle_topic\">\r\n                    호날두 vs 메시\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table-light\">\r\n              <tr>\r\n                <td colspan=\"3\">\r\n                  <div id=\"\" className=\"battle-timer\">\r\n                    00:00<span className=\"sec-style\">:00</span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colspan=\"3\">\r\n                  <div className=\"battle_vote\">\r\n                    호날두 XX% / 중립 XX% / 메시 XX%\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colspan=\"3\">\r\n                  <div id=\"discussorWindow\">\r\n                    <div>토론자 채팅</div>\r\n                    <ChatContainer\r\n                      logininfo={logininfo}\r\n                      debDetail={debDetail}\r\n                    />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colspan=\"3\">\r\n                  <div className=\"set_time-group\">\r\n                    <button id=\"start\" className=\"btn btn-primary btn_settime\">\r\n                      시작\r\n                    </button>\r\n                    <button id=\"end\" className=\"btn btn-secondary btn_settime\">\r\n                      종료\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colspan=\"3\">\r\n                  <div id=\"audienceWindow\">\r\n                    <div>중계방 채팅</div>\r\n                    {/* <ChatContainer /> */}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colspan=\"3\">\r\n                  <div className=\"vote_div_group\">\r\n                    <button className=\"btn btn-info btn_vote\" value=\"1\">\r\n                      찬성\r\n                    </button>\r\n                    <button className=\"btn btn-success btn_vote\" value=\"2\">\r\n                      중립\r\n                    </button>\r\n                    <button className=\"btn btn-danger btn_vote\" value=\"3\">\r\n                      반대\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <input id=\"user\" type=\"text\" value=\"A\" readonly=\"readonly\" />\r\n                </td>\r\n                <td>\r\n                  <input id=\"textMessage\" type=\"text\" />\r\n                </td>\r\n                <td>\r\n                  <button className=\"btn btn-success\">전송</button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <div className=\"discussor2\">\r\n          <Table hover>\r\n            <thead className=\"table-secondary\">\r\n              <tr>\r\n                <td colspan=\"2\">\r\n                  <div>\r\n                    <Image\r\n                      src={\r\n                        \"http://k.kakaocdn.net/dn/bqciso/btq4dKTf6Qu/NX3jJ6l74awvHHKr32vCRK/img_640x640.jpg\"\r\n                      }\r\n                      style={{ height: \"120px\", marginLeft: \"20px\" }}\r\n                      alt={\"썸네일\"}\r\n                      roundedCircle\r\n                    />\r\n                    <br></br>\r\n                    토론자 B : {\"앙리\"}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table-light\">\r\n              <tr>\r\n                <td>근거 1</td>\r\n                <td>\r\n                  <button className=\"btn btn-secondary\">등록</button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"evidence_A\" colspan=\"2\">\r\n                  <textarea className=\"evidence_A1\" type=\"text\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>근거 2</td>\r\n                <td>\r\n                  <button className=\"btn btn-secondary btn_evid\" value=\"A2\">\r\n                    등록\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"evidence_A2\" colspan=\"2\">\r\n                  <textarea className=\"evidence_A2\" type=\"text\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>근거 3</td>\r\n                <td>\r\n                  <button className=\"btn btn-secondary btn_evid\" value=\"A3\">\r\n                    등록\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"evidence_A3\" colspan=\"2\">\r\n                  <textarea className=\"evidence_A3\" type=\"text\" />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport DebateBattleList from \"./component/DebateBattleList\";\r\nimport DebateBattleDetail from \"./component/DebateBattleDetail\";\r\nimport { useState } from \"react\";\r\n// import ChatMessageBox from \"./component/ChatMessageBox\";\r\nfunction App() {\r\n  // alert(\"app\");\r\n  const [logininfo, setLogininfo] = useState();\r\n  const getLoginInfo = (logininfo) => {\r\n    //로그인 정보\r\n    setLogininfo(logininfo);\r\n  };\r\n\r\n  return (\r\n    // <ChatMessageBox />\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Container>\r\n          <Switch>\r\n            <Route path=\"/ta_front/debbattle.html\">\r\n              <DebateBattleList setLoginInfo={getLoginInfo} />\r\n            </Route>\r\n            <Route\r\n              path=\"/ta_front/debbattle/:no\"\r\n              component={DebateBattleDetail}\r\n            ></Route>\r\n          </Switch>\r\n        </Container>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\";\r\nimport App from './App';\r\nimport \"./component/css/bootstrap.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}