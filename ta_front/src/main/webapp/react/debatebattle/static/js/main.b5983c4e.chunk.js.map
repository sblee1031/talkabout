{"version":3,"sources":["ApiService.js","component/pagination/DebatePaging.jsx","component/DebateBattleList.jsx","component/pagination/paginate.jsx","component/DebateBattleDetail.jsx","App.js","index.js"],"names":["AUDIENCE_URL","DEBATE_URL","DETAIL_URL","axios","get","withCredentials","params","post","put","audi_no","deb_no","detail_no","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","totalPage","Math","ceil","pageGroup","last","first","prevButton","nextButton","pages","_","range","style","display","justifyContent","className","onClick","to","pathname","map","page","cursor","DebateBattleList","useState","deblist","setDebList","word","setWord","setCurpage","logininfo","setLogininfo","pagedDebate","items","pageNumber","startIndex","slice","take","value","paginate","deb_length","length","useEffect","ApiService","fetchDebates","then","res","data","list","fetch","method","headers","credentials","json","member","console","log","body","JSON","stringify","member_social_no","textAlign","marginRight","fontSize","fontWeight","InputGroup","Text","id","FormControl","placeholder","onChange","e","target","Button","marginLeft","variant","result","filter","debate_topic","search","preventDefault","alert","Table","responsive","hover","width","debate","index","debate_no","state","debate_status","debate_time","debate_startDate","debate_endDate","DebateBattleDetail","location","debateDetail","setdebateDetail","member_nickName","name","room","topics","message","setMessage","messages","setMessages","messages2","setMessages2","clientRef","setClientRef","fetchDiscussors","sendMessage","server","colSpan","Image","src","discussor","member_thumb","height","alt","roundedCircle","type","discuss","marginBottom","overflowY","flexDirection","i","item","padding","fontStyle","wordWrap","border","color","readOnly","onKeyPress","key","url","onConnect","onDisconnect","onMessage","temp","push","ref","client","App","Container","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5983c4e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst AUDIENCE_URL = \"http://localhost:9999/ta_back/debbattle/audience\";\r\nconst DEBATE_URL = \"http://localhost:9999/ta_back/debbattle/debate\";\r\nconst DETAIL_URL = \"http://localhost:9999/ta_back/debbattle/debatedetail\";\r\n\r\nclass ApiService {\r\n\r\n    /*\r\n        Audience\r\n    */\r\n\r\n    // http://localhost:9999/ta_back/debbattle/audience\r\n    fetchAudiences() {\r\n        return axios.get(AUDIENCE_URL, { withCredentials: true });\r\n    }\r\n\r\n    // http://localhost:9999/ta_back/debbattle/audience/one\r\n    // params : \"audi_no\"\r\n    fetchAudOneByPK(params) {\r\n        return axios.get(AUDIENCE_URL + '/one', params, { withCredentials: true });\r\n    }\r\n\r\n    // http://localhost:9999/ta_back/debbattle/audience/two\r\n    // params : \"deb_no\", \"mem_no\"\r\n    fetchAudOneByTwo(params) {\r\n        return axios.get(AUDIENCE_URL + '/one', params, { withCredentials: true });\r\n    }\r\n\r\n    // http://localhost:9999/ta_back/debbattle/audience\r\n    // params : \"deb_no\", \"mem_no\"\r\n    addVote(params){\r\n        return axios.post(AUDIENCE_URL, params, { withCredentials: true });\r\n    }\r\n\r\n    // http://localhost:9999/ta_back/debbattle/audience/관중번호\r\n    // params : \"audi_no\", \"vote_no\"\r\n    editVote(params){\r\n        return axios.put(AUDIENCE_URL + '/' + params.audi_no, params, { withCredentials: true })\r\n    }\r\n\r\n    /*\r\n        Debate\r\n    */\r\n\r\n    // http://localhost:9999/ta_back/debbattle/debate\r\n    fetchDebates() {\r\n        return axios.get(DEBATE_URL, { withCredentials: true });\r\n    }\r\n\r\n    // http://localhost:9999/ta_back/debbattle/debate/토론번호\r\n    fetchDebOne(deb_no){\r\n        return axios.get(DEBATE_URL + '/' + deb_no, { withCredentials: true });\r\n    }\r\n\r\n    // http://localhost:9999/ta_back/debbattle/debate/토론번호\r\n    // params : \"deb_no\", \"word\", \"setdata\"\r\n    editDebate(params){\r\n        return axios.put(DEBATE_URL + '/' + params.deb_no, params);\r\n    }\r\n\r\n    /*\r\n        DebateDetail\r\n    */\r\n\r\n    // http://localhost:9999/ta_back/debbattle/debatedetail/토론번호\r\n    fetchDiscussors(deb_no) {\r\n        return axios.get(DETAIL_URL + '/' + deb_no, { withCredentials: true });\r\n    }\r\n\r\n    // http://localhost:9999/ta_back/debbattle/debatedetail/one\r\n    // params : \"deb_no\", \"discussor\"\r\n    fetchDetailOne(params) {\r\n        return axios.get(DETAIL_URL + '/one', params, { withCredentials: true });\r\n    }\r\n\r\n    // http://localhost:9999/ta_back/debbattle/debatedetail/상세번호\r\n    // params : \"detail_no\", \"word\", \"evi_no\", \"setdata\"\r\n    editDetail(params) {\r\n        return axios.put(DETAIL_URL + '/' + params.detail_no, params, { withCredentials: true });\r\n    }\r\n}\r\n\r\nexport default new ApiService();","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Pagination = (props) => {\r\n  //const pageCount = 5; //한페이지 표시될 개수\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props; // 각각 아이템(영화목록) 개수, 한 페이지에 보여줄 아이템(영화목록) 개수\r\n  var totalPage = Math.ceil(itemsCount / pageSize); // 몇 페이지가 필요한지 계산 토탈페이지수\r\n  const pageGroup = Math.ceil(currentPage / pageSize); //한 페이지에 보여줄 페이지 그룹수\r\n\r\n  if (totalPage === 1) return null; // 1페이지 뿐이라면 페이지 수를 보여주지 않음\r\n\r\n  var last = pageGroup * pageSize; // 화면에 보여질 마지막 페이지 번호\r\n  if (last > totalPage) last = totalPage;\r\n  var first = last - (pageSize - 1); // 화면에 보여질 첫번째 페이지 번호\r\n  if (first < 1) first = 1;\r\n  // var next = last + 1;\r\n  // var prev = first - 1;\r\n  var prevButton = false;\r\n  if (currentPage == 1) {\r\n    prevButton = false;\r\n  } else {\r\n    prevButton = true;\r\n  }\r\n  var nextButton = false;\r\n  if (currentPage == totalPage) {\r\n    nextButton = false;\r\n  } else {\r\n    nextButton = true;\r\n  }\r\n  const pages = _.range(first, last + 1); // 마지막 페이지에 보여줄 컨텐츠를 위해 +1, https://lodash.com/docs/#range 참고\r\n  return (\r\n    <nav style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      {\" \"}\r\n      {/* VSCode 입력: nav>ul.pagination>li.page-item>a.page-link */}\r\n      <ul className=\"pagination\">\r\n        {prevButton && (\r\n          <li className=\"prev\">\r\n            <Link\r\n              className=\"page-link\"\r\n              onClick={() => onPageChange(currentPage - 1)}\r\n              to={{pathname: `/ta_front/debbattle.html`}}\r\n            >\r\n              &laquo;\r\n            </Link>\r\n          </li>\r\n        )}\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"} // Bootstrap을 이용하여 현재 페이지를 시각적으로 표시\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            {/* <Link className=\"page-link\" onClick={(e) => {e.preventDefault(); onPageChange(page)}} to={{pathname: `/`}}> */}\r\n            <Link className=\"page-link\" onClick={() => onPageChange(page)} to={{pathname: `/ta_front/debbattle.html`}}>\r\n              {page}\r\n            </Link>{\" \"}\r\n            {/* 페이지 번호 클릭 이벤트 처리기 지정 */}\r\n          </li>\r\n        ))}\r\n        {nextButton && (\r\n          <li className=\"next\">\r\n            <Link\r\n              className=\"page-link\"\r\n              // onClick={(e) => {e.preventDefault(); onPageChange(currentPage + 1);}}\r\n              onClick={() => onPageChange(currentPage + 1)}\r\n              to={{pathname: `/ta_front/debbattle.html`}}///\r\n            >\r\n              &raquo;\r\n            </Link>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport ApiService from \"../ApiService\";\r\n\r\nimport Pagination from \"./pagination/DebatePaging\";\r\nimport { paginate } from \"./pagination/paginate\";\r\n\r\nexport default function DebateBattleList(props) {\r\n  const [deblist, setDebList] = useState();\r\n  const [word, setWord] = useState();\r\n  const [currentPage, setCurpage] = useState(1);\r\n  const [logininfo, setLogininfo] = useState();\r\n\r\n  // 페이징 기능\r\n  const pageSize = 5;\r\n  const pagedDebate = paginate(deblist, currentPage, pageSize);\r\n\r\n  const deb_length = deblist?.length;\r\n\r\n  function handlePageChange(page) {\r\n    setCurpage(page);\r\n  }\r\n\r\n  // 검색 기능\r\n  const search = (e) => {\r\n    setWord(e.target.value);\r\n  };\r\n\r\n  const btnsearch = (e) => {\r\n    if (word) {\r\n      setCurpage(1);\r\n      let result = [];\r\n\r\n      result = deblist.filter((data) => {\r\n        return data.debate_topic.search(word) !== -1;\r\n      });\r\n      setDebList(result);\r\n    } else {\r\n      e.preventDefault();\r\n      alert(\"검색어를 입력해주세요\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    ApiService.fetchDebates().then((res) => {\r\n      setDebList(res.data.list);\r\n      // console.log(props);\r\n      // props.setLoginInfo(res.data.logininfo);\r\n      setLogininfo(res.data.logininfo);\r\n    });\r\n  }, []);\r\n\r\n  //로그인 테스트\r\n  function login() {\r\n    // const mem = { member_social_no: \"118153287897731040607\" };\r\n    fetch(\r\n      \"http://localhost:9999/ta_back/member/login?socialNo=1775421132_112\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n\r\n        credentials: \"include\",\r\n      }\r\n    )\r\n      .then((res) => {\r\n        // console.log(\"로그인 : \", res.json());\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setLogininfo(data.member);\r\n        console.log(\"login--->\", data.member);\r\n      });\r\n  }\r\n\r\n  function logout() {\r\n    // const mem = { member_social_no: \"118153287897731040607\" };\r\n    fetch(\"http://localhost:9999/ta_back/member/logout\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        member_social_no: \"118153287897731040607\",\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        // setLoginInfo(data.member);\r\n        console.log(\"logout--->\", data);\r\n      });\r\n  }\r\n  //로그인 테스트 끝\r\n\r\n  return (\r\n    <>\r\n      <button onClick={login}>로긴81</button>\r\n      <button onClick={logout}>로그아웃</button>\r\n      {/* <Alert show={searchAlert} variant=\"warning\">\r\n            <Alert.Heading>검색어를 입력해주세요!</Alert.Heading>\r\n            <p>검색어는 필수 입니다 ^__^</p>\r\n            <div className=\"d-flex justify-content-end\">\r\n              {\r\n                <Button\r\n                  onClick={() => setSearchAlert(false)}\r\n                  variant=\"outline-danger\"\r\n                  style={{ border: \"none\" }}\r\n                >\r\n                  Close\r\n                </Button>\r\n              }\r\n            </div>\r\n          </Alert> */}\r\n      <h2 style={{ display: \"flex\", justifyContent: \"center\" }}>토론 배틀</h2>\r\n      <div\r\n        style={{\r\n          textAlign: \"right\",\r\n          marginRight: \"10px\",\r\n          display: \"block\",\r\n        }}\r\n      >\r\n        <label style={{ fontSize: \"15pt\", fontWeight: \"600\" }}>\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n              검색\r\n            </InputGroup.Text>\r\n\r\n            <FormControl\r\n              aria-label=\"Default\"\r\n              aria-describedby=\"inputGroup-sizing-default\"\r\n              placeholder=\"검색할 단어를 입력하세요\"\r\n              onChange={search}\r\n            />\r\n          </InputGroup>\r\n        </label>\r\n\r\n        <Button\r\n          style={{ marginLeft: \"10px\" }}\r\n          className=\"buttons\"\r\n          variant=\"success\"\r\n          onClick={btnsearch}\r\n        >\r\n          검색\r\n        </Button>\r\n      </div>\r\n      <Table responsive=\"xl\" hover>\r\n        <thead className=\"table-primary\">\r\n          <tr style={{ fontSize: \"14pt\" }}>\r\n            <th style={{ width: \"10%\" }}>번호</th>\r\n            <th style={{ width: \"20%\" }}>주제</th>\r\n            <th style={{ width: \"20%\" }}>현황</th>\r\n            <th style={{ width: \"10%\" }}>토론 시간</th>\r\n            <th style={{ width: \"20%\" }}>시작 시각</th>\r\n            <th style={{ width: \"20%\" }}>종료 시각</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"table-light\">\r\n          {pagedDebate?.map((debate, index) => (\r\n            <tr key={debate.debate_no}>\r\n              <td>{(currentPage - 1) * pageSize + index + 1}</td>\r\n              <td>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/ta_front/debbattle/${debate.debate_no}`,\r\n                    state: { debate: debate, logininfo: logininfo }, //\r\n                  }}\r\n                >\r\n                  {debate.debate_topic}\r\n                </Link>\r\n              </td>\r\n              <td>{debate.debate_status}</td>\r\n              <td>{debate.debate_time + \"분\"}</td>\r\n              <td>{debate.debate_startDate}</td>\r\n              <td>{debate.debate_endDate}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <Pagination\r\n        itemsCount={deb_length} //\r\n        pageSize={pageSize}\r\n        currentPage={currentPage}\r\n        onPageChange={handlePageChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize; // 자를 배열의 시작점\r\n\r\n  return _(items)\r\n    .slice(startIndex) // 시작점부터 배열을 자르되\r\n    .take(pageSize) // pageSize만큼의 배열을 취함\r\n    .value(); // lodash wrapper 객체를 regular 배열로 변환\r\n}","import { useState, useEffect } from \"react\";\nimport { Table, button, Image } from \"react-bootstrap\";\nimport \"./css/battle.css\";\nimport ApiService from \"../ApiService\";\nimport SockJsClient from \"react-stomp\";\n\nimport { Grid, Typography } from \"@material-ui/core\";\n\nexport default function DebateBattleDetail(props) {\n  const [debate] = useState(props?.location?.state.debate);\n  const [logininfo] = useState(props?.location?.state.logininfo);\n  const [debateDetail, setdebateDetail] = useState();\n\n  const [name] = useState(logininfo?.member_nickName);\n  const [room] = useState(debate.debate_no);\n  const [topics] = useState([`/topic/${room}`]);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [messages2, setMessages2] = useState([]);\n  const [clientRef, setClientRef] = useState();\n\n  useEffect(() => {\n    console.log(\"useEffect 가동\");\n    ApiService.fetchDiscussors(debate.debate_no).then((res) => {\n      console.log(\"res : \", res);\n      setdebateDetail(res.data.list);\n    });\n  }, []);\n\n  const sendMessage = () => {\n    clientRef.sendMessage(\n      `/app/sendMessage/${room}`,\n      JSON.stringify({\n        name: name,\n        message: message,\n        server: false,\n      })\n    );\n    setMessage(\"\");\n  };\n\n  // 근거 버튼 등록\n  const btn_A1 = (e) => {\n    if (debateDetail[0].discussor.member_nickName == name) {\n      const params = {\n        detail_no: debateDetail[0].detail_no,\n        word: \"evidence\",\n        evi_no: 1,\n        setdata: \"\",\n      };\n      ApiService.editDetail(params);\n    } else {\n      alert(\"토론자 A만 수정 가능\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"wrapper\">\n        <div className=\"discussor1\">\n          <Table hover>\n            <thead className=\"table-info\">\n              <tr>\n                <td colSpan=\"2\">\n                  <div>\n                    <Image\n                      src={\n                        debateDetail\n                          ? debateDetail[0].discussor.member_thumb\n                          : \"\"\n                      }\n                      style={{ height: \"120px\", marginLeft: \"20px\" }}\n                      alt={\"썸네일\"}\n                      roundedCircle\n                    />\n                    <br></br>\n                    토론자 A :{\" \"}\n                    {debateDetail\n                      ? debateDetail[0].discussor.member_nickName\n                      : \"\"}\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody className=\"table-light\">\n              <tr>\n                <td>근거 1</td>\n                <td>\n                  <button className=\"btn btn-info\">등록</button>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"evidence_A\" colSpan=\"2\">\n                  <textarea className=\"evidence_A1\" type=\"text\" />\n                </td>\n              </tr>\n              <tr>\n                <td>근거 2</td>\n                <td>\n                  <button className=\"btn btn-info btn_evid\" value=\"A2\">\n                    등록\n                  </button>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"evidence_A2\" colSpan=\"2\">\n                  <textarea className=\"evidence_A2\" type=\"text\" />\n                </td>\n              </tr>\n              <tr>\n                <td>근거 3</td>\n                <td>\n                  <button className=\"btn btn-info btn_evid\" value=\"A3\">\n                    등록\n                  </button>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"evidence_A3\" colSpan=\"2\">\n                  <textarea className=\"evidence_A3\" type=\"text\" />\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </div>\n        <div className=\"chatting\">\n          <Table hover>\n            <thead className=\"table-success\">\n              <tr>\n                <td colSpan=\"3\">\n                  <div id=\"\" className=\"battle_topic\">\n                    {debate.debate_topic}\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody className=\"table-light\">\n              <tr>\n                <td colSpan=\"3\">\n                  <div id=\"\" className=\"battle-timer\">\n                    {debate.debate_time}분\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td colSpan=\"3\">\n                  <div className=\"battle_vote\">\n                    {debateDetail ? debateDetail[0].discuss : \"\"}XX% / 중립 XX%\n                    / {debateDetail ? debateDetail[1].discuss : \"\"} XX%\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td colSpan=\"3\">\n                  <div style={{ marginBottom: \"5px\" }}>토론자 채팅</div>\n                  <div\n                    id=\"discussorWindow\"\n                    style={{\n                      height: \"145px\",\n                      overflowY: \"auto\",\n                      display: \"flex\",\n                      flexDirection: \"column-reverse\",\n                    }}\n                  >\n                    <div style={{}}>\n                      {messages.map((e, i) => {\n                        return e.name ==\n                          debateDetail[0]?.discussor.member_nickName ? (\n                          <div className=\"discussor1message\" key={i}>\n                            {e.server ? (\n                              <Grid\n                                item\n                                style={{\n                                  padding: \"10px\",\n                                  fontStyle: \"italic\",\n                                  textAlign: \"center\",\n                                }}\n                                key={i}\n                              >\n                                <Typography style={{ fontWeight: \"800\" }}>\n                                  {e.message}\n                                </Typography>\n                              </Grid>\n                            ) : (\n                              <Grid\n                                item\n                                style={{\n                                  padding: \"10px\",\n                                  wordWrap: \"break-word\",\n                                }}\n                                key={i}\n                              >\n                                <Typography>\n                                  {e.name}\n                                  <br />\n                                  {e.message}\n                                </Typography>\n                              </Grid>\n                            )}\n                          </div>\n                        ) : (\n                          <div className=\"discussor2message\" key={i}>\n                            {e.server ? (\n                              <Grid\n                                item\n                                style={{\n                                  padding: \"10px\",\n                                  fontStyle: \"italic\",\n                                  textAlign: \"center\",\n                                }}\n                                key={i}\n                              >\n                                <Typography style={{ fontWeight: \"800\" }}>\n                                  {e.message}\n                                </Typography>\n                              </Grid>\n                            ) : (\n                              <Grid\n                                item\n                                style={{\n                                  padding: \"10px\",\n                                  wordWrap: \"break-word\",\n                                }}\n                                key={i}\n                              >\n                                <Typography>\n                                  {e.name}\n                                  <br /> {e.message}\n                                </Typography>\n                              </Grid>\n                            )}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td colSpan=\"3\">\n                  <div className=\"set_time-group\">\n                    <button id=\"start\" className=\"btn btn-primary btn_settime\">\n                      시작\n                    </button>\n                    <button id=\"end\" className=\"btn btn-secondary btn_settime\">\n                      종료\n                    </button>\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td colSpan=\"3\">\n                  <div>중계방 채팅</div>\n                  <div\n                    id=\"audienceWindow\"\n                    style={{\n                      height: \"140px\",\n                      overflowY: \"auto\",\n                      display: \"flex\",\n                      flexDirection: \"column-reverse\",\n                    }}\n                  >\n                    <div style={{ textAlign: \"left\" }}>\n                      {messages2.map((e, i) => {\n                        return (\n                          <div key={i}>\n                            {e.server ? (\n                              <Grid\n                                item\n                                style={{\n                                  padding: \"10px\",\n                                  fontStyle: \"italic\",\n                                }}\n                                key={i}\n                              >\n                                <Typography\n                                  style={{\n                                    fontWeight: \"800\",\n                                    textAlign: \"center\",\n                                  }}\n                                >\n                                  {e.message}\n                                </Typography>\n                              </Grid>\n                            ) : (\n                              <Grid item style={{ padding: \"10px\" }} key={i}>\n                                <Typography style={{ wordWrap: \"break-word\" }}>\n                                  {e.name}\n                                  <br />\n                                  {e.message}\n                                </Typography>\n                              </Grid>\n                            )}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td colSpan=\"3\">\n                  <div className=\"vote_div_group\">\n                    <button className=\"btn btn-info btn_vote\" value=\"1\">\n                      찬성\n                    </button>\n                    <button className=\"btn btn-success btn_vote\" value=\"2\">\n                      중립\n                    </button>\n                    <button className=\"btn btn-danger btn_vote\" value=\"3\">\n                      반대\n                    </button>\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <input\n                    id=\"user\"\n                    type=\"text\"\n                    value={logininfo?.member_nickName}\n                    style={{\n                      width: \"70px\",\n                      border: \"none\",\n                      fontSize: \"10pt\",\n                      fontStyle: \"italic\",\n                      fontWeight: \"800\",\n                      color: \"darkslategrey\",\n                    }}\n                    readOnly=\"readonly\"\n                  />\n                </td>\n                <td>\n                  <input\n                    id=\"textMessage\"\n                    type=\"text\"\n                    style={{ width: \"100%\" }}\n                    value={message}\n                    onChange={(e) => {\n                      setMessage(e.target.value);\n                    }}\n                    onKeyPress={(e) => {\n                      console.log(e.key);\n                      if (e.key == \"Enter\") {\n                        sendMessage();\n                      }\n                    }}\n                  />\n                </td>\n                <td>\n                  <button\n                    className=\"btn btn-success\"\n                    onClick={() => {\n                      sendMessage();\n                    }}\n                  >\n                    전송\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </div>\n        <div className=\"discussor2\">\n          <Table hover>\n            <thead className=\"table-secondary\">\n              <tr>\n                <td colSpan=\"2\">\n                  <div>\n                    <Image\n                      src={\n                        debateDetail\n                          ? debateDetail[1].discussor.member_thumb\n                          : \"\"\n                      }\n                      style={{ height: \"120px\", marginLeft: \"20px\" }}\n                      alt={\"썸네일\"}\n                      roundedCircle\n                    />\n                    <br></br>\n                    토론자 B :{\" \"}\n                    {debateDetail\n                      ? debateDetail[1].discussor.member_nickName\n                      : \"\"}\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody className=\"table-light\">\n              <tr>\n                <td>근거 1</td>\n                <td>\n                  <button className=\"btn btn-secondary\">등록</button>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"evidence_A\" colSpan=\"2\">\n                  <textarea className=\"evidence_A1\" type=\"text\" />\n                </td>\n              </tr>\n              <tr>\n                <td>근거 2</td>\n                <td>\n                  <button className=\"btn btn-secondary btn_evid\" value=\"A2\">\n                    등록\n                  </button>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"evidence_A2\" colSpan=\"2\">\n                  <textarea className=\"evidence_A2\" type=\"text\" />\n                </td>\n              </tr>\n              <tr>\n                <td>근거 3</td>\n                <td>\n                  <button className=\"btn btn-secondary btn_evid\" value=\"A3\">\n                    등록\n                  </button>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"evidence_A3\" colSpan=\"2\">\n                  <textarea className=\"evidence_A3\" type=\"text\" />\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </div>\n      </div>\n      <SockJsClient\n        url=\"http://localhost:9999/ta_back/websocket-chat/\"\n        topics={topics}\n        onConnect={() => {\n          console.log(\"connected\");\n          clientRef.sendMessage(\n            `/app/addUser/${room}`,\n            JSON.stringify({\n              name: name,\n              message: name + \" has connected!\",\n              server: true,\n            })\n          );\n        }}\n        onDisconnect={() => {\n          console.log(\"disconnected\");\n        }}\n        onMessage={(e) => {\n          // console.log(e)\n          // 토론자일 경우\n          if (\n            name == debateDetail[0].discussor.member_nickName ||\n            name == debateDetail[1].discussor.member_nickName\n          ) {\n            const temp = [...messages];\n            temp.push(e);\n            setMessages(temp);\n          }\n          // 관중일 경우\n          else {\n            const temp = [...messages2];\n            temp.push(e);\n            setMessages2(temp);\n          }\n        }}\n        ref={(client) => {\n          setClientRef(client);\n        }}\n      />\n    </>\n  );\n}\n","import './App.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport DebateBattleList from './component/DebateBattleList';\nimport DebateBattleDetail from './component/DebateBattleDetail';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Container>\n          <Switch>\n            <Route path=\"/ta_front/debbattle.html\" component={DebateBattleList}>\n            </Route>\n            <Route path=\"/ta_front/debbattle/:no\" component={DebateBattleDetail}>\n            </Route>\n          </Switch>\n        </Container>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from './App';\nimport \"./component/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}