{"version":3,"sources":["component/AdminLogin.js","component/pagination/Paging.js","component/Notice.js","component/Board.js","component/DebRecruit.js","component/DebBattle.js","component/DebResult.js","component/AdminList.js","App.js","index.js"],"names":["AdminLogin","props","history","useHistory","id","useRef","pwd","className","style","textAlign","type","name","ref","required","onClick","console","log","current","value","fetch","method","headers","body","JSON","stringify","admin_id","admin_pwd","credentials","then","res","json","data","status","alert","setUserInfo","loginInfo","push","Paging","page","count","setPage","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","prevPageText","nextPageText","onChange","Notice","useState","list","setList","setCount","word","Date","requestData","setRequestData","modalContent","setModalContent","show","setShow","writeShow","setWriteShow","editButton","setEditButton","noticeType","setNoticeType","noticeTitle","setNoticeTitle","noticeContent","setNoticeContent","noticeNo","setNoticeNo","replyShow","setReplyShow","replyList","setReplyList","url","setUrl","useEffect","lastRow","noticeDel","e","target","window","confirm","noticeEdit","noticelist","notice_no","notice_type","notice_title","notice_contents","replyView","replyDelete","msg","margin","Table","hover","fontSize","fontWeight","width","map","notice","index","to","preventDefault","notice_date","notice_views","notice_admin","marginRight","listUrl","searchUrl","Modal","onHide","dialogClassName","fullscreen","size","Header","closeButton","Title","Body","InputGroup","minHeight","Text","FormControl","as","readOnly","Footer","centered","marginLeft","marginBottom","DropdownButton","variant","title","align","display","Dropdown","Item","placeholder","userInfo","bordered","com_no","com_contents","com_mem","member_nickName","Board","boardcommentlist","boardlist","board_no","board_type","board_title","board_date","board_views","board_member","board_contents","com_member","DebRecruit","approveShow","setApproveShow","debNo","commentlist","aprove","debate","debate_status","detail","discussor","member_no","setTimeout","disaprove","colSpan","debatelist","debate_no","debate_topic","debate_date","debate_time","debate_startDate","debate_writer","editor","ClassicEditor","debate_content","config","toolbar","items","onReady","isReadOnly","Spinner","animation","role","DebBattle","DebResult","AdminList","selectList","setSelectList","select","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAGe,SAASA,EAAWC,GACjC,IAAMC,EAAUC,cACVC,EAAKC,iBAAO,MACZC,EAAMD,iBAAO,MA4BnB,OACE,qCACE,uEACA,qBAAKE,UAAU,QAAQC,MAAO,CAAEC,UAAW,UAA3C,SACE,sBAAKF,UAAU,WAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,WAAf,UACE,uBAAOG,KAAK,OAAOC,KAAK,KAAKC,IAAKR,EAAIS,SAAS,aAC/C,sBAAMN,UAAU,OAAhB,mDACA,sBAAMA,UAAU,cAGpB,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,WAAf,UACE,uBAAOG,KAAK,WAAWC,KAAK,MAAMC,IAAKN,EAAKO,SAAS,aACrD,sBAAMN,UAAU,OAAhB,sCACA,sBAAMA,UAAU,cAGpB,wBAAQA,UAAU,8BAA8BO,QA9C1C,WACZC,QAAQC,IAAI,eAAMZ,EAAGa,QAAQC,MAAOZ,EAAIW,QAAQC,OAChDC,MAAM,4CAA6C,CACjDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,SAAUrB,EAAGa,QAAQC,MACrBQ,UAAWpB,EAAIW,QAAQC,QAEzBS,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACLhB,QAAQC,IAAI,UAAQe,GACA,IAAhBA,EAAKC,QACPC,MAAM,gBACNhC,EAAMiC,YAAYH,EAAKI,WACvBjC,EAAQkC,KAAK,oBACY,IAAhBL,EAAKC,QACdC,MAAM,8EAyBN,wC,kFCrCKI,EAbA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC7B,OACE,cAAC,IAAD,CACEC,WAAYH,EACZI,kBAAmB,EACnBC,gBAAiBJ,EACjBK,mBAAoB,EACpBC,aAAc,SACdC,aAAc,SACdC,SAAUP,KCAD,SAASQ,EAAO/C,GAAQ,IAAD,EAEpC,EAAwBgD,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,GAAjC,mBAAOX,EAAP,KAAaE,EAAb,KACA,EAA0BS,mBAAS,GAAnC,mBAAOV,EAAP,KAAca,EAAd,KACA,EAAwBH,qBAAxB,mBAAOI,EAAP,KACA,GADA,KACsCJ,mBAAS,IAAIK,OAAnD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCP,qBAAxC,mBAAOQ,EAAP,KAAqBC,EAArB,KAEA,EAAwBT,oBAAS,GAAjC,mBAAOU,EAAP,KAAaC,EAAb,KACA,EAAkCX,oBAAS,GAA3C,mBAAOY,EAAP,KAAkBC,EAAlB,KACA,EAAoCb,oBAAS,GAA7C,mBAAOc,EAAP,KAAmBC,EAAnB,KACA,EAAoCf,mBAAS,IAA7C,mBAAOgB,EAAP,KAAmBC,EAAnB,KACA,EAAsCjB,qBAAtC,mBAAOkB,GAAP,KAAoBC,GAApB,KACA,GAA0CnB,qBAA1C,qBAAOoB,GAAP,MAAsBC,GAAtB,MACA,GAAgCrB,qBAAhC,qBAAOsB,GAAP,MAAiBC,GAAjB,MACA,GAAkCvB,qBAAlC,qBAAOwB,GAAP,MAAkBC,GAAlB,MACA,GAAkCzB,qBAAlC,qBAAO0B,GAAP,MAAkBC,GAAlB,MAEA,GAAsB3B,mBAAS,0DAAD,OAC8BX,EAD9B,qBAXb,IAWjB,qBAAOuC,GAAP,MAAYC,GAAZ,MAgBAC,qBAAU,WAER5D,MAAM0D,GAAK,CACTzD,OAAQ,MACRO,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACLhB,QAAQC,IAAI,UAAQe,GAEpBoB,EAAQpB,GACRqB,EAASrB,EAAKiD,cAKjB,CAAC1C,EAAMiB,IACV,IAAM0B,GAAY,SAACC,GACjB,IAAQ9E,EAAO8E,EAAEC,OAAT/E,GAER,IAAIgF,OAAOC,QAAQ,sDAkBjB,OAAO,EAhBPlE,MADY,wCAA0Cf,EAC3C,CACTgB,OAAQ,SACRO,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GAELyB,EAAe,IAAIF,MACnBM,GAAQ,OA+DV0B,GAAa,SAACJ,GAClB,IAAQ9E,EAAO8E,EAAEC,OAAT/E,GACRW,QAAQC,IAAIZ,GACZwD,GAAQ,GACRE,GAAa,GACbE,GAAc,GACdQ,GAAYtB,EAAKqC,WAAWnF,GAAIoF,WAChCtB,EAAchB,EAAKqC,WAAWnF,GAAIqF,aAClCrB,GAAelB,EAAKqC,WAAWnF,GAAIsF,cACnCpB,GAAiBpB,EAAKqC,WAAWnF,GAAIuF,kBAWjCC,GAAY,SAACV,GACjB,IACML,EAAM,oDADGK,EAAEC,OAAT/E,GAERW,QAAQC,IAAI,OAAQ6D,GAEpB1D,MAAM0D,EAAK,CACTzD,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAE3BM,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACLhB,QAAQC,IAAI,UAAQe,GACpB6C,GAAa7C,EAAKmB,MAClBwB,IAAa,OAIbmB,GAAc,SAACX,GACnB,IACML,EAAM,+CADGK,EAAEC,OAAT/E,GAERW,QAAQC,IAAI,OAAQ6D,GAEpB1D,MAAM0D,EAAK,CACTzD,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAE3BM,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GAEL,GADAhB,QAAQC,IAAI,UAAQe,GACD,GAAfA,EAAKC,OAAa,CACpB,IAAIoD,OAAOC,QAAQ,sDAIjB,OAAO,EAHPpD,MAAM,6BACNyC,IAAa,QAIS,GAAf3C,EAAKC,QACdC,MAAM,4BAASF,EAAK+D,SAQ5B,OACE,qCACE,0DACA,qBAAKtF,MAAO,CAAEC,UAAW,QAASsF,OAAQ,QAA1C,SACE,wBACExF,UAAU,kBACVO,QAAS,WACPgD,GAAa,GACbE,GAAc,GACdQ,KACAN,IACAE,KACAE,MARJ,yCAcF,eAAC0B,EAAA,EAAD,CAAOC,OAAK,EAAZ,UACE,uBACE1F,UAAU,gBACVC,MAAO,CAAE0F,SAAU,OAAQC,WAAY,OAFzC,SAIE,+BACE,oBAAI3F,MAAO,CAAE4F,MAAO,MAApB,0BACA,oBAAI5F,MAAO,CAAE4F,MAAO,MAApB,0BACA,oBAAI5F,MAAO,CAAE4F,MAAO,OAApB,0BACA,oBAAI5F,MAAO,CAAE4F,MAAO,OAApB,0BACA,oBAAI5F,MAAO,CAAE4F,MAAO,MAApB,gCACA,oBAAI5F,MAAO,CAAE4F,MAAO,MAApB,gCACA,oBAAI5F,MAAO,CAAE4F,MAAO,OAApB,+BAGJ,uBAAO7F,UAAU,cAAjB,mBACG2C,EAAKqC,kBADR,aACG,EAAiBc,KAAI,SAACC,EAAQC,GAAT,OACpB,qBAAIhG,UAAU,cAAd,UACE,6BAAK+F,EAAOd,YACZ,6BAAKc,EAAOb,cACZ,6BACE,cAAC,IAAD,CACEe,GAAG,IACH1F,QAAS,SAACoE,GACRA,EAAEuB,iBAEF7C,GAAQ,GACRF,EAAgB4C,IANpB,SASGA,EAAOZ,iBAGZ,6BAAKY,EAAOI,cACZ,6BAAKJ,EAAOK,eACZ,6BAAKL,EAAOM,eACZ,+BACE,wBACErG,UAAU,0BACVC,MAAO,CAAEqG,YAAa,QACtBzG,GAAIkG,EAAOd,UACX1E,QAAS8E,GAJX,0BAQA,wBACErF,UAAU,uBACVC,MAAO,CAAEqG,YAAa,QACtBzG,GAAImG,EACJzF,QAASwE,GAJX,0BAQA,wBACE/E,UAAU,yBACVH,GAAIkG,EAAOd,UACX1E,QAASmE,GAHX,+BApC6BqB,EAAOd,mBAgD9C,qBAAKjF,UAAU,SAAf,SACE,cAAC,EAAD,CAAQ+B,KAAMA,EAAMC,MAAOA,EAAOC,QA3QxC,SAAkBF,GAChB,IAAMwE,EAAO,iEAA6DxE,EAA7D,qBAfE,GAgBTyE,EAAS,0DAAsD1D,EAAtD,mBAAqEf,EAArE,qBAhBA,GAmBXe,GACFyB,GAAOiC,GACPvE,EAAQF,KAERwC,GAAOgC,GACPtE,EAAQF,SAmQR,qBAAK/B,UAAU,YAAf,SACE,eAACyG,EAAA,EAAD,CACErD,KAAMA,EACNsD,OAAQ,kBAAMrD,GAAQ,IACtBsD,gBAAgB,YAChB,kBAAgB,qCAChBC,WAAW,WACXC,KAAK,KANP,UAQE,cAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACN,EAAA,EAAMO,MAAP,CAAanH,GAAG,qCAAhB,gBACGqD,QADH,IACGA,OADH,EACGA,EAAciC,iBAGnB,cAACsB,EAAA,EAAMQ,KAAP,UACE,eAACC,EAAA,EAAD,CAAYL,KAAK,KAAK5G,MAAO,CAAEkH,UAAW,SAA1C,UACE,cAACD,EAAA,EAAWE,KAAZ,2BACA,cAACC,EAAA,EAAD,CACEC,GAAG,WACH,aAAW,gBAIXC,UAAQ,EACR5G,MAAK,OAAEuC,QAAF,IAAEA,OAAF,EAAEA,EAAckC,uBAK3B,eAACqB,EAAA,EAAMe,OAAP,WACE,wBACExH,UAAU,0BACVC,MAAO,CAAEqG,YAAa,QACtBzG,GAAE,OAAEqD,QAAF,IAAEA,OAAF,EAAEA,EAAc+B,UAClB1E,QAtLM,SAACoE,GACjBtB,GAAQ,GACRE,GAAa,GACbE,GAAc,GACdQ,GAAYf,EAAa+B,WACzBtB,EAAcT,EAAagC,aAC3BrB,GAAeX,EAAaiC,cAC5BpB,GAAiBb,EAAakC,kBA2KtB,0BAQA,wBACEpF,UAAU,0BACVH,GAAE,OAAEqD,QAAF,IAAEA,OAAF,EAAEA,EAAc+B,UAClB1E,QAASmE,GAHX,kCAUN,qBAAK1E,UAAU,aAAf,SACE,eAACyG,EAAA,EAAD,CACErD,KAAME,EACNoD,OAAQ,kBAAMnD,GAAa,IAC3BoD,gBAAgB,aAChB,kBAAgB,qCAEhBE,KAAK,KACLY,UAAQ,EAPV,UASE,cAAChB,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACE,eAACN,EAAA,EAAMO,MAAP,CACEnH,GAAG,qCACHI,MAAO,CACLyH,WAAY,OACZpB,YAAa,OACbT,MAAO,QALX,UAQE,sBAAK5F,MAAO,CAAE0H,aAAc,QAA5B,UACE,eAACC,EAAA,EAAD,CACEC,QAAQ,oBACRC,MAAM,4BACNjI,GAAG,yBACHkI,MAAM,MACN9H,MAAO,CACL+H,QAAS,SACT1B,YAAa,QAPjB,UAUE,cAAC2B,EAAA,EAASC,KAAV,CACE3H,QAAS,WACPoD,EAAc,6BAFlB,sCAOA,cAACsE,EAAA,EAASC,KAAV,CACE3H,QAAS,WACPoD,EAAc,uBAFlB,gCAOA,cAACsE,EAAA,EAASC,KAAV,CACE3H,QAAS,WACPoD,EAAc,6BAFlB,yCAQDD,KAEH,eAACwD,EAAA,EAAD,CAAYlH,UAAU,OAAO6G,KAAK,KAAK5G,MAAO,CAAE4F,MAAO,OAAvD,UACE,cAACqB,EAAA,EAAWE,KAAZ,CAAiBvH,GAAG,eAApB,0BACA,cAACwH,EAAA,EAAD,CACEc,YAAY,2DACZ,aAAW,WACX,mBAAiB,eACjB3F,SAAU,SAACmC,GACTd,GAAec,EAAEC,OAAOjE,QAG1BA,MAAOiD,aAKf,cAAC6C,EAAA,EAAMQ,KAAP,UACE,eAACC,EAAA,EAAD,CAAYL,KAAK,KAAK5G,MAAO,CAAEkH,UAAW,SAA1C,UACE,cAACD,EAAA,EAAWE,KAAZ,2BACA,cAACC,EAAA,EAAD,CACEC,GAAG,WACH,aAAW,gBACX9E,SAAU,SAACmC,GACTZ,GAAiBY,EAAEC,OAAOjE,QAE5BA,MAAOmD,UAIb,cAAC2C,EAAA,EAAMe,OAAP,UACGhE,EACC,wBACExD,UAAU,0BACVC,MAAO,CAAEqG,YAAa,QACtBzG,GAAE,OAAEqD,QAAF,IAAEA,OAAF,EAAEA,EAAc+B,UAClB1E,QAnUO,WACnB,IAAM+D,EAAM,wCAA0CN,GACtDxD,QAAQC,IAAI,OAAQ6D,GAEpB1D,MAAM0D,EAAK,CACTzD,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBgE,UAAWjB,GACXkB,YAAaxB,EACbyB,aAAcvB,GACdwB,gBAAiBtB,KAGnB1C,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GAELyB,EAAe,IAAIF,MACnBQ,GAAa,OAySP,0BASA,wBACEvD,UAAU,0BACVC,MAAO,CAAEqG,YAAa,QACtBzG,GAAE,OAAEqD,QAAF,IAAEA,OAAF,EAAEA,EAAc+B,UAClB1E,QArWM,WAElBK,MADY,wCACD,CACTC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBiE,YAAaxB,EACbyB,aAAcvB,GACdwB,gBAAiBtB,GACjBuC,aAAc3G,EAAM0I,WAEtBhH,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GAELyB,EAAe,IAAIF,MACnBQ,GAAa,OA8UP,iCAYR,qBAAKvD,UAAU,aAAf,SACE,eAACyG,EAAA,EAAD,CACErD,KAAMc,GACNwC,OAAQ,kBAAMvC,IAAa,IAC3BwC,gBAAgB,aAChB,kBAAgB,qCAEhBE,KAAK,KACLY,UAAQ,EAPV,UASE,cAAChB,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACN,EAAA,EAAMO,MAAP,CACEnH,GAAG,qCACHI,MAAO,CACLyH,WAAY,OACZpB,YAAa,OACbT,MAAO,QALX,SAQE,qBAAK5F,MAAO,CAAE0H,aAAc,QAA5B,iDAGJ,cAAClB,EAAA,EAAMQ,KAAP,UACE,eAACxB,EAAA,EAAD,CAAO4C,UAAQ,EAAC3C,OAAK,EAACzF,MAAO,CAAEC,UAAW,UAA1C,UACE,uBAAOF,UAAU,gBAAjB,SACE,+BACE,2DACA,2DACA,iEACA,mDAGJ,uBAAOA,UAAU,cAAjB,gBACGoE,SADH,IACGA,QADH,EACGA,GAAW0B,KAAI,SAACnD,GAAD,OACd,+BACE,6BAAKA,EAAK2F,SACV,6BAAK3F,EAAK4F,eACV,6BAAK5F,EAAK6F,QAAQC,kBAClB,6BACE,wBACEzI,UAAU,iBACVH,GAAI8C,EAAK2F,OACT/H,QAAS+E,GAHX,8BALK3C,EAAK2F,0BC9djB,SAASI,EAAMhJ,GAAQ,IAAD,EACnCc,QAAQC,IAAI,cAAef,EAAM0I,UACjC,MAAwB1F,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,GAAjC,mBAAOX,EAAP,KAAaE,EAAb,KACA,EAA0BS,mBAAS,GAAnC,mBAAOV,EAAP,KAAca,EAAd,KAEA,EAAwBH,qBAAxB,mBAAOI,EAAP,KACA,GADA,KACsCJ,mBAAS,IAAIK,OAAnD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCP,qBAAxC,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAAwBT,oBAAS,GAAjC,mBAAOU,EAAP,KAAaC,EAAb,KACA,EAAoCX,mBAAS,IAA7C,mBACA,GADA,UACsCA,sBAAtC,mBACA,GADA,UAC0CA,sBAA1C,mBACA,GADA,UACgCA,sBAAhC,mBACA,GADA,UACkCA,sBAAlC,mBAAOwB,EAAP,KAAkBC,EAAlB,KACA,EAAkCzB,qBAAlC,mBAAO0B,EAAP,KAAkBC,EAAlB,KAEA,GAAsB3B,mBAAS,yDAAD,OAC6BX,EAD7B,qBAZb,IAYjB,qBAAOuC,GAAP,MAAYC,GAAZ,MAiBAC,qBAAU,WAER5D,MAAM0D,GAAK,CACTzD,OAAQ,MACRO,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACLhB,QAAQC,IAAI,UAAQe,GAEpBoB,EAAQpB,GACRqB,EAASrB,EAAKiD,cAKjB,CAAC1C,EAAMiB,IAEV,IAAMqC,GAAY,SAACV,GACjB,IACML,EAAM,mDADGK,EAAEC,OAAT/E,GAERW,QAAQC,IAAI,OAAQ6D,GAEpB1D,MAAM0D,EAAK,CACTzD,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAE3BM,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACLhB,QAAQC,IAAI,UAAQe,GACpB6C,EAAa7C,EAAKmH,kBAClBxE,GAAa,OAIbO,GAAY,SAACC,GACjB,IAAQ9E,EAAO8E,EAAEC,OAAT/E,GAER,IAAIgF,OAAOC,QAAQ,sDAkBjB,OAAO,EAhBPlE,MADY,6CAA+Cf,EAChD,CACTgB,OAAQ,SACRO,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACLhB,QAAQC,IAAI,UAAQe,GACpByB,EAAe,IAAIF,MACnBM,GAAQ,OASViC,GAAc,SAACX,GACnB,IACML,EAAM,8CADGK,EAAEC,OAAT/E,GAGR,GADAW,QAAQC,IAAI,OAAQ6D,IAChBO,OAAOC,QAAQ,sDAuBjB,OAAO,EAtBPlE,MAAM0D,EAAK,CACTzD,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAE3BM,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACLhB,QAAQC,IAAI,UAAQe,GACD,GAAfA,EAAKC,QACPC,MAAM,6BACNyC,GAAa,IACW,GAAf3C,EAAKC,QACdC,MAAM,4BAASF,EAAK+D,SAU9B,OACE,qCACE,gEACA,eAACE,EAAA,EAAD,CAAOC,OAAK,EAAZ,UACE,uBACE1F,UAAU,aACVC,MAAO,CAAE0F,SAAU,OAAQC,WAAY,OAFzC,SAIE,+BACE,oBAAI3F,MAAO,CAAE4F,MAAO,MAApB,0BACA,oBAAI5F,MAAO,CAAE4F,MAAO,MAApB,0BACA,oBAAI5F,MAAO,CAAE4F,MAAO,OAApB,0BACA,oBAAI5F,MAAO,CAAE4F,MAAO,OAApB,0BACA,oBAAI5F,MAAO,CAAE4F,MAAO,MAApB,gCACA,oBAAI5F,MAAO,CAAE4F,MAAO,MAApB,gCACA,oBAAI5F,MAAO,CAAE4F,MAAO,OAApB,+BAGJ,uBAAO7F,UAAU,cAAjB,mBACG2C,EAAKiG,iBADR,aACG,EAAgB9C,KAAI,SAACC,EAAQC,GAAT,OACnB,qBAAIhG,UAAU,cAAd,UACE,6BAAK+F,EAAO8C,WACZ,6BAAK9C,EAAO+C,aACZ,6BACE,cAAC,IAAD,CACE7C,GAAG,IACH1F,QAAS,SAACoE,GACRA,EAAEuB,iBAEF7C,GAAQ,GACRF,EAAgB4C,IANpB,SASGA,EAAOgD,gBAGZ,6BAAKhD,EAAOiD,aACZ,6BAAKjD,EAAOkD,cACZ,6BAAKlD,EAAOmD,aAAaT,kBACzB,+BACE,wBACEzI,UAAU,0BACVC,MAAO,CAAEqG,YAAa,QACtBzG,GAAIkG,EAAO8C,SACXtI,QAAS8E,GAJX,0BASA,wBACErF,UAAU,yBACVH,GAAIkG,EAAO8C,SACXtI,QAASmE,GAHX,+BA7B6BqB,EAAO8C,kBAyC9C,qBAAK7I,UAAU,SAAf,SACE,cAAC,EAAD,CAAQ+B,KAAMA,EAAMC,MAAOA,EAAOC,QA1KxC,SAAkBF,GAChB,IAAMwE,EAAO,gEAA4DxE,EAA5D,qBAjBE,GAkBTyE,EAAS,yDAAqD1D,EAArD,mBAAoEf,EAApE,qBAlBA,GAqBXe,GACFyB,GAAOiC,GACPvE,EAAQF,KAERwC,GAAOgC,GACPtE,EAAQF,SAkKR,qBAAK/B,UAAU,YAAf,SACE,eAACyG,EAAA,EAAD,CACErD,KAAMA,EACNsD,OAAQ,kBAAMrD,GAAQ,IACtBsD,gBAAgB,YAChB,kBAAgB,qCAChBC,WAAW,WACXC,KAAK,KANP,UAQE,cAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACN,EAAA,EAAMO,MAAP,CAAanH,GAAG,qCAAhB,gBACGqD,QADH,IACGA,OADH,EACGA,EAAc6F,gBAGnB,cAACtC,EAAA,EAAMQ,KAAP,UACE,eAACC,EAAA,EAAD,CAAYL,KAAK,KAAK5G,MAAO,CAAEkH,UAAW,SAA1C,UACE,cAACD,EAAA,EAAWE,KAAZ,2BACA,cAACC,EAAA,EAAD,CACEC,GAAG,WACH,aAAW,gBAIXC,UAAQ,EACR5G,MAAK,OAAEuC,QAAF,IAAEA,OAAF,EAAEA,EAAciG,sBAK3B,cAAC1C,EAAA,EAAMe,OAAP,UACE,wBACExH,UAAU,0BACVH,GAAE,OAAEqD,QAAF,IAAEA,OAAF,EAAEA,EAAc2F,SAClBtI,QAASmE,GAHX,iCAUN,qBAAK1E,UAAU,aAAf,SACE,eAACyG,EAAA,EAAD,CACErD,KAAMc,EACNwC,OAAQ,kBAAMvC,GAAa,IAC3BwC,gBAAgB,aAChB,kBAAgB,qCAEhBE,KAAK,KACLY,UAAQ,EAPV,UASE,cAAChB,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACN,EAAA,EAAMO,MAAP,CACEnH,GAAG,qCACHI,MAAO,CACLyH,WAAY,OACZpB,YAAa,OACbT,MAAO,QALX,SAQE,qBAAK5F,MAAO,CAAE0H,aAAc,QAA5B,iDAGJ,cAAClB,EAAA,EAAMQ,KAAP,UACE,eAACxB,EAAA,EAAD,CAAO4C,UAAQ,EAAC3C,OAAK,EAACzF,MAAO,CAAEC,UAAW,UAA1C,UACE,uBAAOF,UAAU,gBAAjB,SACE,+BACE,2DACA,2DACA,iEACA,mDAGJ,uBAAOA,UAAU,cAAjB,gBACGoE,QADH,IACGA,OADH,EACGA,EAAW0B,KAAI,SAACnD,GAAD,OACd,+BACE,6BAAKA,EAAK2F,SACV,6BAAK3F,EAAK4F,eACV,6BAAK5F,EAAKyG,WAAWX,kBACrB,6BACE,wBACEzI,UAAU,iBACVH,GAAI8C,EAAK2F,OACT/H,QAAS+E,GAHX,8BALK3C,EAAK2F,0B,sCCjRjB,SAASe,EAAW3J,GAAQ,IAAD,EACxCc,QAAQC,IAAI,mBAAoBf,EAAM0I,UAEtC,MAAwB1F,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,GAAjC,mBAAOX,EAAP,KAAaE,EAAb,KACA,EAA0BS,mBAAS,GAAnC,mBAAOV,EAAP,KAAca,EAAd,KAEA,EAAwBH,qBAAxB,mBAAOI,EAAP,KACA,GADA,KACsCJ,mBAAS,IAAIK,OAAnD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCP,qBAAxC,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAAwBT,oBAAS,GAAjC,mBAAOU,EAAP,KAAaC,EAAb,KACA,EAAoCX,mBAAS,IAA7C,mBACA,GADA,UACsCA,sBAAtC,mBACA,GADA,UAC0CA,sBAA1C,mBACA,GADA,UACgCA,sBAAhC,mBACA,GADA,UACkCA,sBAAlC,mBAAOwB,EAAP,KAAkBC,EAAlB,KACA,EAAkCzB,qBAAlC,mBAAO0B,GAAP,KAAkBC,GAAlB,KACA,GAAsC3B,oBAAS,GAA/C,qBAAO4G,GAAP,MAAoBC,GAApB,MACA,GAAsB7G,mBAAS,wDAAD,OAC4BX,EAD5B,qBAZb,IAYjB,qBAAOuC,GAAP,MAAYC,GAAZ,MAiBAC,qBAAU,WAER5D,MAAM0D,GAAK,CACTzD,OAAQ,MACRO,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACLhB,QAAQC,IAAI,UAAQe,GAEpBoB,EAAQpB,GACRqB,EAASrB,EAAKiD,cAKjB,CAAC1C,EAAMiB,IAEV,IAAM0B,GAAY,SAACC,GACjB,IAAQ9E,EAAO8E,EAAEC,OAAT/E,GACFyE,EAAM,mDAEZ,GADA9D,QAAQC,IAAI,OAAQ6D,IAChBO,OAAOC,QAAQ,sDAmBjB,OAAO,EAlBPlE,MAAM0D,EAAK,CACTzD,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBuI,MAAO3J,IAETuB,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACLhB,QAAQC,IAAI,UAAQe,GACpByB,EAAe,IAAIF,MACnBM,GAAQ,OAOVgC,GAAY,SAACV,GACjB,IAAQ9E,EAAO8E,EAAEC,OAAT/E,GAIRe,MADY,4CAA8Cf,EAC/C,CACTgB,OAAQ,MACRO,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACLhB,QAAQC,IAAI,UAAQe,GACpB6C,GAAa7C,EAAKiI,aAClBtF,GAAa,OAMbmB,GAAc,SAACX,GACnB,IACML,EAAM,wDADGK,EAAEC,OAAT/E,GAERW,QAAQC,IAAI,OAAQ6D,GAEpB1D,MAAM0D,EAAK,CACTzD,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BM,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GAEL,GADAhB,QAAQC,IAAI,UAAQe,GACD,GAAfA,EAAKC,OAAa,CACpB,IAAIoD,OAAOC,QAAQ,sDAIjB,OAAO,EAHP7B,EAAe,IAAIF,MACnBoB,GAAa,QAIS,GAAf3C,EAAKC,QACdC,MAAM,4BAASF,EAAK+D,SAQtBmE,GAAS,SAAC/E,GACd,IAAQ9E,EAAO8E,EAAEC,OAAT/E,GACFyE,EAAM,4CAA8CzE,EAC1DW,QAAQC,IAAI,OAAQ6D,GAEpB1D,MAAM0D,EAAK,CACTzD,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAE3BM,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GAAU,IAAD,IAEd,GADAhB,QAAQC,IAAI,UAAQe,GACqB,iBAArCA,EAAKmI,OAAOA,OAAOC,cACrBlI,MAAM,wEACD,GACyC,OAA9C,UAAAF,EAAKmI,OAAOE,OAAO,GAAGC,iBAAtB,eAAiCC,YACa,OAA9C,UAAAvI,EAAKmI,OAAOE,OAAO,GAAGC,iBAAtB,eAAiCC,WAEjCrI,MAAM,gEACD,CACL6H,IAAe,GACfS,YAAW,WACTT,IAAe,KACd,KACH,IAAMjF,EAAM,+CAAiDzE,EAC7DW,QAAQC,IAAI,OAAQ6D,GACpB1D,MAAM0D,EAAK,CACTzD,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAE3BM,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACLhB,QAAQC,IAAI,UAAQe,GACpBE,MAAM,gBACNuB,EAAe,IAAIF,cAKzBkH,GAAY,SAACtF,GACjB,IACML,EAAM,kDADGK,EAAEC,OAAT/E,GAERW,QAAQC,IAAI,OAAQ6D,GACpB1D,MAAM0D,EAAK,CACTzD,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAE3BM,YAAa,YAEZC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACLhB,QAAQC,IAAI,UAAQe,GACpBE,MAAM,6BACNuB,EAAe,IAAIF,UAGzB,OACE,qCACE,0DACA,eAAC0C,EAAA,EAAD,CAAOC,OAAK,EAAZ,UACE,uBACE1F,UAAU,gBACVC,MAAO,CAAE0F,SAAU,OAAQC,WAAY,OAFzC,SAIE,+BACE,oBAAI3F,MAAO,CAAE4F,MAAO,MAApB,0BACA,oBAAI5F,MAAO,CAAE4F,MAAO,OAApB,0BACA,oBAAI5F,MAAO,CAAE4F,MAAO,OAApB,0BACA,oBAAI5F,MAAO,CAAE4F,MAAO,OAApB,sCACA,oBAAI5F,MAAO,CAAE4F,MAAO,OAApB,sCACA,oBAAI5F,MAAO,CAAE4F,MAAO,MAApB,gCACA,oBAAI5F,MAAO,CAAE4F,MAAO,MAApB,0BACA,oBAAIqE,QAAQ,IAAIjK,MAAO,CAAE4F,MAAO,OAAhC,+BAKJ,uBAAO7F,UAAU,cAAjB,mBACG2C,EAAKwH,kBADR,aACG,EAAiBrE,KAAI,SAAC6D,EAAQ3D,GAAT,OACpB,qBAAIhG,UAAU,cAAd,UACE,6BAAK2J,EAAOS,YAEZ,6BACE,cAAC,IAAD,CACEnE,GAAG,IACH1F,QAAS,SAACoE,GACRA,EAAEuB,iBAEF7C,GAAQ,GACRF,EAAgBwG,IANpB,SASGA,EAAOU,iBAGZ,6BAAKV,EAAOW,cACZ,6BAAKX,EAAOY,cACZ,6BAAKZ,EAAOa,mBACZ,6BAAKb,EAAOc,cAAchC,kBAC1B,6BAAKkB,EAAOC,gBACZ,6BAC4B,uBAAzBD,EAAOC,cACN,wBACE5J,UAAU,uBACVC,MAAO,GACPJ,GAAI8J,EAAOS,UACX7J,QAASmJ,GAJX,0BASA,wBACE1J,UAAU,uBACVC,MAAO,GACPJ,GAAI8J,EAAOS,UACX7J,QAAS0J,GAJX,wCAUJ,6BACE,wBACEjK,UAAU,0BACVC,MAAO,GACPJ,GAAI8J,EAAOS,UACX7J,QAAS8E,GAJX,4BASF,6BACE,wBACErF,UAAU,yBACVH,GAAI8J,EAAOS,UACX7J,QAASmE,GAHX,8BArD6BiF,EAAOS,mBAiE9C,qBAAKpK,UAAU,SAAf,SACE,cAAC,EAAD,CAAQ+B,KAAMA,EAAMC,MAAOA,EAAOC,QA1QxC,SAAkBF,GAChB,IAAMwE,EAAO,+DAA2DxE,EAA3D,qBAjBE,GAkBTyE,EAAS,wDAAoD1D,EAApD,mBAAmEf,EAAnE,qBAlBA,GAqBXe,GACFyB,GAAOiC,GACPvE,EAAQF,KAERwC,GAAOgC,GACPtE,EAAQF,SAkQR,qBAAK/B,UAAU,YAAf,SACE,eAACyG,EAAA,EAAD,CACErD,KAAMA,EACNsD,OAAQ,kBAAMrD,GAAQ,IACtBsD,gBAAgB,YAChB,kBAAgB,qCAChBC,WAAW,WACXC,KAAK,KANP,UAQE,cAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACN,EAAA,EAAMO,MAAP,CAAanH,GAAG,qCAAhB,gBACGqD,QADH,IACGA,OADH,EACGA,EAAcmH,iBAGnB,cAAC5D,EAAA,EAAMQ,KAAP,UACE,cAACC,EAAA,EAAD,CAAYL,KAAK,KAAK5G,MAAO,CAAEkH,UAAW,SAA1C,SAWE,qBAAKlH,MAAO,CAAE4F,MAAO,OAAQsB,UAAW,SAAxC,SACE,cAAC,WAAD,CACEuD,OAAQC,IACRnJ,KAAI,OAAE0B,QAAF,IAAEA,OAAF,EAAEA,EAAc0H,eACpBC,OAAQ,CAAEC,QAAS,CAAEC,MAAO,KAC5BC,QAAS,SAACN,GACRA,EAAOO,YAAa,WAW9B,cAACxE,EAAA,EAAMe,OAAP,UACE,wBACExH,UAAU,0BACVH,GAAE,OAAEqD,QAAF,IAAEA,OAAF,EAAEA,EAAc2F,SAClBtI,QAASmE,GAHX,iCAUN,qBAAK1E,UAAU,aAAf,SACE,eAACyG,EAAA,EAAD,CACErD,KAAMc,EACNwC,OAAQ,kBAAMvC,GAAa,IAC3BwC,gBAAgB,aAChB,kBAAgB,qCAEhBE,KAAK,KACLY,UAAQ,EAPV,UASE,cAAChB,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACN,EAAA,EAAMO,MAAP,CACEnH,GAAG,qCACHI,MAAO,CACLyH,WAAY,OACZpB,YAAa,OACbT,MAAO,QALX,SAQE,qBAAK5F,MAAO,CAAE0H,aAAc,QAA5B,iDAGJ,cAAClB,EAAA,EAAMQ,KAAP,UACE,eAACxB,EAAA,EAAD,CAAO4C,UAAQ,EAAC3C,OAAK,EAACzF,MAAO,CAAEC,UAAW,UAA1C,UACE,uBAAOF,UAAU,gBAAjB,SACE,+BACE,2DACA,2DACA,iEACA,mDAGJ,uBAAOA,UAAU,cAAjB,gBACGoE,SADH,IACGA,QADH,EACGA,GAAW0B,KAAI,SAACnD,GAAD,OACd,+BACE,6BAAKA,EAAK2F,SACV,6BAAK3F,EAAK4F,eACV,6BAAK5F,EAAK6F,QAAQC,kBAClB,6BACE,wBACEzI,UAAU,iBACVH,GAAI8C,EAAK2F,OACT/H,QAAS+E,GAHX,8BALK3C,EAAK2F,uBAoB1B,eAAC7B,EAAA,EAAD,CACErD,KAAMkG,GACNzC,KAAK,KACL,kBAAgB,gCAChBH,OAAQ,WACN,OAAO,GAETe,UAAQ,EAPV,UASE,cAAChB,EAAA,EAAMK,OAAP,UACE,cAACL,EAAA,EAAMO,MAAP,CACEnH,GAAG,gCACHI,MAAO,CAAEC,UAAW,SAAU2F,MAAO,QAFvC,SAIE,+FAGJ,cAACY,EAAA,EAAMQ,KAAP,UACE,sBAAKhH,MAAO,CAAEC,UAAW,SAAUsF,OAAQ,QAA3C,UACE,cAAC0F,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAjC,SACE,sBAAMpL,UAAU,kBAAhB,0BAEF,+BACE,uBADF,iHC1aG,SAASqL,EAAU3L,GAEhC,OADAc,QAAQC,IAAI,kBAAmBf,EAAM0I,UAEnC,mCACE,6DCJS,SAASkD,EAAU5L,GAEhC,OADAc,QAAQC,IAAI,kBAAmBf,EAAM0I,UAEnC,mCACE,6D,MCMS,SAASmD,EAAU7L,GAEhC,MAAoCgD,mBAAS,UAA7C,mBAAO8I,EAAP,KAAmBC,EAAnB,KACMnH,EAAM,mBAAqBkH,EAC3B7L,EAAUC,cACV8L,EAAS,SAAC/G,GAEd8G,EAAc9G,IAOhB,OALAH,qBAAU,WAER7E,EAAQkC,KAAKyC,KACZ,CAACA,IAGF,qCACE,qDAAS5E,EAAM0I,SAAf,4CACA,qBAAKnI,MAAO,CAAE+H,QAAS,SAAU9H,UAAW,SAA5C,SACE,iEAEE,eAAC0H,EAAA,EAAD,CACE3H,MAAO,CAAEuF,OAAQ,aACjB3F,GAAG,wBACHiI,MAAM,qBAHR,UAKE,cAACG,EAAA,EAASC,KAAV,CACE3H,QAAS,WACPmL,EAAO,WAFX,sCAOA,cAACzD,EAAA,EAASC,KAAV,CACE3H,QAAS,WACPmL,EAAO,UAFX,4CAOA,cAACzD,EAAA,EAASC,KAAV,CACE3H,QAAS,WACPmL,EAAO,gBAFX,8CAwBN,sBAAK7L,GAAG,OAAR,UACE,cAAC,IAAD,CAAO8L,KAAK,yBAAZ,SACE,cAAClJ,EAAD,CAAQ2F,SAAU1I,EAAM0I,aAE1B,cAAC,IAAD,CAAOuD,KAAK,wBAAZ,SACE,cAACjD,EAAD,CAAON,SAAU1I,EAAM0I,aAEzB,cAAC,IAAD,CAAOuD,KAAK,8BAAZ,SACE,cAACtC,EAAD,CAAYjB,SAAU1I,EAAM0I,aAE9B,cAAC,IAAD,CAAOuD,KAAK,4BAAZ,SACE,cAACN,EAAD,CAAWjD,SAAU1I,EAAM0I,aAE7B,cAAC,IAAD,CAAOuD,KAAK,4BAAZ,SACE,cAACL,EAAD,CAAWlD,SAAU1I,EAAM0I,mBC5DtBwD,MArBf,WACE,MAAgClJ,qBAAhC,mBAAO0F,EAAP,KAAiBzG,EAAjB,KAEA,OACE,cAAC,IAAD,UACE,qBAAK3B,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2L,KAAK,uBAAZ,SACE,cAAC,EAAD,CAAYhK,YAAaA,MAE3B,cAAC,IAAD,CAAOgK,KAAK,kBAAZ,SACE,cAACJ,EAAD,CAAWnD,SAAUA,gBCZnCyD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.28513b78.chunk.js","sourcesContent":["import { useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./css/AdminLogin.css\";\r\nexport default function AdminLogin(props) {\r\n  const history = useHistory();\r\n  const id = useRef(null);\r\n  const pwd = useRef(null);\r\n  const login = () => {\r\n    console.log(\"클릭\", id.current.value, pwd.current.value);\r\n    fetch(\"http://localhost:9999/ta_back/admin/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        admin_id: id.current.value,\r\n        admin_pwd: pwd.current.value,\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"--->\", data);\r\n        if (data.status === 1) {\r\n          alert(\"성공\");\r\n          props.setUserInfo(data.loginInfo);\r\n          history.push(\"/ta_front/admin\");\r\n        } else if (data.status === 0) {\r\n          alert(\"정보가 일치 하지 않습니다.\");\r\n        }\r\n        //history.push(\"/ta_front/debrecruit.html\");\r\n        // console.log(\"로그인완료\", loginInfo);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <h1>관리자 페이지</h1>\r\n      <div className=\"login\" style={{ textAlign: \"center\" }}>\r\n        <div className=\"loginBox\">\r\n          <div className=\"col\">\r\n            <div className=\"inputBox\">\r\n              <input type=\"text\" name=\"id\" ref={id} required=\"required\" />\r\n              <span className=\"text\">관리자 아이디</span>\r\n              <span className=\"line\"></span>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"inputBox\">\r\n              <input type=\"password\" name=\"pwd\" ref={pwd} required=\"required\" />\r\n              <span className=\"text\">비밀번호</span>\r\n              <span className=\"line\"></span>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-success loginbutton\" onClick={login}>\r\n            로그인\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Paging.css\";\r\nimport Pagination from \"react-js-pagination\";\r\nconst Paging = ({ page, count, setPage }) => {\r\n  return (\r\n    <Pagination\r\n      activePage={page}\r\n      itemsCountPerPage={5}\r\n      totalItemsCount={count}\r\n      pageRangeDisplayed={5}\r\n      prevPageText={\"‹\"}\r\n      nextPageText={\"›\"}\r\n      onChange={setPage}\r\n    />\r\n  );\r\n};\r\nexport default Paging;\r\n","import {\r\n  Table,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl,\r\n  Dropdown,\r\n  DropdownButton,\r\n} from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paging from \"./pagination/Paging\";\r\n\r\nexport default function Notice(props) {\r\n  //console.log(\"notice props\", props.userInfo);\r\n  const [list, setList] = useState({});\r\n  const [page, setPage] = useState(1);\r\n  const [count, setCount] = useState(1);\r\n  const [word, setWord] = useState();\r\n  const [requestData, setRequestData] = useState(new Date());\r\n  const [modalContent, setModalContent] = useState();\r\n  const pageSize = 5;\r\n  const [show, setShow] = useState(false);\r\n  const [writeShow, setWriteShow] = useState(false);\r\n  const [editButton, setEditButton] = useState(false);\r\n  const [noticeType, setNoticeType] = useState(\"\");\r\n  const [noticeTitle, setNoticeTitle] = useState();\r\n  const [noticeContent, setNoticeContent] = useState();\r\n  const [noticeNo, setNoticeNo] = useState();\r\n  const [replyShow, setReplyShow] = useState();\r\n  const [replyList, setReplyList] = useState();\r\n\r\n  const [url, setUrl] = useState(\r\n    `http://localhost:9999/ta_back/admin/notice/list?pageNo=${page}&pageSize=${pageSize}`\r\n  );\r\n  function setPage1(page) {\r\n    const listUrl = `http://localhost:9999/ta_back/admin/notice/list?pageNo=${page}&pageSize=${pageSize}`;\r\n    const searchUrl = `http://localhost:9999/ta_back/admin/notice/list/${word}?pageNo=${page}&pageSize=${pageSize}`;\r\n    // console.log(url);\r\n    // console.log(page);\r\n    if (word) {\r\n      setUrl(searchUrl);\r\n      setPage(page);\r\n    } else {\r\n      setUrl(listUrl);\r\n      setPage(page);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    // setLoading(true);\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"--->\", data);\r\n        //setRequestData(new Date());\r\n        setList(data);\r\n        setCount(data.lastRow);\r\n        // setLoginInfo(data.logininfo);\r\n        // console.log(\"로그인정보->\", loginInfo);\r\n        // setLoading(false);\r\n      });\r\n  }, [page, requestData]);\r\n  const noticeDel = (e) => {\r\n    const { id } = e.target;\r\n    // console.log(\"=>\", id);\r\n    if (window.confirm(\"삭제 하시겠습니까?\")) {\r\n      const url = \"http://localhost:9999/ta_back/notice/\" + id;\r\n      fetch(url, {\r\n        method: \"DELETE\",\r\n        credentials: \"include\",\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          //console.log(\"--->\", data);\r\n          setRequestData(new Date());\r\n          setShow(false);\r\n          // setLoginInfo(data.logininfo);\r\n          // console.log(\"로그인정보->\", loginInfo);\r\n          // setLoading(false);\r\n        });\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const noticeWrite = () => {\r\n    const url = \"http://localhost:9999/ta_back/notice/\";\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        notice_type: noticeType,\r\n        notice_title: noticeTitle,\r\n        notice_contents: noticeContent,\r\n        notice_admin: props.userInfo,\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        //console.log(\"--->\", data);\r\n        setRequestData(new Date());\r\n        setWriteShow(false);\r\n        // setLoginInfo(data.logininfo);\r\n        // console.log(\"로그인정보->\", loginInfo);\r\n        // setLoading(false);\r\n      });\r\n  };\r\n  const noticeUpdate = () => {\r\n    const url = \"http://localhost:9999/ta_back/notice/\" + noticeNo;\r\n    console.log(\"no=>\", url);\r\n\r\n    fetch(url, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        notice_no: noticeNo,\r\n        notice_type: noticeType,\r\n        notice_title: noticeTitle,\r\n        notice_contents: noticeContent,\r\n        //notice_admin: props.userInfo,\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        //console.log(\"--->\", data);\r\n        setRequestData(new Date());\r\n        setWriteShow(false);\r\n        // setLoginInfo(data.logininfo);\r\n        // console.log(\"로그인정보->\", loginInfo);\r\n        // setLoading(false);\r\n      });\r\n  };\r\n  const noticeEdit = (e) => {\r\n    const { id } = e.target;\r\n    console.log(id);\r\n    setShow(false);\r\n    setWriteShow(true);\r\n    setEditButton(true);\r\n    setNoticeNo(list.noticelist[id].notice_no);\r\n    setNoticeType(list.noticelist[id].notice_type);\r\n    setNoticeTitle(list.noticelist[id].notice_title);\r\n    setNoticeContent(list.noticelist[id].notice_contents);\r\n  };\r\n  const modalEdit = (e) => {\r\n    setShow(false);\r\n    setWriteShow(true);\r\n    setEditButton(true);\r\n    setNoticeNo(modalContent.notice_no);\r\n    setNoticeType(modalContent.notice_type);\r\n    setNoticeTitle(modalContent.notice_title);\r\n    setNoticeContent(modalContent.notice_contents);\r\n  };\r\n  const replyView = (e) => {\r\n    const { id } = e.target;\r\n    const url = \"http://localhost:9999/ta_back/noticecomment/list/\" + id;\r\n    console.log(\"no=>\", url);\r\n\r\n    fetch(url, {\r\n      method: \"get\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"--->\", data);\r\n        setReplyList(data.list);\r\n        setReplyShow(true);\r\n        // setLoading(false);\r\n      });\r\n  };\r\n  const replyDelete = (e) => {\r\n    const { id } = e.target;\r\n    const url = \"http://localhost:9999/ta_back/noticecomment/\" + id;\r\n    console.log(\"no=>\", url);\r\n\r\n    fetch(url, {\r\n      method: \"delete\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"--->\", data);\r\n        if (data.status == 1) {\r\n          if (window.confirm(\"삭제 하시겠습니까?\")) {\r\n            alert(\"삭제 성공\");\r\n            setReplyShow(false);\r\n          } else {\r\n            return false;\r\n          }\r\n        } else if (data.status == 0) {\r\n          alert(\"삭제 실패\", data.msg);\r\n        }\r\n        //setReplyList(data.list);\r\n        //setReplyShow(true);\r\n        // setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>공지사항</h1>\r\n      <div style={{ textAlign: \"right\", margin: \"10px\" }}>\r\n        <button\r\n          className=\"btn btn-success\"\r\n          onClick={() => {\r\n            setWriteShow(true);\r\n            setEditButton(false);\r\n            setNoticeNo();\r\n            setNoticeType();\r\n            setNoticeTitle();\r\n            setNoticeContent();\r\n          }}\r\n        >\r\n          공지 작성\r\n        </button>\r\n      </div>\r\n      <Table hover>\r\n        <thead\r\n          className=\"table-success\"\r\n          style={{ fontSize: \"15pt\", fontWeight: \"700\" }}\r\n        >\r\n          <tr>\r\n            <td style={{ width: \"5%\" }}>번호</td>\r\n            <td style={{ width: \"5%\" }}>종류</td>\r\n            <td style={{ width: \"20%\" }}>제목</td>\r\n            <td style={{ width: \"15%\" }}>날짜</td>\r\n            <td style={{ width: \"5%\" }}>조회수</td>\r\n            <td style={{ width: \"5%\" }}>작성자</td>\r\n            <td style={{ width: \"15%\" }}>작업</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"table-light\">\r\n          {list.noticelist?.map((notice, index) => (\r\n            <tr className=\"table-light\" key={notice.notice_no}>\r\n              <td>{notice.notice_no}</td>\r\n              <td>{notice.notice_type}</td>\r\n              <td>\r\n                <Link\r\n                  to=\"/\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    // console.log(\"notice=>\", notice);\r\n                    setShow(true);\r\n                    setModalContent(notice);\r\n                  }}\r\n                >\r\n                  {notice.notice_title}\r\n                </Link>\r\n              </td>\r\n              <td>{notice.notice_date}</td>\r\n              <td>{notice.notice_views}</td>\r\n              <td>{notice.notice_admin}</td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-outline-success\"\r\n                  style={{ marginRight: \"10px\" }}\r\n                  id={notice.notice_no}\r\n                  onClick={replyView}\r\n                >\r\n                  댓글\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-outline-info\"\r\n                  style={{ marginRight: \"10px\" }}\r\n                  id={index}\r\n                  onClick={noticeEdit}\r\n                >\r\n                  수정\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-outline-danger\"\r\n                  id={notice.notice_no}\r\n                  onClick={noticeDel}\r\n                >\r\n                  삭제\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <div className=\"paging\">\r\n        <Paging page={page} count={count} setPage={setPage1} />\r\n      </div>\r\n      <div className=\"viewModal\">\r\n        <Modal\r\n          show={show}\r\n          onHide={() => setShow(false)}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n          fullscreen=\"xxl-down\"\r\n          size=\"lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n              {modalContent?.notice_title}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup size=\"lg\" style={{ minHeight: \"400px\" }}>\r\n              <InputGroup.Text>내용</InputGroup.Text>\r\n              <FormControl\r\n                as=\"textarea\"\r\n                aria-label=\"With textarea\"\r\n                // onChange={(e) => {\r\n                //   setNoticeContent(e.target.value);\r\n                // }}\r\n                readOnly\r\n                value={modalContent?.notice_contents}\r\n              />\r\n            </InputGroup>\r\n            {/* <p>{modalContent?.notice_contents}</p> */}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <button\r\n              className=\"btn btn-outline-success\"\r\n              style={{ marginRight: \"10px\" }}\r\n              id={modalContent?.notice_no}\r\n              onClick={modalEdit}\r\n            >\r\n              수정\r\n            </button>\r\n            <button\r\n              className=\"btn btn-outline-success\"\r\n              id={modalContent?.notice_no}\r\n              onClick={noticeDel}\r\n            >\r\n              삭제\r\n            </button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n      <div className=\"writeModal\">\r\n        <Modal\r\n          show={writeShow}\r\n          onHide={() => setWriteShow(false)}\r\n          dialogClassName=\"modal-100w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n          // fullscreen=\"xxl-down\"\r\n          size=\"lg\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title\r\n              id=\"example-custom-modal-styling-title\"\r\n              style={{\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <div style={{ marginBottom: \"20px\" }}>\r\n                <DropdownButton\r\n                  variant=\"outline-secondary\"\r\n                  title=\"공지 종류\"\r\n                  id=\"input-group-dropdown-2\"\r\n                  align=\"end\"\r\n                  style={{\r\n                    display: \"inline\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                >\r\n                  <Dropdown.Item\r\n                    onClick={() => {\r\n                      setNoticeType(\"공지사항\");\r\n                    }}\r\n                  >\r\n                    공지사항\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    onClick={() => {\r\n                      setNoticeType(\"이벤트\");\r\n                    }}\r\n                  >\r\n                    이벤트\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    onClick={() => {\r\n                      setNoticeType(\"업데이트\");\r\n                    }}\r\n                  >\r\n                    업데이트\r\n                  </Dropdown.Item>\r\n                </DropdownButton>\r\n                {noticeType}\r\n              </div>\r\n              <InputGroup className=\"mb-3\" size=\"lg\" style={{ width: \"95%\" }}>\r\n                <InputGroup.Text id=\"basic-addon1\">제목</InputGroup.Text>\r\n                <FormControl\r\n                  placeholder=\"제목을 입력해주세요.\"\r\n                  aria-label=\"Username\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  onChange={(e) => {\r\n                    setNoticeTitle(e.target.value);\r\n                    //console.log(noticeTitle);\r\n                  }}\r\n                  value={noticeTitle}\r\n                />\r\n              </InputGroup>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup size=\"lg\" style={{ minHeight: \"400px\" }}>\r\n              <InputGroup.Text>내용</InputGroup.Text>\r\n              <FormControl\r\n                as=\"textarea\"\r\n                aria-label=\"With textarea\"\r\n                onChange={(e) => {\r\n                  setNoticeContent(e.target.value);\r\n                }}\r\n                value={noticeContent}\r\n              />\r\n            </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {editButton ? (\r\n              <button\r\n                className=\"btn btn-outline-success\"\r\n                style={{ marginRight: \"10px\" }}\r\n                id={modalContent?.notice_no}\r\n                onClick={noticeUpdate}\r\n              >\r\n                수정\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-outline-success\"\r\n                style={{ marginRight: \"10px\" }}\r\n                id={modalContent?.notice_no}\r\n                onClick={noticeWrite}\r\n              >\r\n                작성\r\n              </button>\r\n            )}\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n      <div className=\"replyModal\">\r\n        <Modal\r\n          show={replyShow}\r\n          onHide={() => setReplyShow(false)}\r\n          dialogClassName=\"modal-100w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n          // fullscreen=\"xxl-down\"\r\n          size=\"lg\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title\r\n              id=\"example-custom-modal-styling-title\"\r\n              style={{\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <div style={{ marginBottom: \"20px\" }}>댓글 리스트</div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Table bordered hover style={{ textAlign: \"center\" }}>\r\n              <thead className=\"table-success\">\r\n                <tr>\r\n                  <td>댓글 번호</td>\r\n                  <td>댓글 내용</td>\r\n                  <td>댓글 작성자</td>\r\n                  <td>삭제</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"table-light\">\r\n                {replyList?.map((list) => (\r\n                  <tr key={list.com_no}>\r\n                    <td>{list.com_no}</td>\r\n                    <td>{list.com_contents}</td>\r\n                    <td>{list.com_mem.member_nickName}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-danger\"\r\n                        id={list.com_no}\r\n                        onClick={replyDelete}\r\n                      >\r\n                        삭제\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Table,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl,\r\n  Dropdown,\r\n  DropdownButton,\r\n} from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paging from \"./pagination/Paging\";\r\n\r\nexport default function Board(props) {\r\n  console.log(\"board props\", props.userInfo);\r\n  const [list, setList] = useState({});\r\n  const [page, setPage] = useState(1);\r\n  const [count, setCount] = useState(1);\r\n  const pageSize = 5;\r\n  const [word, setWord] = useState();\r\n  const [requestData, setRequestData] = useState(new Date());\r\n  const [modalContent, setModalContent] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const [noticeType, setNoticeType] = useState(\"\");\r\n  const [noticeTitle, setNoticeTitle] = useState();\r\n  const [noticeContent, setNoticeContent] = useState();\r\n  const [noticeNo, setNoticeNo] = useState();\r\n  const [replyShow, setReplyShow] = useState();\r\n  const [replyList, setReplyList] = useState();\r\n\r\n  const [url, setUrl] = useState(\r\n    `http://localhost:9999/ta_back/admin/board/list?pageNo=${page}&pageSize=${pageSize}`\r\n  );\r\n\r\n  function setPage1(page) {\r\n    const listUrl = `http://localhost:9999/ta_back/admin/board/list?pageNo=${page}&pageSize=${pageSize}`;\r\n    const searchUrl = `http://localhost:9999/ta_back/admin/board/list/${word}?pageNo=${page}&pageSize=${pageSize}`;\r\n    // console.log(url);\r\n    // console.log(page);\r\n    if (word) {\r\n      setUrl(searchUrl);\r\n      setPage(page);\r\n    } else {\r\n      setUrl(listUrl);\r\n      setPage(page);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    // setLoading(true);\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"--->\", data);\r\n        //setRequestData(new Date());\r\n        setList(data);\r\n        setCount(data.lastRow);\r\n        // setLoginInfo(data.logininfo);\r\n        // console.log(\"로그인정보->\", loginInfo);\r\n        // setLoading(false);\r\n      });\r\n  }, [page, requestData]);\r\n\r\n  const replyView = (e) => {\r\n    const { id } = e.target;\r\n    const url = \"http://localhost:9999/ta_back/boardcomment/list/\" + id;\r\n    console.log(\"no=>\", url);\r\n\r\n    fetch(url, {\r\n      method: \"get\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"--->\", data);\r\n        setReplyList(data.boardcommentlist);\r\n        setReplyShow(true);\r\n        // setLoading(false);\r\n      });\r\n  };\r\n  const noticeDel = (e) => {\r\n    const { id } = e.target;\r\n    // console.log(\"=>\", id);\r\n    if (window.confirm(\"삭제 하시겠습니까?\")) {\r\n      const url = \"http://localhost:9999/ta_back/admin/board/\" + id;\r\n      fetch(url, {\r\n        method: \"DELETE\",\r\n        credentials: \"include\",\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          console.log(\"--->\", data);\r\n          setRequestData(new Date());\r\n          setShow(false);\r\n          // setLoginInfo(data.logininfo);\r\n          // console.log(\"로그인정보->\", loginInfo);\r\n          // setLoading(false);\r\n        });\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  const replyDelete = (e) => {\r\n    const { id } = e.target;\r\n    const url = \"http://localhost:9999/ta_back/boardcomment/\" + id;\r\n    console.log(\"no=>\", url);\r\n    if (window.confirm(\"삭제 하시겠습니까?\")) {\r\n      fetch(url, {\r\n        method: \"delete\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n\r\n        credentials: \"include\",\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          console.log(\"--->\", data);\r\n          if (data.status == 1) {\r\n            alert(\"삭제 성공\");\r\n            setReplyShow(false);\r\n          } else if (data.status == 0) {\r\n            alert(\"삭제 실패\", data.msg);\r\n          }\r\n          //setReplyList(data.list);\r\n          //setReplyShow(true);\r\n          // setLoading(false);\r\n        });\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h1>자유게시판</h1>\r\n      <Table hover>\r\n        <thead\r\n          className=\"table-info\"\r\n          style={{ fontSize: \"15pt\", fontWeight: \"700\" }}\r\n        >\r\n          <tr>\r\n            <td style={{ width: \"5%\" }}>번호</td>\r\n            <td style={{ width: \"5%\" }}>종류</td>\r\n            <td style={{ width: \"20%\" }}>제목</td>\r\n            <td style={{ width: \"15%\" }}>날짜</td>\r\n            <td style={{ width: \"5%\" }}>조회수</td>\r\n            <td style={{ width: \"5%\" }}>작성자</td>\r\n            <td style={{ width: \"15%\" }}>작업</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"table-light\">\r\n          {list.boardlist?.map((notice, index) => (\r\n            <tr className=\"table-light\" key={notice.board_no}>\r\n              <td>{notice.board_no}</td>\r\n              <td>{notice.board_type}</td>\r\n              <td>\r\n                <Link\r\n                  to=\"/\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    // console.log(\"notice=>\", notice);\r\n                    setShow(true);\r\n                    setModalContent(notice);\r\n                  }}\r\n                >\r\n                  {notice.board_title}\r\n                </Link>\r\n              </td>\r\n              <td>{notice.board_date}</td>\r\n              <td>{notice.board_views}</td>\r\n              <td>{notice.board_member.member_nickName}</td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-outline-success\"\r\n                  style={{ marginRight: \"10px\" }}\r\n                  id={notice.board_no}\r\n                  onClick={replyView}\r\n                >\r\n                  댓글\r\n                </button>\r\n\r\n                <button\r\n                  className=\"btn btn-outline-danger\"\r\n                  id={notice.board_no}\r\n                  onClick={noticeDel}\r\n                >\r\n                  삭제\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <div className=\"paging\">\r\n        <Paging page={page} count={count} setPage={setPage1} />\r\n      </div>\r\n      <div className=\"viewModal\">\r\n        <Modal\r\n          show={show}\r\n          onHide={() => setShow(false)}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n          fullscreen=\"xxl-down\"\r\n          size=\"lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n              {modalContent?.board_title}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup size=\"lg\" style={{ minHeight: \"400px\" }}>\r\n              <InputGroup.Text>내용</InputGroup.Text>\r\n              <FormControl\r\n                as=\"textarea\"\r\n                aria-label=\"With textarea\"\r\n                // onChange={(e) => {\r\n                //   setNoticeContent(e.target.value);\r\n                // }}\r\n                readOnly\r\n                value={modalContent?.board_contents}\r\n              />\r\n            </InputGroup>\r\n            {/* <p>{modalContent?.notice_contents}</p> */}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <button\r\n              className=\"btn btn-outline-success\"\r\n              id={modalContent?.board_no}\r\n              onClick={noticeDel}\r\n            >\r\n              삭제\r\n            </button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n      <div className=\"replyModal\">\r\n        <Modal\r\n          show={replyShow}\r\n          onHide={() => setReplyShow(false)}\r\n          dialogClassName=\"modal-100w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n          // fullscreen=\"xxl-down\"\r\n          size=\"lg\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title\r\n              id=\"example-custom-modal-styling-title\"\r\n              style={{\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <div style={{ marginBottom: \"20px\" }}>댓글 리스트</div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Table bordered hover style={{ textAlign: \"center\" }}>\r\n              <thead className=\"table-success\">\r\n                <tr>\r\n                  <td>댓글 번호</td>\r\n                  <td>댓글 내용</td>\r\n                  <td>댓글 작성자</td>\r\n                  <td>삭제</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"table-light\">\r\n                {replyList?.map((list) => (\r\n                  <tr key={list.com_no}>\r\n                    <td>{list.com_no}</td>\r\n                    <td>{list.com_contents}</td>\r\n                    <td>{list.com_member.member_nickName}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-danger\"\r\n                        id={list.com_no}\r\n                        onClick={replyDelete}\r\n                      >\r\n                        삭제\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Table, Modal, InputGroup, Spinner } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paging from \"./pagination/Paging\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nexport default function DebRecruit(props) {\r\n  console.log(\"DebRecruit props\", props.userInfo);\r\n\r\n  const [list, setList] = useState({});\r\n  const [page, setPage] = useState(1);\r\n  const [count, setCount] = useState(1);\r\n  const pageSize = 5;\r\n  const [word, setWord] = useState();\r\n  const [requestData, setRequestData] = useState(new Date());\r\n  const [modalContent, setModalContent] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const [noticeType, setNoticeType] = useState(\"\");\r\n  const [noticeTitle, setNoticeTitle] = useState();\r\n  const [noticeContent, setNoticeContent] = useState();\r\n  const [noticeNo, setNoticeNo] = useState();\r\n  const [replyShow, setReplyShow] = useState();\r\n  const [replyList, setReplyList] = useState();\r\n  const [approveShow, setApproveShow] = useState(false);\r\n  const [url, setUrl] = useState(\r\n    `http://localhost:9999/ta_back/debrecruit/list?pageNo=${page}&pageSize=${pageSize}`\r\n  );\r\n\r\n  function setPage1(page) {\r\n    const listUrl = `http://localhost:9999/ta_back/debrecruit/list?pageNo=${page}&pageSize=${pageSize}`;\r\n    const searchUrl = `http://localhost:9999/ta_back/debrecruit/list/${word}?pageNo=${page}&pageSize=${pageSize}`;\r\n    // console.log(url);\r\n    // console.log(page);\r\n    if (word) {\r\n      setUrl(searchUrl);\r\n      setPage(page);\r\n    } else {\r\n      setUrl(listUrl);\r\n      setPage(page);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    // setLoading(true);\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"--->\", data);\r\n        //setRequestData(new Date());\r\n        setList(data);\r\n        setCount(data.lastRow);\r\n        // setLoginInfo(data.logininfo);\r\n        // console.log(\"로그인정보->\", loginInfo);\r\n        // setLoading(false);\r\n      });\r\n  }, [page, requestData]);\r\n\r\n  const noticeDel = (e) => {\r\n    const { id } = e.target;\r\n    const url = \"http://localhost:9999/ta_back/debrecruit/delete/\";\r\n    console.log(\"no=>\", url);\r\n    if (window.confirm(\"삭제 하시겠습니까?\")) {\r\n      fetch(url, {\r\n        method: \"delete\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          debNo: id,\r\n        }),\r\n        credentials: \"include\",\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          console.log(\"--->\", data);\r\n          setRequestData(new Date());\r\n          setShow(false);\r\n          // setLoading(false);\r\n        });\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  const replyView = (e) => {\r\n    const { id } = e.target;\r\n\r\n    // console.log(\"=>\", id);\r\n    const url = \"http://localhost:9999/ta_back/resultlist/\" + id;\r\n    fetch(url, {\r\n      method: \"get\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"--->\", data);\r\n        setReplyList(data.commentlist);\r\n        setReplyShow(true);\r\n        // setLoginInfo(data.logininfo);\r\n        // console.log(\"로그인정보->\", loginInfo);\r\n        // setLoading(false);\r\n      });\r\n  };\r\n  const replyDelete = (e) => {\r\n    const { id } = e.target;\r\n    const url = \"http://localhost:9999/ta_back/resultlist/resultreply/\" + id;\r\n    console.log(\"no=>\", url);\r\n\r\n    fetch(url, {\r\n      method: \"delete\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"--->\", data);\r\n        if (data.status == 1) {\r\n          if (window.confirm(\"삭제 하시겠습니까?\")) {\r\n            setRequestData(new Date());\r\n            setReplyShow(false);\r\n          } else {\r\n            return false;\r\n          }\r\n        } else if (data.status == 0) {\r\n          alert(\"삭제 실패\", data.msg);\r\n        }\r\n        //setReplyList(data.list);\r\n        //setReplyShow(true);\r\n        // setLoading(false);\r\n      });\r\n  };\r\n\r\n  const aprove = (e) => {\r\n    const { id } = e.target;\r\n    const url = \"http://localhost:9999/ta_back/debrecruit/\" + id;\r\n    console.log(\"no=>\", url);\r\n\r\n    fetch(url, {\r\n      method: \"get\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"--->\", data);\r\n        if (data.debate.debate.debate_status === \"승인\") {\r\n          alert(\"이미 승인된 토론입니다.\");\r\n        } else if (\r\n          data.debate.detail[0].discussor?.member_no == null ||\r\n          data.debate.detail[1].discussor?.member_no == null\r\n        ) {\r\n          alert(\"토론자가 비었습니다.\");\r\n        } else {\r\n          setApproveShow(true);\r\n          setTimeout(() => {\r\n            setApproveShow(false);\r\n          }, 3000);\r\n          const url = \"http://localhost:9999/ta_back/admin/approve/\" + id;\r\n          console.log(\"no=>\", url);\r\n          fetch(url, {\r\n            method: \"put\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n\r\n            credentials: \"include\",\r\n          })\r\n            .then((res) => {\r\n              return res.json();\r\n            })\r\n            .then((data) => {\r\n              console.log(\"--->\", data);\r\n              alert(\"승인\");\r\n              setRequestData(new Date());\r\n            });\r\n        }\r\n      });\r\n  };\r\n  const disaprove = (e) => {\r\n    const { id } = e.target;\r\n    const url = \"http://localhost:9999/ta_back/admin/disapprove/\" + id;\r\n    console.log(\"no=>\", url);\r\n    fetch(url, {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"--->\", data);\r\n        alert(\"승인 취소\");\r\n        setRequestData(new Date());\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <h1>토론관리</h1>\r\n      <Table hover>\r\n        <thead\r\n          className=\"table-warning\"\r\n          style={{ fontSize: \"15pt\", fontWeight: \"700\" }}\r\n        >\r\n          <tr>\r\n            <td style={{ width: \"5%\" }}>번호</td>\r\n            <td style={{ width: \"15%\" }}>제목</td>\r\n            <td style={{ width: \"10%\" }}>날짜</td>\r\n            <td style={{ width: \"10%\" }}>토론시간</td>\r\n            <td style={{ width: \"15%\" }}>토론일자</td>\r\n            <td style={{ width: \"5%\" }}>작성자</td>\r\n            <td style={{ width: \"5%\" }}>상태</td>\r\n            <td colSpan=\"3\" style={{ width: \"20%\" }}>\r\n              작업\r\n            </td>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"table-light\">\r\n          {list.debatelist?.map((debate, index) => (\r\n            <tr className=\"table-light\" key={debate.debate_no}>\r\n              <td>{debate.debate_no}</td>\r\n\r\n              <td>\r\n                <Link\r\n                  to=\"/\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    // console.log(\"notice=>\", notice);\r\n                    setShow(true);\r\n                    setModalContent(debate);\r\n                  }}\r\n                >\r\n                  {debate.debate_topic}\r\n                </Link>\r\n              </td>\r\n              <td>{debate.debate_date}</td>\r\n              <td>{debate.debate_time}</td>\r\n              <td>{debate.debate_startDate}</td>\r\n              <td>{debate.debate_writer.member_nickName}</td>\r\n              <td>{debate.debate_status}</td>\r\n              <td>\r\n                {debate.debate_status === \"모집중\" ? (\r\n                  <button\r\n                    className=\"btn btn-outline-info\"\r\n                    style={{}}\r\n                    id={debate.debate_no}\r\n                    onClick={aprove}\r\n                  >\r\n                    승인\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    className=\"btn btn-outline-info\"\r\n                    style={{}}\r\n                    id={debate.debate_no}\r\n                    onClick={disaprove}\r\n                  >\r\n                    승인취소\r\n                  </button>\r\n                )}\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-outline-success\"\r\n                  style={{}}\r\n                  id={debate.debate_no}\r\n                  onClick={replyView}\r\n                >\r\n                  댓글\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-outline-danger\"\r\n                  id={debate.debate_no}\r\n                  onClick={noticeDel}\r\n                >\r\n                  삭제\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <div className=\"paging\">\r\n        <Paging page={page} count={count} setPage={setPage1} />\r\n      </div>\r\n      <div className=\"viewModal\">\r\n        <Modal\r\n          show={show}\r\n          onHide={() => setShow(false)}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n          fullscreen=\"xxl-down\"\r\n          size=\"lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n              {modalContent?.debate_topic}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup size=\"lg\" style={{ minHeight: \"400px\" }}>\r\n              {/* <InputGroup.Text>내용</InputGroup.Text> */}\r\n              {/* <FormControl\r\n                as=\"textarea\"\r\n                aria-label=\"With textarea\"\r\n                // onChange={(e) => {\r\n                //   setNoticeContent(e.target.value);\r\n                // }}\r\n                readOnly\r\n                value={modalContent?.debate_content}\r\n              /> */}\r\n              <div style={{ width: \"100%\", minHeight: \"300px\" }}>\r\n                <CKEditor\r\n                  editor={ClassicEditor}\r\n                  data={modalContent?.debate_content}\r\n                  config={{ toolbar: { items: [] } }}\r\n                  onReady={(editor) => {\r\n                    editor.isReadOnly = true;\r\n                    //setCkeditor(editor);\r\n                    //editor.isReadOnly = { readOnly };\r\n                    // You can store the \"editor\" and use when it is needed.\r\n                    //console.log(\"Editor is ready to use!\", editor);\r\n                  }}\r\n                />\r\n              </div>\r\n            </InputGroup>\r\n            {/* <p>{modalContent?.notice_contents}</p> */}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <button\r\n              className=\"btn btn-outline-success\"\r\n              id={modalContent?.board_no}\r\n              onClick={noticeDel}\r\n            >\r\n              삭제\r\n            </button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n      <div className=\"replyModal\">\r\n        <Modal\r\n          show={replyShow}\r\n          onHide={() => setReplyShow(false)}\r\n          dialogClassName=\"modal-100w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n          // fullscreen=\"xxl-down\"\r\n          size=\"lg\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title\r\n              id=\"example-custom-modal-styling-title\"\r\n              style={{\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <div style={{ marginBottom: \"20px\" }}>댓글 리스트</div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Table bordered hover style={{ textAlign: \"center\" }}>\r\n              <thead className=\"table-success\">\r\n                <tr>\r\n                  <td>댓글 번호</td>\r\n                  <td>댓글 내용</td>\r\n                  <td>댓글 작성자</td>\r\n                  <td>삭제</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"table-light\">\r\n                {replyList?.map((list) => (\r\n                  <tr key={list.com_no}>\r\n                    <td>{list.com_no}</td>\r\n                    <td>{list.com_contents}</td>\r\n                    <td>{list.com_mem.member_nickName}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-danger\"\r\n                        id={list.com_no}\r\n                        onClick={replyDelete}\r\n                      >\r\n                        삭제\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n      <Modal\r\n        show={approveShow}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        onHide={() => {\r\n          return false;\r\n        }}\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title\r\n            id=\"contained-modal-title-vcenter\"\r\n            style={{ textAlign: \"center\", width: \"100%\" }}\r\n          >\r\n            <h3>잠시만 기다려 주세요.</h3>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div style={{ textAlign: \"center\", margin: \"20px\" }}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n            <h2>\r\n              <br /> 토론자에게 승인 메일 발송중 입니다.\r\n            </h2>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","export default function DebBattle(props) {\r\n  console.log(\"DebBattle props\", props.userInfo);\r\n  return (\r\n    <>\r\n      <div>토론배틀</div>\r\n    </>\r\n  );\r\n}\r\n","export default function DebResult(props) {\r\n  console.log(\"DebResult props\", props.userInfo);\r\n  return (\r\n    <>\r\n      <div>토론결과</div>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Route, useHistory } from \"react-router-dom\";\r\nimport Notice from \"./Notice\";\r\nimport Board from \"./Board\";\r\nimport DebRecruit from \"./DebRecruit\";\r\nimport DebBattle from \"./DebBattle\";\r\nimport DebResult from \"./DebResult\";\r\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport \"./css/bootstrap.css\";\r\n\r\nexport default function AdminList(props) {\r\n  //console.log(props);\r\n  const [selectList, setSelectList] = useState(\"notice\");\r\n  const url = \"/ta_front/admin/\" + selectList;\r\n  const history = useHistory();\r\n  const select = (e) => {\r\n    // console.log(\"select=>\", e);\r\n    setSelectList(e);\r\n  };\r\n  useEffect(() => {\r\n    // console.log(\"Effect\", selectList);\r\n    history.push(url);\r\n  }, [url]);\r\n\r\n  return (\r\n    <>\r\n      <h1>관리자 {props.userInfo}님 환영합니다.</h1>\r\n      <div style={{ display: \"inline\", textAlign: \"right\" }}>\r\n        <h3>\r\n          게시판 선택\r\n          <DropdownButton\r\n            style={{ margin: \"20px 20px\" }}\r\n            id=\"dropdown-basic-button\"\r\n            title=\"게시판\"\r\n          >\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                select(\"notice\");\r\n              }}\r\n            >\r\n              공지사항\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                select(\"board\");\r\n              }}\r\n            >\r\n              자유게시판\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                select(\"debrecruite\");\r\n              }}\r\n            >\r\n              토론관리\r\n            </Dropdown.Item>\r\n            {/* <Dropdown.Item\r\n                onClick={() => {\r\n                  select(\"debbattle\");\r\n                }}\r\n              >\r\n                토론배틀\r\n              </Dropdown.Item> */}\r\n            {/* <Dropdown.Item\r\n                onClick={() => {\r\n                  select(\"debresult\");\r\n                }}\r\n              >\r\n                토론결과\r\n              </Dropdown.Item> */}\r\n          </DropdownButton>\r\n        </h3>\r\n      </div>\r\n      <div id=\"view\">\r\n        <Route path=\"/ta_front/admin/notice\">\r\n          <Notice userInfo={props.userInfo} />\r\n        </Route>\r\n        <Route path=\"/ta_front/admin/board\">\r\n          <Board userInfo={props.userInfo} />\r\n        </Route>\r\n        <Route path=\"/ta_front/admin/debrecruite\">\r\n          <DebRecruit userInfo={props.userInfo} />\r\n        </Route>\r\n        <Route path=\"/ta_front/admin/debbattle\">\r\n          <DebBattle userInfo={props.userInfo} />\r\n        </Route>\r\n        <Route path=\"/ta_front/admin/debresult\">\r\n          <DebResult userInfo={props.userInfo} />\r\n        </Route>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport AdminLogin from \"./component/AdminLogin\";\nimport AdminList from \"./component/AdminList\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [userInfo, setUserInfo] = useState();\n  //console.log(\"userInfo\", userInfo);\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/ta_front/admin.html\">\n              <AdminLogin setUserInfo={setUserInfo} />\n            </Route>\n            <Route path=\"/ta_front/admin\">\n              <AdminList userInfo={userInfo} />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./component/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}