{"version":3,"sources":["ApiService.js","component/pagination/DebatePaging.jsx","component/DebateBattleList.jsx","component/pagination/paginate.jsx","component/Timer.jsx","component/DebateBattleDetail.jsx","App.js","index.js"],"names":["AUDIENCE_URL","DEBATE_URL","DETAIL_URL","axios","get","withCredentials","params","deb_no","mem_no","post","put","audi_no","detail_no","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","totalPage","Math","ceil","pageGroup","last","first","prevButton","nextButton","pages","_","range","style","display","justifyContent","className","onClick","to","pathname","map","page","cursor","DebateBattleList","useState","deblist","setDebList","word","setWord","setCurpage","logininfo","setLogininfo","searchAlert","setSearchAlert","pagedDebate","items","pageNumber","startIndex","slice","take","value","paginate","deb_length","length","useEffect","ApiService","fetchDebates","then","res","data","list","Alert","show","variant","Heading","Button","border","textAlign","marginRight","fontSize","fontWeight","InputGroup","Text","id","FormControl","placeholder","onChange","e","target","marginLeft","result","filter","debate_topic","search","preventDefault","alert","Table","responsive","hover","width","debate","index","debate_no","state","debate_status","debate_time","debate_startDate","debate_endDate","padNumber","num","String","padStart","Timer","tempHour","hour","parseInt","tempMin","min","tempSec","sec","initialTime","useRef","interval","setHour","setMin","setSec","status","current","setInterval","clearInterval","DebateBattleDetail","location","debateDetail","setdebateDetail","member_nickName","name","room","topics","message","setMessage","messages","setMessages","messages2","setMessages2","clientRef","setClientRef","evid_A1","setEvid_A1","evid_A2","setEvid_A2","evid_A3","setEvid_A3","evid_B1","setEvid_B1","evid_B2","setEvid_B2","evid_B3","setEvid_B3","audience","setAudience","votecnt","agree","setAgree","disAgree","setDisAgree","neutrality","setNeutrality","startStatus","setStartState","fetchDiscussors","evi_one","evi_two","evi_three","member_no","fetchAudOneByTwo","addVote","console","log","sendMessage","JSON","stringify","server","handleChange","btn_no","setVote","vote_no","editVote","updateEvi","setTimeout","colSpan","Image","src","discussor","member_thumb","height","alt","roundedCircle","evi_no","setdata","editDetail","btn_a1","type","btn_a2","btn_a3","discuss","marginBottom","overflowY","flexDirection","i","item","padding","fontStyle","wordWrap","setStart","editDebate","params2","setEnd","color","readOnly","onKeyPress","key","btn_b1","btn_b2","btn_b3","url","onConnect","onDisconnect","onMessage","disagree","ddList","temp","push","ref","client","App","Container","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85ebc787.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst AUDIENCE_URL = \"http://localhost:9999/ta_back/debbattle/audience\";\r\nconst DEBATE_URL = \"http://localhost:9999/ta_back/debbattle/debate\";\r\nconst DETAIL_URL = \"http://localhost:9999/ta_back/debbattle/debatedetail\";\r\n\r\nclass ApiService {\r\n  /*\r\n        Audience\r\n    */\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience\r\n  fetchAudiences() {\r\n    return axios.get(AUDIENCE_URL, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience/one\r\n  // params : \"audi_no\"\r\n  fetchAudOneByPK(params) {\r\n    return axios.get(AUDIENCE_URL + \"/one\", params, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience/two?deb_no=숫자&mem_no=숫자\r\n  // params : \"deb_no\", \"mem_no\"\r\n  fetchAudOneByTwo(params) {\r\n    return axios.get(\r\n      AUDIENCE_URL + `/two?deb_no=${params.deb_no}&mem_no=${params.mem_no}`,\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience/vote?deb_no=숫자\r\n  // params : \"deb_no\"\r\n  fetchVoteCount(params) {\r\n    return axios.get(AUDIENCE_URL + `/vote?deb_no=${params.deb_no}`, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience\r\n  // params : \"deb_no\", \"mem_no\"\r\n  addVote(params) {\r\n    return axios.post(AUDIENCE_URL, params, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/audience/관중번호\r\n  // params : \"audi_no\", \"vote_no\"\r\n  editVote(params) {\r\n    return axios.put(AUDIENCE_URL + \"/\" + params.audi_no, params, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  /*\r\n        Debate\r\n    */\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debate\r\n  fetchDebates() {\r\n    return axios.get(DEBATE_URL, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debate/토론번호\r\n  fetchDebOne(deb_no) {\r\n    return axios.get(DEBATE_URL + \"/\" + deb_no, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debate/토론번호\r\n  // params : \"deb_no\", \"word\", \"setdata\"\r\n  editDebate(params) {\r\n    return axios.put(DEBATE_URL + \"/\" + params.deb_no, params);\r\n  }\r\n\r\n  /*\r\n        DebateDetail\r\n    */\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debatedetail/토론번호\r\n  fetchDiscussors(deb_no) {\r\n    return axios.get(DETAIL_URL + \"/\" + deb_no, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debatedetail/one\r\n  // params : \"deb_no\", \"discussor\"\r\n  fetchDetailOne(params) {\r\n    return axios.get(DETAIL_URL + \"/one\", params, { withCredentials: true });\r\n  }\r\n\r\n  // http://localhost:9999/ta_back/debbattle/debatedetail/상세번호\r\n  // params : \"detail_no\", \"word\", \"evi_no\", \"setdata\"\r\n  editDetail(params) {\r\n    return axios.put(DETAIL_URL + \"/\" + params.detail_no, params, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n}\r\n\r\nexport default new ApiService();\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Pagination = (props) => {\r\n  //const pageCount = 5; //한페이지 표시될 개수\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props; // 각각 아이템(영화목록) 개수, 한 페이지에 보여줄 아이템(영화목록) 개수\r\n  var totalPage = Math.ceil(itemsCount / pageSize); // 몇 페이지가 필요한지 계산 토탈페이지수\r\n  const pageGroup = Math.ceil(currentPage / pageSize); //한 페이지에 보여줄 페이지 그룹수\r\n\r\n  if (totalPage === 1) return null; // 1페이지 뿐이라면 페이지 수를 보여주지 않음\r\n\r\n  var last = pageGroup * pageSize; // 화면에 보여질 마지막 페이지 번호\r\n  if (last > totalPage) last = totalPage;\r\n  var first = last - (pageSize - 1); // 화면에 보여질 첫번째 페이지 번호\r\n  if (first < 1) first = 1;\r\n  // var next = last + 1;\r\n  // var prev = first - 1;\r\n  var prevButton = false;\r\n  if (currentPage == 1) {\r\n    prevButton = false;\r\n  } else {\r\n    prevButton = true;\r\n  }\r\n  var nextButton = false;\r\n  if (currentPage == totalPage) {\r\n    nextButton = false;\r\n  } else {\r\n    nextButton = true;\r\n  }\r\n  const pages = _.range(first, last + 1); // 마지막 페이지에 보여줄 컨텐츠를 위해 +1, https://lodash.com/docs/#range 참고\r\n  return (\r\n    <nav style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      {\" \"}\r\n      {/* VSCode 입력: nav>ul.pagination>li.page-item>a.page-link */}\r\n      <ul className=\"pagination\">\r\n        {prevButton && (\r\n          <li className=\"prev\">\r\n            <Link\r\n              className=\"page-link\"\r\n              onClick={() => onPageChange(currentPage - 1)}\r\n              to={{pathname: `/ta_front/debbattle.html`}}\r\n            >\r\n              &laquo;\r\n            </Link>\r\n          </li>\r\n        )}\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"} // Bootstrap을 이용하여 현재 페이지를 시각적으로 표시\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            {/* <Link className=\"page-link\" onClick={(e) => {e.preventDefault(); onPageChange(page)}} to={{pathname: `/`}}> */}\r\n            <Link className=\"page-link\" onClick={() => onPageChange(page)} to={{pathname: `/ta_front/debbattle.html`}}>\r\n              {page}\r\n            </Link>{\" \"}\r\n            {/* 페이지 번호 클릭 이벤트 처리기 지정 */}\r\n          </li>\r\n        ))}\r\n        {nextButton && (\r\n          <li className=\"next\">\r\n            <Link\r\n              className=\"page-link\"\r\n              // onClick={(e) => {e.preventDefault(); onPageChange(currentPage + 1);}}\r\n              onClick={() => onPageChange(currentPage + 1)}\r\n              to={{pathname: `/ta_front/debbattle.html`}}///\r\n            >\r\n              &raquo;\r\n            </Link>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import { useEffect, useState } from \"react\";\r\nimport { Button, Alert } from \"react-bootstrap\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport ApiService from \"../ApiService\";\r\n\r\nimport Pagination from \"./pagination/DebatePaging\";\r\nimport { paginate } from \"./pagination/paginate\";\r\n\r\nexport default function DebateBattleList(props) {\r\n  const [deblist, setDebList] = useState();\r\n  const [word, setWord] = useState();\r\n  const [currentPage, setCurpage] = useState(1);\r\n  const [logininfo, setLogininfo] = useState();\r\n  const [searchAlert, setSearchAlert] = useState(false);\r\n  // 페이징 기능\r\n  const pageSize = 5;\r\n  const pagedDebate = paginate(deblist, currentPage, pageSize);\r\n\r\n  const deb_length = deblist?.length;\r\n\r\n  function handlePageChange(page) {\r\n    setCurpage(page);\r\n  }\r\n\r\n  // 검색 기능\r\n  const search = (e) => {\r\n    setWord(e.target.value);\r\n  };\r\n\r\n  const btnsearch = (e) => {\r\n    if (word) {\r\n      setCurpage(1);\r\n      let result = [];\r\n\r\n      result = deblist.filter((data) => {\r\n        return data.debate_topic.search(word) !== -1;\r\n      });\r\n      setDebList(result);\r\n    } else {\r\n      e.preventDefault();\r\n      alert(\"검색어를 입력해주세요\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    ApiService.fetchDebates().then((res) => {\r\n      setDebList(res.data.list);\r\n      // console.log(props);\r\n      // props.setLoginInfo(res.data.logininfo);\r\n      setLogininfo(res.data.logininfo);\r\n    });\r\n  }, []);\r\n\r\n  //로그인 테스트\r\n  function login() {\r\n    // const mem = { member_social_no: \"118153287897731040607\" };\r\n    fetch(\r\n      \"http://localhost:9999/ta_back/member/login?socialNo=347856298374982379\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n\r\n        credentials: \"include\",\r\n      }\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setLogininfo(data.member);\r\n        console.log(data.member);\r\n        console.log(\"login--->\", data.member);\r\n      });\r\n  }\r\n\r\n  function login2() {\r\n    // const mem = { member_social_no: \"118153287897731040607\" };\r\n    fetch(\"http://localhost:9999/ta_back/member/login?socialNo=773598399242\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setLogininfo(data.member);\r\n        console.log(data.member.member_nickName);\r\n        console.log(\"login--->\", data.member);\r\n      });\r\n  }\r\n  function login3() {\r\n    // const mem = { member_social_no: \"118153287897731040607\" };\r\n    fetch(\"http://localhost:9999/ta_back/member/login?socialNo=1800199288\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        // console.log(\"로그인 : \", res.json());\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setLogininfo(data.member);\r\n        console.log(data.member.member_nickName);\r\n        console.log(\"login--->\", data.member);\r\n      });\r\n  }\r\n\r\n  function logout() {\r\n    // const mem = { member_social_no: \"118153287897731040607\" };\r\n    fetch(\"http://localhost:9999/ta_back/member/logout\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        member_social_no: \"118153287897731040607\",\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        // setLoginInfo(data.member);\r\n        console.log(\"logout--->\", data);\r\n      });\r\n  }\r\n  //로그인 테스트 끝\r\n\r\n  return (\r\n    <>\r\n      {/* <button onClick={login}>토론자 A 로그인</button>\r\n      <button onClick={login2}>토론자 B 로그인</button>\r\n      <button onClick={login3}>관중 로그인 </button>\r\n      <button onClick={logout}>로그아웃</button> */}\r\n      <Alert show={searchAlert} variant=\"danger\">\r\n        <Alert.Heading>로그인 후 입장하실 수 있습니다!</Alert.Heading>\r\n        <p>건전한 토론을 위해 소셜 로그인을 해주세요 ^__^</p>\r\n        <div className=\"d-flex justify-content-end\">\r\n          {\r\n            <Button\r\n              onClick={() => setSearchAlert(false)}\r\n              variant=\"outline-dark\"\r\n              style={{ border: \"none\" }}\r\n            >\r\n              Close\r\n            </Button>\r\n          }\r\n        </div>\r\n      </Alert>\r\n      <h2 style={{ display: \"flex\", justifyContent: \"center\" }}>토론 배틀</h2>\r\n      <div\r\n        style={{\r\n          textAlign: \"right\",\r\n          marginRight: \"10px\",\r\n          display: \"block\",\r\n        }}\r\n      >\r\n        <label style={{ fontSize: \"15pt\", fontWeight: \"600\" }}>\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n              검색\r\n            </InputGroup.Text>\r\n\r\n            <FormControl\r\n              aria-label=\"Default\"\r\n              aria-describedby=\"inputGroup-sizing-default\"\r\n              placeholder=\"검색할 단어를 입력\"\r\n              onChange={search}\r\n            />\r\n          </InputGroup>\r\n        </label>\r\n\r\n        <Button\r\n          style={{ marginLeft: \"10px\" }}\r\n          className=\"buttons\"\r\n          variant=\"success\"\r\n          onClick={btnsearch}\r\n        >\r\n          검색\r\n        </Button>\r\n      </div>\r\n      <Table responsive=\"xl\" hover>\r\n        <thead className=\"table-primary\">\r\n          <tr style={{ fontSize: \"14pt\" }}>\r\n            <th style={{ width: \"10%\" }}>번호</th>\r\n            <th style={{ width: \"20%\" }}>주제</th>\r\n            <th style={{ width: \"20%\" }}>현황</th>\r\n            <th style={{ width: \"10%\" }}>토론 시간</th>\r\n            <th style={{ width: \"20%\" }}>시작 시각</th>\r\n            <th style={{ width: \"20%\" }}>종료 시각</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"table-light\">\r\n          {pagedDebate?.map((debate, index) => (\r\n            <tr key={debate.debate_no}>\r\n              <td>{(currentPage - 1) * pageSize + index + 1}</td>\r\n              <td>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/ta_front/debbattle/${debate.debate_no}`,\r\n                    state: { debate: debate, logininfo: logininfo }, //\r\n                  }}\r\n                  onClick={(e) => {\r\n                    if (logininfo == null) {\r\n                      e.preventDefault();\r\n                      setSearchAlert(true);\r\n                      // alert(\"로그인 후 이용 가능합니다.\");\r\n                    }\r\n                  }}\r\n                >\r\n                  {debate.debate_topic}\r\n                </Link>\r\n              </td>\r\n              <td>{debate.debate_status}</td>\r\n              <td>{debate.debate_time + \"분\"}</td>\r\n              <td>{debate.debate_startDate}</td>\r\n              <td>{debate.debate_endDate}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <Pagination\r\n        itemsCount={deb_length} //\r\n        pageSize={pageSize}\r\n        currentPage={currentPage}\r\n        onPageChange={handlePageChange}\r\n      />\r\n    </>\r\n  );\r\n}","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize; // 자를 배열의 시작점\r\n\r\n  return _(items)\r\n    .slice(startIndex) // 시작점부터 배열을 자르되\r\n    .take(pageSize) // pageSize만큼의 배열을 취함\r\n    .value(); // lodash wrapper 객체를 regular 배열로 변환\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst padNumber = (num, length) => {\r\n  return String(num).padStart(length, '0');\r\n};\r\n\r\nconst Timer = (props) => {\r\n    // 아무것도 입력하지 않으면 undefined가 들어오기 때문에 유효성 검사부터..\r\n    const tempHour = props.hour ? parseInt(props.hour) : 0;\r\n    const tempMin = props.min ? parseInt(props.min) : 0;\r\n    const tempSec = props.sec ? parseInt(props.sec) : 0;\r\n\r\n    // 타이머를 초단위로 변환한 initialTime과 setInterval을 저장할 interval ref\r\n    const initialTime = useRef(tempHour * 60 * 60 + tempMin * 60 + tempSec);\r\n    const interval = useRef(null);\r\n\r\n    const [hour, setHour] = useState(padNumber(tempHour, 2));\r\n    const [min, setMin] = useState(padNumber(tempMin, 2));\r\n    const [sec, setSec] = useState(padNumber(tempSec, 2));\r\n\r\n    useEffect(() => {\r\n        if(props.status){\r\n            interval.current = setInterval(() => {\r\n                initialTime.current -= 1;\r\n                setHour(padNumber(parseInt(initialTime.current / 3600), 2));\r\n                setMin(padNumber(parseInt((initialTime.current % 3600) / 60), 2));\r\n                setSec(padNumber(parseInt(initialTime.current % 60), 2));\r\n            }, 1000);\r\n            return () => clearInterval(interval.current);\r\n        }\r\n    }, [props?.status]);\r\n\r\n    // 초가 변할 때만 실행되는 useEffect\r\n    // initialTime을 검사해서 0이 되면 interval을 멈춘다.\r\n    useEffect(() => {\r\n        if (initialTime.current <= 0) {\r\n            clearInterval(interval.current);\r\n        }\r\n    }, [sec]);\r\n\r\n    return (\r\n        <div>\r\n            {hour} : {min} : {sec}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timer;","import { useState, useEffect } from \"react\";\r\nimport { Table, button, Image } from \"react-bootstrap\";\r\nimport \"./css/battle.css\";\r\nimport ApiService from \"../ApiService\";\r\nimport SockJsClient from \"react-stomp\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Timer from \"./Timer\";\r\n\r\nexport default function DebateBattleDetail(props) {\r\n  const [debate] = useState(props?.location?.state.debate);\r\n  const [logininfo] = useState(props?.location?.state.logininfo);\r\n  const [debateDetail, setdebateDetail] = useState();\r\n\r\n  const [name] = useState(logininfo?.member_nickName);\r\n  const [room] = useState(debate.debate_no);\r\n  const [topics] = useState([`/topic/${room}`]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [messages2, setMessages2] = useState([]);\r\n  const [clientRef, setClientRef] = useState();\r\n\r\n  const [evid_A1, setEvid_A1] = useState(\"\");\r\n  const [evid_A2, setEvid_A2] = useState(\"\");\r\n  const [evid_A3, setEvid_A3] = useState(\"\");\r\n  const [evid_B1, setEvid_B1] = useState(\"\");\r\n  const [evid_B2, setEvid_B2] = useState(\"\");\r\n  const [evid_B3, setEvid_B3] = useState(\"\");\r\n\r\n  const [audience, setAudience] = useState([]);\r\n  const [votecnt, setVoteCnt] = useState();\r\n  const [agree, setAgree] = useState(0);\r\n  const [disAgree, setDisAgree] = useState(0);\r\n  const [neutrality, setNeutrality] = useState(0);\r\n  const [startStatus, setStartState] = useState(false);\r\n\r\n  useEffect(() => {\r\n    ApiService.fetchDiscussors(debate.debate_no).then((res) => {\r\n      setdebateDetail(res.data.list);\r\n      setEvid_A1(res.data.list[0].evi_one);\r\n      setEvid_A2(res.data.list[0].evi_two);\r\n      setEvid_A3(res.data.list[0].evi_three);\r\n      setEvid_B1(res.data.list[1].evi_one);\r\n      setEvid_B2(res.data.list[1].evi_two);\r\n      setEvid_B3(res.data.list[1].evi_three);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const params = {\r\n      deb_no: debate.debate_no, //\r\n      mem_no: logininfo?.member_no, //\r\n    };\r\n    ApiService.fetchAudOneByTwo(params).then((res) => {\r\n      if (res.data.audience == null) {\r\n        ApiService.addVote(params).then(() => {\r\n          console.log(\"audience 생성 완료\");\r\n          ApiService.fetchAudOneByTwo(params).then((res) => {\r\n            setAudience(res.data.audience);\r\n          });\r\n        });\r\n      } else {\r\n        setAudience(res.data.audience);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const sendMessage = () => {\r\n    clientRef.sendMessage(\r\n      `/app/sendMessage/${room}`,\r\n      JSON.stringify({\r\n        name: name,\r\n        message: message,\r\n        votecnt: votecnt,\r\n        server: false,\r\n      })\r\n    );\r\n    setMessage(\"\");\r\n  };\r\n\r\n  // 근거 등록\r\n  const handleChange = (e) => {\r\n    const btn_no = e.target.className;\r\n    if (btn_no == \"evidence_A1\") {\r\n      setEvid_A1(e.target.value);\r\n    } else if (btn_no == \"evidence_A2\") {\r\n      setEvid_A2(e.target.value);\r\n    } else if (btn_no == \"evidence_A3\") {\r\n      setEvid_A3(e.target.value);\r\n    } else if (btn_no == \"evidence_B1\") {\r\n      setEvid_B1(e.target.value);\r\n    } else if (btn_no == \"evidence_B2\") {\r\n      setEvid_B2(e.target.value);\r\n    } else if (btn_no == \"evidence_B3\") {\r\n      setEvid_B3(e.target.value);\r\n    }\r\n  };\r\n\r\n  const btn_a1 = (e) => {\r\n    if (debateDetail[0].discussor.member_nickName == name) {\r\n      const params = {\r\n        detail_no: debateDetail[0].detail_no,\r\n        word: \"evidence\",\r\n        evi_no: 1,\r\n        setdata: evid_A1,\r\n      };\r\n\r\n      ApiService.editDetail(params);\r\n\r\n      alert(\"수정이 완료되었습니다.\");\r\n    } else {\r\n      alert(\"토론자 A만 수정이 가능합니다.\");\r\n    }\r\n    updateEvi(e);\r\n  };\r\n\r\n  const btn_a2 = (e) => {\r\n    if (debateDetail[0].discussor.member_nickName == name) {\r\n      const params = {\r\n        detail_no: debateDetail[0].detail_no,\r\n        word: \"evidence\",\r\n        evi_no: 2,\r\n        setdata: evid_A2,\r\n      };\r\n\r\n      ApiService.editDetail(params);\r\n\r\n      alert(\"수정이 완료되었습니다.\");\r\n    } else {\r\n      alert(\"토론자 A만 수정이 가능합니다.\");\r\n    }\r\n    updateEvi(e);\r\n  };\r\n\r\n  const btn_a3 = (e) => {\r\n    if (debateDetail[0].discussor.member_nickName == name) {\r\n      const params = {\r\n        detail_no: debateDetail[0].detail_no,\r\n        word: \"evidence\",\r\n        evi_no: 3,\r\n        setdata: evid_A3,\r\n      };\r\n\r\n      ApiService.editDetail(params);\r\n\r\n      alert(\"수정이 완료되었습니다.\");\r\n    } else {\r\n      alert(\"토론자 A만 수정이 가능합니다.\");\r\n    }\r\n    updateEvi(e);\r\n  };\r\n\r\n  const btn_b1 = (e) => {\r\n    if (debateDetail[1].discussor.member_nickName == name) {\r\n      const params = {\r\n        detail_no: debateDetail[1].detail_no,\r\n        word: \"evidence\",\r\n        evi_no: 1,\r\n        setdata: evid_B1,\r\n      };\r\n\r\n      ApiService.editDetail(params);\r\n\r\n      alert(\"수정이 완료되었습니다.\");\r\n    } else {\r\n      alert(\"토론자 B만 수정이 가능합니다.\");\r\n    }\r\n    updateEvi(e);\r\n  };\r\n\r\n  const btn_b2 = (e) => {\r\n    if (debateDetail[1].discussor.member_nickName == name) {\r\n      const params = {\r\n        detail_no: debateDetail[1].detail_no,\r\n        word: \"evidence\",\r\n        evi_no: 2,\r\n        setdata: evid_B2,\r\n      };\r\n\r\n      ApiService.editDetail(params);\r\n\r\n      alert(\"수정이 완료되었습니다.\");\r\n    } else {\r\n      alert(\"토론자 B만 수정이 가능합니다.\");\r\n    }\r\n    updateEvi(e);\r\n  };\r\n\r\n  const btn_b3 = (e) => {\r\n    if (debateDetail[1].discussor.member_nickName == name) {\r\n      const params = {\r\n        detail_no: debateDetail[1].detail_no,\r\n        word: \"evidence\",\r\n        evi_no: 3,\r\n        setdata: evid_B3,\r\n      };\r\n\r\n      ApiService.editDetail(params);\r\n\r\n      alert(\"수정이 완료되었습니다.\");\r\n    } else {\r\n      alert(\"토론자 B만 수정이 가능합니다.\");\r\n    }\r\n    updateEvi(e);\r\n  };\r\n\r\n  // 투표 Update\r\n  const setVote = (e) => {\r\n    console.log(e.target.value);\r\n    setMessage(\"\");\r\n    const params = {\r\n      audi_no: audience.audi_no,\r\n      vote_no: e.target.value, //\r\n    };\r\n    console.log(params);\r\n    ApiService.editVote(params).then((res) => {\r\n      console.log(\"투표 수정 완료\");\r\n      updateEvi(e);\r\n      alert(\"투표되었습니다.\");\r\n    });\r\n  };\r\n\r\n  const updateEvi = (e) => {\r\n    setTimeout(() => {\r\n      clientRef.sendMessage(\r\n        `/app/sendMessage/${room}`,\r\n        JSON.stringify({\r\n          name: null,\r\n          message: null,\r\n        })\r\n      );\r\n    }, 1000);\r\n  };\r\n\r\n  // 시작 버튼 클릭\r\n  const setStart = (e) => {\r\n    if (\r\n      debateDetail[0].discussor.member_nickName == name ||\r\n      debateDetail[1].discussor.member_nickName == name\r\n    ) {\r\n      // http://localhost:9999/ta_back/debbattle/debatedetail/상세번호\r\n      // params : \"detail_no\", \"word\", \"evi_no\", \"setdata\"\r\n      const params = {\r\n        detail_no: debateDetail[0].detail_no,\r\n        word: \"intime\", //\r\n      };\r\n      ApiService.editDetail(params).then(() => {\r\n        alert(\"토론이 시작되었습니다.\");\r\n        // setStartState((startStatus) => !startStatus);\r\n        setStartState(true);\r\n      });\r\n    } else {\r\n      alert(\"토론자만 시작 가능합니다.\");\r\n    }\r\n  };\r\n\r\n  // 종료 버튼 클릭\r\n  const setEnd = (e) => {\r\n    if (\r\n      debateDetail[0].discussor.member_nickName == name ||\r\n      debateDetail[1].discussor.member_nickName == name\r\n    ) {\r\n      const params = {\r\n        deb_no: debate.debate_no,\r\n        word: \"enddate\",\r\n      };\r\n      ApiService.editDebate(params).then(() => {\r\n        alert(\"토론이 종료되었습니다.\");\r\n        const params2 = {\r\n          deb_no: debate.debate_no,\r\n          word: \"status\",\r\n          setdata: \"종료\",\r\n        };\r\n        ApiService.editDebate(params2);\r\n        setStartState(false);\r\n      });\r\n    } else {\r\n      alert(\"토론자만 종료 가능합니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <div className=\"discussor1\">\r\n          <Table hover>\r\n            <thead className=\"table-info\">\r\n              <tr>\r\n                <td colSpan=\"2\">\r\n                  <div>\r\n                    <Image\r\n                      src={\r\n                        debateDetail\r\n                          ? debateDetail[0].discussor.member_thumb\r\n                          : \"\"\r\n                      }\r\n                      style={{ height: \"120px\", marginLeft: \"20px\" }}\r\n                      alt={\"썸네일\"}\r\n                      roundedCircle\r\n                    />\r\n                    <br></br>\r\n                    토론자 A :{\" \"}\r\n                    {debateDetail\r\n                      ? debateDetail[0].discussor.member_nickName\r\n                      : \"\"}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table-light\">\r\n              <tr>\r\n                <td>근거 1</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-info\"\r\n                    onClick={() => {\r\n                      btn_a1();\r\n                    }}\r\n                  >\r\n                    등록\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"evidence_A\" colSpan=\"2\">\r\n                  <textarea\r\n                    className=\"evidence_A1\"\r\n                    value={evid_A1}\r\n                    type=\"text\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>근거 2</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-info\"\r\n                    onClick={() => {\r\n                      btn_a2();\r\n                    }}\r\n                  >\r\n                    등록\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"evidence_A\" colSpan=\"2\">\r\n                  <textarea\r\n                    className=\"evidence_A2\"\r\n                    value={evid_A2}\r\n                    type=\"text\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>근거 3</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-info\"\r\n                    onClick={() => {\r\n                      btn_a3();\r\n                    }}\r\n                  >\r\n                    등록\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"evidence_A\" colSpan=\"2\">\r\n                  <textarea\r\n                    className=\"evidence_A3\"\r\n                    value={evid_A3}\r\n                    type=\"text\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n\r\n        <div className=\"chatting\">\r\n          <Table hover>\r\n            <thead className=\"table-success\">\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  <div id=\"\" className=\"battle_topic\">\r\n                    {debate.debate_topic}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table-light\">\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  <div id=\"\" className=\"battle-timer\">\r\n                    {debate.debate_time}분\r\n                    <Timer\r\n                      hour={debate.debate_time / 60}\r\n                      min={debate.debate_time % 60}\r\n                      sec={0}\r\n                      status={startStatus}\r\n                    />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  <div className=\"battle_vote\">\r\n                    {/* <div>{messages}</div> */}\r\n                    {debateDetail ? debateDetail[0].discuss : \"\"} {agree} 표 /\r\n                    중립 {neutrality} 표 /{\" \"}\r\n                    {debateDetail ? debateDetail[1].discuss : \"\"} {disAgree}표\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  <div style={{ marginBottom: \"5px\" }}>토론자 채팅</div>\r\n                  <div\r\n                    id=\"discussorWindow\"\r\n                    style={{\r\n                      height: \"145px\",\r\n                      overflowY: \"auto\",\r\n                      display: \"flex\",\r\n                      flexDirection: \"column-reverse\",\r\n                    }}\r\n                  >\r\n                    <div style={{}}>\r\n                      {messages.map((e, i) => {\r\n                        return debateDetail &&\r\n                          e.name ==\r\n                            debateDetail[0]?.discussor.member_nickName ? (\r\n                          <div className=\"discussor1message\" key={i}>\r\n                            {e.server ? (\r\n                              <Grid\r\n                                item\r\n                                style={{\r\n                                  padding: \"10px\",\r\n                                  fontStyle: \"italic\",\r\n                                  textAlign: \"center\",\r\n                                }}\r\n                                key={i}\r\n                              >\r\n                                <Typography style={{ fontWeight: \"800\" }}>\r\n                                  {e.message}\r\n                                </Typography>\r\n                              </Grid>\r\n                            ) : (\r\n                              <Grid\r\n                                item\r\n                                style={{\r\n                                  padding: \"10px\",\r\n                                  wordWrap: \"break-word\",\r\n                                }}\r\n                                key={i}\r\n                              >\r\n                                <Typography>\r\n                                  {e.name}\r\n                                  <br />\r\n                                  {e.message}\r\n                                </Typography>\r\n                              </Grid>\r\n                            )}\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"discussor2message\" key={i}>\r\n                            {e.server ? (\r\n                              <Grid\r\n                                item\r\n                                style={{\r\n                                  padding: \"10px\",\r\n                                  fontStyle: \"italic\",\r\n                                  textAlign: \"center\",\r\n                                }}\r\n                                key={i}\r\n                              >\r\n                                <Typography style={{ fontWeight: \"800\" }}>\r\n                                  {e.message}\r\n                                </Typography>\r\n                              </Grid>\r\n                            ) : (\r\n                              <Grid\r\n                                item\r\n                                style={{\r\n                                  padding: \"10px\",\r\n                                  wordWrap: \"break-word\",\r\n                                }}\r\n                                key={i}\r\n                              >\r\n                                <Typography>\r\n                                  {e.name}\r\n                                  <br />\r\n                                  {e.message}\r\n                                </Typography>\r\n                              </Grid>\r\n                            )}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  <div className=\"set_time-group\">\r\n                    <button\r\n                      id=\"start\"\r\n                      className=\"btn btn-primary btn_settime\"\r\n                      onClick={() => {\r\n                        setStart();\r\n                      }}\r\n                    >\r\n                      시작\r\n                    </button>\r\n                    <button\r\n                      id=\"end\"\r\n                      className=\"btn btn-secondary btn_settime\"\r\n                      onClick={() => {\r\n                        setEnd();\r\n                      }}\r\n                    >\r\n                      종료\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  <div>중계방 채팅</div>\r\n                  <div\r\n                    id=\"audienceWindow\"\r\n                    style={{\r\n                      height: \"140px\",\r\n                      overflowY: \"auto\",\r\n                      display: \"flex\",\r\n                      flexDirection: \"column-reverse\",\r\n                    }}\r\n                  >\r\n                    <div style={{ textAlign: \"left\" }}>\r\n                      {messages2.map((e, i) => {\r\n                        return (\r\n                          <div key={i}>\r\n                            {e.server ? (\r\n                              <Grid\r\n                                item\r\n                                style={{\r\n                                  padding: \"10px\",\r\n                                  fontStyle: \"italic\",\r\n                                }}\r\n                                key={i}\r\n                              >\r\n                                <Typography\r\n                                  style={{\r\n                                    fontWeight: \"800\",\r\n                                    textAlign: \"center\",\r\n                                  }}\r\n                                >\r\n                                  {e.message}\r\n                                </Typography>\r\n                              </Grid>\r\n                            ) : (\r\n                              <Grid\r\n                                item\r\n                                style={{\r\n                                  padding: \"10px\",\r\n                                  wordWrap: \"break-word\",\r\n                                }}\r\n                                key={i}\r\n                              >\r\n                                <Typography>\r\n                                  {e.name}\r\n                                  <br />\r\n                                  {e.message}\r\n                                </Typography>\r\n                              </Grid>\r\n                            )}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  <div className=\"vote_div_group\">\r\n                    <button\r\n                      className=\"btn btn-info btn_vote\"\r\n                      value=\"1\"\r\n                      onClick={(e) => {\r\n                        setVote(e);\r\n                      }}\r\n                    >\r\n                      {debateDetail ? debateDetail[0].discuss : \"\"}\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-success btn_vote\"\r\n                      value=\"2\"\r\n                      onClick={(e) => {\r\n                        setVote(e);\r\n                      }}\r\n                    >\r\n                      중립\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-danger btn_vote\"\r\n                      value=\"3\"\r\n                      onClick={(e) => {\r\n                        setVote(e);\r\n                      }}\r\n                    >\r\n                      {debateDetail ? debateDetail[1].discuss : \"\"}\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    id=\"user\"\r\n                    type=\"text\"\r\n                    value={logininfo?.member_nickName}\r\n                    style={{\r\n                      width: \"70px\",\r\n                      border: \"none\",\r\n                      fontSize: \"10pt\",\r\n                      fontStyle: \"italic\",\r\n                      fontWeight: \"800\",\r\n                      color: \"darkslategrey\",\r\n                    }}\r\n                    readOnly=\"readonly\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    id=\"textMessage\"\r\n                    type=\"text\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={message}\r\n                    onChange={(e) => {\r\n                      setMessage(e.target.value);\r\n                    }}\r\n                    onKeyPress={(e) => {\r\n                      console.log(e.key);\r\n                      if (e.key == \"Enter\") {\r\n                        sendMessage();\r\n                      }\r\n                    }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-success\"\r\n                    onClick={() => {\r\n                      sendMessage();\r\n                    }}\r\n                  >\r\n                    전송\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n\r\n        <div className=\"discussor2\">\r\n          <Table hover>\r\n            <thead className=\"table-secondary\">\r\n              <tr>\r\n                <td colSpan=\"2\">\r\n                  <div>\r\n                    <Image\r\n                      src={\r\n                        debateDetail\r\n                          ? debateDetail[1].discussor.member_thumb\r\n                          : \"\"\r\n                      }\r\n                      style={{ height: \"120px\", marginLeft: \"20px\" }}\r\n                      alt={\"썸네일\"}\r\n                      roundedCircle\r\n                    />\r\n                    <br></br>\r\n                    토론자 B :{\" \"}\r\n                    {debateDetail\r\n                      ? debateDetail[1].discussor.member_nickName\r\n                      : \"\"}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table-light\">\r\n              <tr>\r\n                <td>근거 1</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-info\"\r\n                    onClick={() => {\r\n                      btn_b1();\r\n                    }}\r\n                  >\r\n                    등록\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"evidence_B\" colSpan=\"2\">\r\n                  <textarea\r\n                    className=\"evidence_B1\"\r\n                    value={evid_B1}\r\n                    type=\"text\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>근거 2</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-info\"\r\n                    onClick={() => {\r\n                      btn_b2();\r\n                    }}\r\n                  >\r\n                    등록\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"evidence_B\" colSpan=\"2\">\r\n                  <textarea\r\n                    className=\"evidence_B2\"\r\n                    value={evid_B2}\r\n                    type=\"text\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>근거 3</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-info\"\r\n                    onClick={() => {\r\n                      btn_b3();\r\n                    }}\r\n                  >\r\n                    등록\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"evidence_B\" colSpan=\"2\">\r\n                  <textarea\r\n                    className=\"evidence_B3\"\r\n                    value={evid_B3}\r\n                    type=\"text\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n      <SockJsClient\r\n        url=\"http://localhost:9999/ta_back/websocket-chat/\"\r\n        topics={topics}\r\n        onConnect={() => {\r\n          console.log(\"connected\");\r\n          clientRef.sendMessage(\r\n            `/app/addUser/${room}`,\r\n            JSON.stringify({\r\n              name: name,\r\n              message: name + \" has connected!\",\r\n              votecnt: votecnt,\r\n              server: true,\r\n            })\r\n          );\r\n        }}\r\n        onDisconnect={() => {\r\n          console.log(\"disconnected\");\r\n        }}\r\n        onMessage={(e) => {\r\n          console.log(\"e\", e);\r\n          //투표 반영\r\n          if (e.votecnt) {\r\n            setAgree(e.votecnt.agree);\r\n            setNeutrality(e.votecnt.neutrality);\r\n            setDisAgree(e.votecnt.disagree);\r\n          }\r\n          //근거 업데이트\r\n          if (e.name == null) {\r\n            console.log(\"name null\");\r\n            console.log(\"e ddlist:\", e.ddList);\r\n            setEvid_A1(e.ddList[0].evi_one);\r\n            setEvid_A2(e.ddList[0].evi_two);\r\n            setEvid_A3(e.ddList[0].evi_three);\r\n            setEvid_B1(e.ddList[1].evi_one);\r\n            setEvid_B2(e.ddList[1].evi_two);\r\n            setEvid_B3(e.ddList[1].evi_three);\r\n          } // 토론자일 경우\r\n          else if (\r\n            e.name == debateDetail[0].discussor.member_nickName ||\r\n            e.name == debateDetail[1].discussor.member_nickName\r\n          ) {\r\n            const temp = [...messages];\r\n            temp.push(e);\r\n            setMessages(temp);\r\n          }\r\n          // 관중일 경우\r\n          else {\r\n            const temp = [...messages2];\r\n            temp.push(e);\r\n            setMessages2(temp);\r\n          }\r\n        }}\r\n        ref={(client) => {\r\n          setClientRef(client);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import './App.css';\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport DebateBattleList from './component/DebateBattleList';\r\nimport DebateBattleDetail from './component/DebateBattleDetail';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Container>\r\n          <Switch>\r\n            <Route path=\"/ta_front/debbattle.html\" component={DebateBattleList}>\r\n            </Route>\r\n            <Route path=\"/ta_front/debbattle/:no\" component={DebateBattleDetail}>\r\n            </Route>\r\n          </Switch>\r\n        </Container>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\";\r\nimport App from './App';\r\nimport \"./component/css/bootstrap.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}