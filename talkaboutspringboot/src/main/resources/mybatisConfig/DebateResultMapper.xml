<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.talkabout.dto.DebateResultMapper">
	<!-- adLogin -->
	<select id="selectAll" resultType="debateSungho">
		SELECT * FROM debate WHERE debate_status = '종료'
	</select>

	<select id="selectByNum" parameterType="int" resultType="debate">
		SELECT * FROM debate WHERE DEBATE_NO = #{DebateNum}
	</select>

	<select id="detailselectByNo" parameterType="int"
		resultType="debatedetail">
		SELECT * FROM DEBATEDETAIL WHERE DETAIL_DEB = #{detail_DebateNum}
	</select>
	<select id="Memberselect" parameterType="int"
		resultType="member">
		select * from member where Member_no =#{Member_num}
	</select>

	<resultMap id="debateSunghoResultmap" type="debatesungho"
		autoMapping="true">
		<id column="debate_no" property="debate_no" />
		<association property="debate_mem" javaType="member"
			autoMapping="true">
		</association>
		<collection property="detail_list"
			ofType="debatedetailsungho" autoMapping="true">
			<association property="discussor_mem" javaType="member"
				autoMapping="true">
			</association>
		</collection>
	</resultMap>
	<select id="sunghoDebateSelectByNo" parameterType="int"
		resultMap="debateSunghoResultmap">
		select
		d.*,
		m.*,
		dt.*,
		m2.*,
		m2.MEMBER_NICKNAME as debate_nickname,
		m2.MEMBER_THUMB as debate_thambnail,
		(select count(*) from debatelike where deblike_deb = #{debate_no}) as
		like_count
		from DEBATE d left join MEMBER m ON d.DEBATE_WRITER = m.MEMBER_NO
		left join DEBATEDETAIL dt on dt.DETAIL_Deb = d.debate_no
		left join member m2 on dt.DISCUSSOR = m2.member_no
		WHERE d.DEBATE_NO =#{debate_no}
		<!-- order by dc.com_no -->
	</select>

	<resultMap id="debateSunghoResultmap2" type="debatesungho"
		autoMapping="true">
		<id column="debate_no" property="debate_no" />
		<association property="debate_writer" javaType="member"
			autoMapping="true">
		</association>
	</resultMap>

	<select id="getlistWithPaging"
		resultMap="debateSunghoResultmap2">
<![CDATA[
    SELECT  *
FROM ( SELECT ROWNUM AS RNUM, debate.* FROM debate where debate_status = '종료' ORDER BY DEBATE_NO DESC) deb JOIN Member mem ON(deb.DEBATE_WRITER = mem.member_no)
WHERE RNUM BETWEEN ((#{page_num}-1)*#{amount}+1) AND (#{page_num} * #{amount})
 ]]>
	</select>

	<insert id="insertComment" parameterType="debatecommentsungho">
		insert into DEBATECOMMENT values
		(DC_SEQ.NEXTVAL,#{com_deb},'${com_contents}',sysdate,#{member_no})
	</insert>

	<delete id="deleteComment" parameterType="int">
		delete debatecomment where com_no =#{com_no}
	</delete>

	<resultMap id="debatecommentsunghoResultmap"
		type="debatecommentsungho" autoMapping="true">
		<id column="com_no" property="com_no" />
		<association property="com_mem" javaType="member"
			autoMapping="true">
		</association>
	</resultMap>

	<select id="GetListComment" parameterType="int"
		resultMap="debatecommentsunghoResultmap">
		select *
		from DEBATECOMMENT
		left join member on debatecomment.com_mem = member.MEMBER_NO
		where com_deb=#{com_deb}
		order by com_no
	</select>
	<select id="GetVoteResult_left" parameterType="int"
		resultType="int">
		select count(*) as discuss_left from AUDIENCE where audi_deb =#{deb_no} and
		vote =1
	</select>
	<select id="GetVoteResult_right" parameterType="int"
		resultType="int">
		select count(*) as discuss_left from AUDIENCE where audi_deb =#{deb_no} and
		vote =3
	</select>
	<select id="GetVoteResult_middle" parameterType="int"
		resultType="int">
		select count(*) as discuss_left from AUDIENCE where audi_deb =#{deb_no} and
		vote =2
	</select>


	<resultMap id="DebateSunghobyword" type="debatesungho"
		autoMapping="true">
		<id column="debate_no" property="debate_no" />
		<association property="debate_writer" javaType="member"
			autoMapping="true">
		</association>
	</resultMap>
	<select id="Getlistbyword" parameterType="string"
		resultMap="DebateSunghobyword">
		select * from debate
		left join member on member.MEMBER_NO = debate.debate_writer
		where debate_topic like '%${word}%' and debate_status = '종료'
		ORDER BY debate_no desc
	</select>

	<!-- 글쓰기, 답글쓰기 -->
	<!-- <insert id="insert" parameterType="repboard"> INSERT INTO repboard(board_no, 
		parent_no, board_id, board_title, board_content, board_viewcount) VALUES 
		(board_seq.NEXTVAL, #{parentNo}, #{boardC.id}, #{boardTitle}, #{boardContent}, 
		0) </insert> -->

	<!-- 검색 -->
	<!-- <select id="selectAll" resultType="repboard"> SELECT level, repboard.*, 
		board_id "boardC.id" FROM repboard START WITH parent_no = 0 CONNECT BY PRIOR 
		board_no = parent_no ORDER SIBLINGS BY board_no DESC </select> -->

	<!-- 단어로 검색 -->
	<!-- <select id="selectByWord" resultType="repboard"> SELECT repboard.*, 
		board_id "boardC.id" FROM repboard WHERE board_title LIKE '%${word}%' OR 
		board_content LIKE '%${word}%' </select> -->

	<!-- 게시글 번호로 검색 -->
	<!-- <select id="selectByNo" parameterType="int" resultType="repboard"> 
		SELECT repboard.*, board_id "boardC.id" FROM repboard WHERE board_no = '${boardNo}' 
		</select> -->

	<!-- 조회수 증가 -->
	<!-- <update id="plusViewcount"> UPDATE repboard SET board_viewcount = board_viewcount+1 
		WHERE board_no=#{boardNo} </update> -->

	<!-- 글수정 -->
	<!-- <update id="update" parameterType="repboard"> UPDATE repboard SET board_title=#{boardTitle},board_content 
		= #{boardContent} WHERE board_no = #{boardNo} AND board_id = #{boardC.id} 
		</update> -->

	<!-- 글삭제 -->
	<!-- <delete id="deleteWrite" parameterType="repboard"> DELETE FROM repboard 
		WHERE board_no = #{boardNo} AND board_id=#{boardC.id} </delete> -->

	<!-- 댓글삭제 -->
	<!-- <delete id="deleteReply" parameterType="int"> DELETE FROM repboard 
		WHERE board_no IN( SELECT board_no FROM ( SELECT rownum r, a.* FROM ( SELECT 
		* FROM repboard ORDER BY board_no desc ) a START WITH parent_no = #{board_no} 
		CONNECT BY PRIOR board_no = parent_no ) ) </delete> -->

</mapper>