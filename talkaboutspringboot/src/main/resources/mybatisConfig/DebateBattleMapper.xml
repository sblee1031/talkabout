<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTDMapper3.0//EN" 
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.talkabout.dto.DebateBattleMapper">	
	<resultMap id="debateResultMap" type="debate"  autoMapping="true">
			<association javaType="member" property="debate_writer" autoMapping="true"></association>
	</resultMap>
	<resultMap id="ddResultMap" type="debatedetail"  autoMapping="true">
			<association javaType="member" property="discussor" autoMapping="true"></association>
	</resultMap>
	<!-- column은 DB의 출력하는 칼럼명, property는 Key값 -->
	<resultMap type="HashMap" id="cntResulMap">
		<id column="vote" property="vote" />
		<id column="cnt" property="cnt" />
	</resultMap>
	
	<!-- 
		Audience
		- selectAllAud : 전체 리스트 출력
		- selectByAudNo : selectOne By PK
		- selectByDeb  : selectOne By 토론번호(deb_no), 회원번호(mem_no)
		- selectCnt : 해당 토론에 대한 각 투표수 카운트 By 토론번호(deb_no), 투표번호(vote_no) 
		- insertVote ㅣ 멤버가 처음 토론참여 시 Audience 행 추가 By 토론번호(deb_no), 회원번호(mem_no) / vote default 2 
		- updateVote : 투표 버튼을 클릭 시 해당 vote 값으로 update By Audience 객체
	-->
	<select id="selectAllAud" resultType="com.talkabout.dto.Audience">
    	SELECT * 
    	FROM Audience
    	ORDER BY audi_no
	</select>
	<select id="selectByAudNo" parameterType="int" resultType="com.talkabout.dto.Audience">
       SELECT * FROM Audience
       WHERE audi_no = #{audi_no}
       ORDER BY audi_no
	</select>
	<select id="selectByDeb" parameterType="hashmap" resultType="com.talkabout.dto.Audience">
		SELECT * 
		FROM Audience
		WHERE audi_deb = #{deb_no} and audi_mem = #{mem_no}
		ORDER BY audi_no
	</select>
	<select id="selectCnt" parameterType="hashmap" resultMap="cntResulMap">
		SELECT * 
		FROM Audience
		WHERE audi_deb = #{deb_no} and audi_mem = #{mem_no}
		ORDER BY audi_no
	</select>
	<insert id="insertVote" parameterType="hashmap">
		INSERT INTO AUDIENCE 
		VALUES (AUDI_SEQ.NEXTVAL, #{deb_no}, #{mem_no}, 2);
	</insert>
	<update id="updateVote" parameterType="com.talkabout.dto.Audience">
		UPDATE AUDIENCE 
		SET VOTE = #{vote} 
		WHERE AUDI_NO = #{audi_no}
	</update>
	
	<!--
		Debate
		- selectAllDeb : 전체 리스트 출력 JOIN DebateDetail
		- updateStatus : 토론 종료 버튼 클릭 시 debate_status update
		- updateEndDate : 토론 종료 버튼 클릭 시 debate_enddate update
	-->
	<select id="selectAllDeb" resultMap="debateResultMap">
    	SELECT * 
    	FROM Debate
    	ORDER BY debate_no
	</select>
	<update id="updateStatus" parameterType="com.talkabout.dto.Debate">
		UPDATE Debate 
		SET debate_status = #{debate_status} 
		WHERE debate_no = #{debate_no}
	</update>
	<update id="updateEndDate" parameterType="com.talkabout.dto.Debate">
		UPDATE Debate 
		SET debate_endDate = #{debate_endDate} 
		WHERE debate_no = #{debate_no}
	</update>
	
	<!--
		DebateDetail 
		- selectTwoByDeb : 주장 A, B 행 가져오기 By 토론번호(deb_no)
		- selectDetailByDeb : selectOne By 토론번호(deb_no), 토론자(discussor)
		- updateIntime : 토론실제시작시간 Update By DebateDetail 객체
		- updateEvidence : 근거 Update By DebateDetail 객체, 근거 번호(evi_no)
	-->
	<select id="selectTwoByDeb" parameterType="int" resultMap="ddResultMap">
		SELECT * 
		FROM DebateDetail
		WHERE detail_deb = #{deb_no}
		ORDER BY detail_no
	</select>
	<select id="selectDetailByDeb" parameterType="hashmap" resultMap="ddResultMap">
		SELECT * 
		FROM DebateDetail
		WHERE detail_deb = #{deb_no} and discussor = #{mem_no}
		ORDER BY detail_no
	</select>
	<update id="updateIntime" parameterType="com.talkabout.dto.DebateDetail">
		UPDATE DebateDetail 
		SET in_time = #{in_time} 
		WHERE detail_no = #{detail_no}
	</update>
	<update id="updateEvidence" parameterType="hashmap">
		UPDATE DebateDetail 
		<set>
			<if test="evi_no == 1"> evi_one = #{dd.evi_one}</if>
			<if test="evi_no == 2"> evi_two = #{dd.evi_two}</if>
			<if test="evi_no == 3"> evi_three = #{dd.evi_three}</if>
		</set>
		WHERE detail_no = #{dd.detail_no}
	</update>
</mapper>



